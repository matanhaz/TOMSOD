{"bugs": ["org.apache.commons.csv.csvprinter.csvprinter(appendable;csvformat)"], "components_names": [[0, "org.apache.commons.csv.assertions.notnull(object;string)"], [1, "org.apache.commons.csv.csvformat.csvformat(char;character;quote;character;character;boolean;boolean;string;string;string[];boolean)"], [2, "org.apache.commons.csv.csvformat.getdelimiter()"], [3, "org.apache.commons.csv.csvformat.getrecordseparator()"], [4, "org.apache.commons.csv.csvformat.isescaping()"], [5, "org.apache.commons.csv.csvformat.islinebreak(char)"], [6, "org.apache.commons.csv.csvformat.islinebreak(character)"], [7, "org.apache.commons.csv.csvformat.isquoting()"], [8, "org.apache.commons.csv.csvformat.validate()"], [9, "org.apache.commons.csv.csvformat.withheader(string[])"], [10, "org.apache.commons.csv.csvformat.withquotechar(character)"], [11, "org.apache.commons.csv.csvprinter.csvprinter(appendable;csvformat)"], [12, "org.apache.commons.csv.csvprinter.print(object)"], [13, "org.apache.commons.csv.csvprinter.print(object;charsequence;int;int)"], [14, "org.apache.commons.csv.csvprinter.printrecord(object[])"], [15, "org.apache.commons.csv.csvprinter.println()"]], "tests_details": [["org.apache.commons.csv.assertionstest.testnotnull()", [0], 0], ["org.apache.commons.csv.assertionstest.testnotnullnull()", [0], 0], ["org.apache.commons.csv.csvfileparsertest.testcsvfile()", [0, 1, 2, 4, 5, 6, 7, 8, 10], 0], ["org.apache.commons.csv.csvformattest.testdelimitersameascommentstartthrowsexception()", [1, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvformattest.testdelimitersameasescapethrowsexception()", [1, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvformattest.testduplicateheaderelements()", [1, 5, 6, 9, 10], 0], ["org.apache.commons.csv.csvformattest.testequals()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testequalscommentstart()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testequalsdelimiter()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testequalsescape()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testequalsheader()", [1, 5, 6, 9, 10], 0], ["org.apache.commons.csv.csvformattest.testequalsignoreemptylines()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testequalsignoresurroundingspaces()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testequalsnullstring()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testequalsquotechar()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testequalsquotepolicy()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testequalsrecordseparator()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testequalsskipheaderrecord()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testescapesameascommentstartthrowsexception()", [1, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvformattest.testescapesameascommentstartthrowsexceptionforwrappertype()", [1, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvformattest.testformat()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvformattest.testgetheader()", [1, 5, 6, 9, 10], 0], ["org.apache.commons.csv.csvformattest.testnullrecordseparatorcsv106()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvformattest.testquotecharsameascommentstartthrowsexception()", [1, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvformattest.testquotecharsameascommentstartthrowsexceptionforwrappertype()", [1, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvformattest.testquotecharsameasdelimiterthrowsexception()", [1, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvformattest.testquotepolicynonewithoutescapethrowsexception()", [1, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvformattest.testrfc4180()", [1, 2, 3, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testserialization()", [1, 2, 3, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithcommentstart()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithcommentstartcrthrowsexception()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithdelimiter()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithdelimiterlfthrowsexception()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithescape()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithescapecrthrowsexceptions()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithheader()", [1, 5, 6, 9, 10], 0], ["org.apache.commons.csv.csvformattest.testwithignoreemptylines()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithignoresurround()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithnullstring()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithquotechar()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithquotelfthrowsexception()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithquotepolicy()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvformattest.testwithrecordseparator()", [1, 3, 5, 6, 10], 0], ["org.apache.commons.csv.csvparsertest.testbackslashescaping()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testbackslashescaping2()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testcarriagereturnendings()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testcarriagereturnlinefeedendings()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testclose()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.csvparsertest.testcsv57()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testdefaultformat()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testduplicateheaderentries()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.csvparsertest.testemptyfile()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testemptylinebehaviourcsv()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testemptylinebehaviourexcel()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testendoffilebehaviorcsv()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testendoffilebehaviourexcel()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testexcelformat1()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testexcelformat2()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testforeach()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetheadermap()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetline()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetlinenumberwithcr()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetlinenumberwithcrlf()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetlinenumberwithlf()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetoneline()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetonelinecustomcollection()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetonelineoneparser()", [0, 1, 2, 3, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetrecordnumberwithcr()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetrecordnumberwithcrlf()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetrecordnumberwithlf()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetrecords()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testgetrecordwithmultilinevalues()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testheader()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.csvparsertest.testheadercomment()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.csvparsertest.testignoreemptylines()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testinvalidformat()", [1, 5, 6, 10], 0], ["org.apache.commons.csv.csvparsertest.testiterator()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testlinefeedendings()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testmappedbutnotsetasoutlook2007contactexport()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.csvparsertest.testmultipleiterators()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testnewcsvparsernullreaderformat()", [0, 1, 5, 6, 10], 0], ["org.apache.commons.csv.csvparsertest.testnewcsvparserreadernullformat()", [0], 0], ["org.apache.commons.csv.csvparsertest.testnoheadermap()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvparsertest.testparsefilenullformat()", [0], 0], ["org.apache.commons.csv.csvparsertest.testparsenullfileformat()", [0, 1, 5, 6, 10], 0], ["org.apache.commons.csv.csvparsertest.testparsenullstringformat()", [0, 1, 5, 6, 10], 0], ["org.apache.commons.csv.csvparsertest.testparsenullurlcharsetformat()", [0, 1, 5, 6, 10], 0], ["org.apache.commons.csv.csvparsertest.testparserurlnullcharsetformat()", [0, 1, 5, 6, 10], 0], ["org.apache.commons.csv.csvparsertest.testparsestringnullformat()", [0], 0], ["org.apache.commons.csv.csvparsertest.testparseurlcharsetnullformat()", [0], 0], ["org.apache.commons.csv.csvparsertest.testprovidedheader()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.csvparsertest.testprovidedheaderauto()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.csvparsertest.testroundtrip()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15], 0], ["org.apache.commons.csv.csvparsertest.testskipautoheader()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.csvparsertest.testskipsetheader()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.csvprintertest.testdelimeterquoted()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvprintertest.testdelimeterquotenone()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvprintertest.testdelimiterescaped()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvprintertest.testdelimiterplain()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvprintertest.testdisabledcomment()", [0, 1, 3, 5, 6, 8, 10, 11], 0], ["org.apache.commons.csv.csvprintertest.testeolescaped()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvprintertest.testeolplain()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvprintertest.testeolquoted()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvprintertest.testexcelprintallarrayofarrays()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testexcelprintallarrayoflists()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15], 0], ["org.apache.commons.csv.csvprintertest.testexcelprintalliterableofarrays()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testexcelprintalliterableoflists()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15], 0], ["org.apache.commons.csv.csvprintertest.testexcelprinter1()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testexcelprinter2()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testheader()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 1], ["org.apache.commons.csv.csvprintertest.testinvalidformat()", [1, 3, 5, 6, 10], 0], ["org.apache.commons.csv.csvprintertest.testjdbcprinter()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15], 0], ["org.apache.commons.csv.csvprintertest.testmultilinecomment()", [0, 1, 3, 5, 6, 8, 10, 11, 15], 0], ["org.apache.commons.csv.csvprintertest.testnewcsvprinterappendablenullformat()", [0, 1, 3, 5, 6, 10, 11], 0], ["org.apache.commons.csv.csvprintertest.testnewcsvprinternullappendableformat()", [0, 1, 3, 5, 6, 10, 11], 0], ["org.apache.commons.csv.csvprintertest.testparsecustomnullvalues()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testplainescaped()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvprintertest.testplainplain()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvprintertest.testplainquoted()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvprintertest.testprint()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testprintcustomnullvalues()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testprinter1()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testprinter2()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testprinter3()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testprinter4()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testprinter5()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testprinter6()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testprinter7()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testprintnullvalues()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testquoteall()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testquotenonnumeric()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testrandom()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], 0], ["org.apache.commons.csv.csvprintertest.testsinglelinecomment()", [0, 1, 3, 5, 6, 8, 10, 11, 15], 0], ["org.apache.commons.csv.csvprintertest.testsinglequotequoted()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13], 0], ["org.apache.commons.csv.csvrecordtest.testremoveandaddcolumns()", [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15], 0], ["org.apache.commons.csv.csvrecordtest.testtomapwithnoheader()", [0, 1, 2, 5, 6, 8, 10], 0], ["org.apache.commons.csv.csvrecordtest.testtomapwithshortrecord()", [0, 1, 2, 5, 6, 8, 9, 10], 0], ["org.apache.commons.csv.lexertest.testbackslashwithescaping()", [1, 2, 4, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testbackslashwithoutescaping()", [1, 2, 4, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testbackspace()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testcomments()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testcommentsandemptylines()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testcr()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testdelimiteriswhitespace()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testescapedbackspace()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testescapedcharacter()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testescapedcontrolcharacter()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testescapedcontrolcharacter2()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testescapedcr()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testescapedff()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testescapedlf()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testescapedmysqlnullvalue()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testescapedtab()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testescapingateof()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testff()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testignoreemptylines()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testlf()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testnexttoken4()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testnexttoken5()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testnexttoken6()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testsurroundingspacesaredeleted()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testsurroundingtabsaredeleted()", [1, 2, 5, 6, 10], 0], ["org.apache.commons.csv.lexertest.testtab()", [1, 2, 5, 6, 10], 0]], "initial_tests": ["org.apache.commons.csv.assertionstest.testnotnull()", "org.apache.commons.csv.assertionstest.testnotnullnull()", "org.apache.commons.csv.csvfileparsertest.testcsvfile()", "org.apache.commons.csv.csvformattest.testdelimitersameascommentstartthrowsexception()", "org.apache.commons.csv.csvformattest.testdelimitersameasescapethrowsexception()", "org.apache.commons.csv.csvformattest.testduplicateheaderelements()", "org.apache.commons.csv.csvformattest.testequals()", "org.apache.commons.csv.csvformattest.testequalscommentstart()", "org.apache.commons.csv.csvformattest.testequalsdelimiter()", "org.apache.commons.csv.csvformattest.testequalsescape()", "org.apache.commons.csv.csvformattest.testequalsheader()", "org.apache.commons.csv.csvformattest.testequalsignoreemptylines()", "org.apache.commons.csv.csvformattest.testequalsignoresurroundingspaces()", "org.apache.commons.csv.csvformattest.testequalsnullstring()", "org.apache.commons.csv.csvformattest.testequalsquotechar()", "org.apache.commons.csv.csvformattest.testequalsquotepolicy()", "org.apache.commons.csv.csvformattest.testequalsrecordseparator()", "org.apache.commons.csv.csvformattest.testequalsskipheaderrecord()", "org.apache.commons.csv.csvformattest.testescapesameascommentstartthrowsexception()", "org.apache.commons.csv.csvformattest.testescapesameascommentstartthrowsexceptionforwrappertype()", "org.apache.commons.csv.csvformattest.testformat()", "org.apache.commons.csv.csvformattest.testgetheader()", "org.apache.commons.csv.csvformattest.testnullrecordseparatorcsv106()", "org.apache.commons.csv.csvformattest.testquotecharsameascommentstartthrowsexception()", "org.apache.commons.csv.csvformattest.testquotecharsameascommentstartthrowsexceptionforwrappertype()", "org.apache.commons.csv.csvformattest.testquotecharsameasdelimiterthrowsexception()", "org.apache.commons.csv.csvformattest.testquotepolicynonewithoutescapethrowsexception()", "org.apache.commons.csv.csvformattest.testrfc4180()", "org.apache.commons.csv.csvformattest.testserialization()", "org.apache.commons.csv.csvformattest.testwithcommentstart()", "org.apache.commons.csv.csvformattest.testwithcommentstartcrthrowsexception()", "org.apache.commons.csv.csvformattest.testwithdelimiter()", "org.apache.commons.csv.csvformattest.testwithdelimiterlfthrowsexception()", "org.apache.commons.csv.csvformattest.testwithescape()", "org.apache.commons.csv.csvformattest.testwithescapecrthrowsexceptions()", "org.apache.commons.csv.csvformattest.testwithheader()", "org.apache.commons.csv.csvformattest.testwithignoreemptylines()", "org.apache.commons.csv.csvformattest.testwithignoresurround()", "org.apache.commons.csv.csvformattest.testwithnullstring()", "org.apache.commons.csv.csvformattest.testwithquotechar()", "org.apache.commons.csv.csvformattest.testwithquotelfthrowsexception()", "org.apache.commons.csv.csvformattest.testwithquotepolicy()", "org.apache.commons.csv.csvformattest.testwithrecordseparator()", "org.apache.commons.csv.csvparsertest.testbackslashescaping()", "org.apache.commons.csv.csvparsertest.testbackslashescaping2()", "org.apache.commons.csv.csvparsertest.testcarriagereturnendings()", "org.apache.commons.csv.csvparsertest.testcarriagereturnlinefeedendings()", "org.apache.commons.csv.csvparsertest.testclose()", "org.apache.commons.csv.csvparsertest.testcsv57()", "org.apache.commons.csv.csvparsertest.testdefaultformat()", "org.apache.commons.csv.csvparsertest.testduplicateheaderentries()", "org.apache.commons.csv.csvparsertest.testemptyfile()", "org.apache.commons.csv.csvparsertest.testemptylinebehaviourcsv()", "org.apache.commons.csv.csvparsertest.testemptylinebehaviourexcel()", "org.apache.commons.csv.csvparsertest.testendoffilebehaviorcsv()", "org.apache.commons.csv.csvparsertest.testendoffilebehaviourexcel()", "org.apache.commons.csv.csvparsertest.testexcelformat1()", "org.apache.commons.csv.csvparsertest.testexcelformat2()", "org.apache.commons.csv.csvparsertest.testforeach()", "org.apache.commons.csv.csvparsertest.testgetheadermap()", "org.apache.commons.csv.csvparsertest.testgetline()", "org.apache.commons.csv.csvparsertest.testgetlinenumberwithcr()", "org.apache.commons.csv.csvparsertest.testgetlinenumberwithcrlf()", "org.apache.commons.csv.csvparsertest.testgetlinenumberwithlf()", "org.apache.commons.csv.csvparsertest.testgetoneline()", "org.apache.commons.csv.csvparsertest.testgetonelinecustomcollection()", "org.apache.commons.csv.csvparsertest.testgetonelineoneparser()", "org.apache.commons.csv.csvparsertest.testgetrecordnumberwithcr()", "org.apache.commons.csv.csvparsertest.testgetrecordnumberwithcrlf()", "org.apache.commons.csv.csvparsertest.testgetrecordnumberwithlf()", "org.apache.commons.csv.csvparsertest.testgetrecords()", "org.apache.commons.csv.csvparsertest.testgetrecordwithmultilinevalues()", "org.apache.commons.csv.csvparsertest.testheader()", "org.apache.commons.csv.csvparsertest.testheadercomment()", "org.apache.commons.csv.csvparsertest.testignoreemptylines()", "org.apache.commons.csv.csvparsertest.testinvalidformat()", "org.apache.commons.csv.csvparsertest.testiterator()", "org.apache.commons.csv.csvparsertest.testlinefeedendings()", "org.apache.commons.csv.csvparsertest.testmappedbutnotsetasoutlook2007contactexport()", "org.apache.commons.csv.csvparsertest.testmultipleiterators()", "org.apache.commons.csv.csvparsertest.testnewcsvparsernullreaderformat()", "org.apache.commons.csv.csvparsertest.testnewcsvparserreadernullformat()", "org.apache.commons.csv.csvparsertest.testnoheadermap()", "org.apache.commons.csv.csvparsertest.testparsefilenullformat()", "org.apache.commons.csv.csvparsertest.testparsenullfileformat()", "org.apache.commons.csv.csvparsertest.testparsenullstringformat()", "org.apache.commons.csv.csvparsertest.testparsenullurlcharsetformat()", "org.apache.commons.csv.csvparsertest.testparserurlnullcharsetformat()", "org.apache.commons.csv.csvparsertest.testparsestringnullformat()", "org.apache.commons.csv.csvparsertest.testparseurlcharsetnullformat()", "org.apache.commons.csv.csvparsertest.testprovidedheader()", "org.apache.commons.csv.csvparsertest.testprovidedheaderauto()", "org.apache.commons.csv.csvparsertest.testroundtrip()", "org.apache.commons.csv.csvparsertest.testskipautoheader()", "org.apache.commons.csv.csvparsertest.testskipsetheader()", "org.apache.commons.csv.csvprintertest.testdelimeterquoted()", "org.apache.commons.csv.csvprintertest.testdelimeterquotenone()", "org.apache.commons.csv.csvprintertest.testdelimiterescaped()", "org.apache.commons.csv.csvprintertest.testdelimiterplain()", "org.apache.commons.csv.csvprintertest.testdisabledcomment()", "org.apache.commons.csv.csvprintertest.testeolescaped()", "org.apache.commons.csv.csvprintertest.testeolplain()", "org.apache.commons.csv.csvprintertest.testeolquoted()", "org.apache.commons.csv.csvprintertest.testexcelprintallarrayofarrays()", "org.apache.commons.csv.csvprintertest.testexcelprintallarrayoflists()", "org.apache.commons.csv.csvprintertest.testexcelprintalliterableofarrays()", "org.apache.commons.csv.csvprintertest.testexcelprintalliterableoflists()", "org.apache.commons.csv.csvprintertest.testexcelprinter1()", "org.apache.commons.csv.csvprintertest.testexcelprinter2()", "org.apache.commons.csv.csvprintertest.testheader()", "org.apache.commons.csv.csvprintertest.testinvalidformat()", "org.apache.commons.csv.csvprintertest.testjdbcprinter()", "org.apache.commons.csv.csvprintertest.testmultilinecomment()", "org.apache.commons.csv.csvprintertest.testnewcsvprinterappendablenullformat()", "org.apache.commons.csv.csvprintertest.testnewcsvprinternullappendableformat()", "org.apache.commons.csv.csvprintertest.testparsecustomnullvalues()", "org.apache.commons.csv.csvprintertest.testplainescaped()", "org.apache.commons.csv.csvprintertest.testplainplain()", "org.apache.commons.csv.csvprintertest.testplainquoted()", "org.apache.commons.csv.csvprintertest.testprint()", "org.apache.commons.csv.csvprintertest.testprintcustomnullvalues()", "org.apache.commons.csv.csvprintertest.testprinter1()", "org.apache.commons.csv.csvprintertest.testprinter2()", "org.apache.commons.csv.csvprintertest.testprinter3()", "org.apache.commons.csv.csvprintertest.testprinter4()", "org.apache.commons.csv.csvprintertest.testprinter5()", "org.apache.commons.csv.csvprintertest.testprinter6()", "org.apache.commons.csv.csvprintertest.testprinter7()", "org.apache.commons.csv.csvprintertest.testprintnullvalues()", "org.apache.commons.csv.csvprintertest.testquoteall()", "org.apache.commons.csv.csvprintertest.testquotenonnumeric()", "org.apache.commons.csv.csvprintertest.testrandom()", "org.apache.commons.csv.csvprintertest.testsinglelinecomment()", "org.apache.commons.csv.csvprintertest.testsinglequotequoted()", "org.apache.commons.csv.csvrecordtest.testremoveandaddcolumns()", "org.apache.commons.csv.csvrecordtest.testtomapwithnoheader()", "org.apache.commons.csv.csvrecordtest.testtomapwithshortrecord()", "org.apache.commons.csv.lexertest.testbackslashwithescaping()", "org.apache.commons.csv.lexertest.testbackslashwithoutescaping()", "org.apache.commons.csv.lexertest.testbackspace()", "org.apache.commons.csv.lexertest.testcomments()", "org.apache.commons.csv.lexertest.testcommentsandemptylines()", "org.apache.commons.csv.lexertest.testcr()", "org.apache.commons.csv.lexertest.testdelimiteriswhitespace()", "org.apache.commons.csv.lexertest.testescapedbackspace()", "org.apache.commons.csv.lexertest.testescapedcharacter()", "org.apache.commons.csv.lexertest.testescapedcontrolcharacter()", "org.apache.commons.csv.lexertest.testescapedcontrolcharacter2()", "org.apache.commons.csv.lexertest.testescapedcr()", "org.apache.commons.csv.lexertest.testescapedff()", "org.apache.commons.csv.lexertest.testescapedlf()", "org.apache.commons.csv.lexertest.testescapedmysqlnullvalue()", "org.apache.commons.csv.lexertest.testescapedtab()", "org.apache.commons.csv.lexertest.testescapingateof()", "org.apache.commons.csv.lexertest.testff()", "org.apache.commons.csv.lexertest.testignoreemptylines()", "org.apache.commons.csv.lexertest.testlf()", "org.apache.commons.csv.lexertest.testnexttoken4()", "org.apache.commons.csv.lexertest.testnexttoken5()", "org.apache.commons.csv.lexertest.testnexttoken6()", "org.apache.commons.csv.lexertest.testsurroundingspacesaredeleted()", "org.apache.commons.csv.lexertest.testsurroundingtabsaredeleted()", "org.apache.commons.csv.lexertest.testtab()"]}