{
    "functions": {
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getLine": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getLine CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setIgnoreEmptyLines": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setIgnoreEmptyLines CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setUnicodeEscapeInterpretation": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setUnicodeEscapeInterpretation CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.isEndOfFile": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.isEndOfFile CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.nextToken": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.nextToken CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.CSVParser": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.CSVParser CSVParser.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.CSVParser CSVParser.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.CSVParser CSVParser.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.CSVParser CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.Token": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.Token CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.parseLine": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.parseLine CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setDelimiter": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setDelimiter CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.simpleTokenLexer": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.simpleTokenLexer CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setStrategy": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setStrategy CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.unicodeEscapeLexer": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.unicodeEscapeLexer CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.nextValue": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.nextValue CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setEncapsulator": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setEncapsulator CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setCommentStart": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setCommentStart CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.parse": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.parse CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getUnicodeEscapeInterpretation": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getUnicodeEscapeInterpretation CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setCSVStrategy": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setCSVStrategy CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.encapsulatedTokenLexer": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getAllValues": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getAllValues CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getLineNumber": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getLineNumber CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.isWhitespace": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.isWhitespace CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getEncapsulator": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getEncapsulator CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setExcelStrategy": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setExcelStrategy CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setIgnoreLeadingWhitespaces": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setIgnoreLeadingWhitespaces CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getCommentStart": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getCommentStart CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getDelimiter": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getDelimiter CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getIgnoreLeadingWhitespaces": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getIgnoreLeadingWhitespaces CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVParser.isEndOfLine": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.isEndOfLine CSVParser.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.print": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.print CSVPrinter.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.println": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.println CSVPrinter.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.println CSVPrinter.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.println CSVPrinter.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.println CSVPrinter.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.printLine": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.printLine CSVPrinter.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.getSeparatorChar": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.getSeparatorChar CSVPrinter.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.CSVPrinter": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.escapeAndQuote": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.escapeAndQuote CSVPrinter.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.getCommentStart": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.getCommentStart CSVPrinter.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.printlnComment": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.printlnComment CSVPrinter.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.setCommentStart": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.setCommentStart CSVPrinter.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.setSeparatorChar": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.setSeparatorChar CSVPrinter.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.read": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.ExtendedBufferedReader": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.lookAhead": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readLine": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readUntil": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readUntil ExtendedBufferedReader.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.skip": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.skip ExtendedBufferedReader.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.getLineNumber": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readAgain": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readAgain ExtendedBufferedReader.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.markSupported": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.markSupported ExtendedBufferedReader.java"
            ]
        },
        "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.skipUntil": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.skipUntil ExtendedBufferedReader.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.FormatTests.main": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.FormatTests.main FormatTests.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.FormatTests.suite": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.FormatTests.suite FormatTests.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.FormatTests.FormatTests": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.FormatTests.FormatTests FormatTests.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testCarriageReturnLineFeedEndings": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine5": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine5 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testExcelStrategyTest": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testExcelStrategyTest CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetDelimiter": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetDelimiter CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine1": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine1 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.TestCSVParser": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.TestCSVParser CSVParserTest.java",
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse4": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse4 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testExcelStrategyTest2": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testExcelStrategyTest2 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextValue": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextValue CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetLine": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetLine CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse3": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse3 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine3": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine3 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.CSVParserTest": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.CSVParserTest CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken4": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken4 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken1": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken1 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken5": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken6": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testIgnoreEmptyLines": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine2": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine2 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine6": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine6 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testSetCSVStrategy": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testSetCSVStrategy CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine7": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine7 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.suite": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.suite CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse7": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse7 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken3": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetCommentStart": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetCommentStart CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse1": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse1 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine4": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine4 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetEncapsulator": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetEncapsulator CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testLineTokenConsistency": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testLineTokenConsistency CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse2": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse2 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testUnicodeEscape": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse5": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse5 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse6": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse6 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetAllValues": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetAllValues CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken2": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testExcelPrinter1": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter3": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter1": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testExcelPrinter2": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.suite": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.suite CSVPrinterTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter2": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.CSVPrinterTest": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.CSVPrinterTest CSVPrinterTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.suite": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.suite ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testSkip0": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testSkip0 ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLookahead1": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testMarkSupported": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testMarkSupported ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testSkipUntil": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testSkipUntil ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.ExtendedBufferedReaderTest": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.ExtendedBufferedReaderTest ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLookahead2": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testConstructors": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testConstructors ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadUntil": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadUntil ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLine": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.getEBR": {
            "message": [
                "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.getEBR ExtendedBufferedReaderTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setFieldHeader": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFieldHeader CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFieldHeader CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreValueDelimiter": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreValueDelimiter CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreValueDelimiter CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.getField": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getField CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getField CSVConfig.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getField CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setEndTrimmed": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setEndTrimmed CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setEndTrimmed CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.isFixedWidth": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isFixedWidth CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isFixedWidth CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.isDelimiterIgnored": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isDelimiterIgnored CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isDelimiterIgnored CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setValueDelimiter": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setValueDelimiter CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setValueDelimiter CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.getDelimiter": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getDelimiter CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getDelimiter CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.isEndTrimmed": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isEndTrimmed CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isEndTrimmed CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.isValueDelimiterIgnored": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isValueDelimiterIgnored CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isValueDelimiterIgnored CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.getFill": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFill CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFill CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.getFields": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFields CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFields CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setFillChar": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFillChar CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFillChar CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setDelimiter": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setDelimiter CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setDelimiter CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.isFieldHeader": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isFieldHeader CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isFieldHeader CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.getValueDelimiter": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getValueDelimiter CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getValueDelimiter CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setFill": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFill CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFill CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreDelimiter": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreDelimiter CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreDelimiter CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.addField": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.addField CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.addField CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setFixedWidth": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFixedWidth CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFixedWidth CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setFields": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFields CSVConfig.java",
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFields CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFields CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFields CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.getFillChar": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFillChar CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFillChar CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.equals": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.equals CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.equals CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.CSVConfig": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.CSVConfig CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.CSVConfig CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.guessConfig": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.guessConfig CSVConfig.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.guessConfig CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.analyseLines": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.analyseLines CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.analyseLines CSVConfigGuesser.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFieldSeperator": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFieldSeperator CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFieldSeperator CSVConfigGuesser.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidth": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidth CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidth CSVConfigGuesser.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidthSeperator": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidthSeperator CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidthSeperator CSVConfigGuesser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidthSeperator CSVConfigGuesser.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setInputStream": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setInputStream CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setInputStream CSVConfigGuesser.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.CSVConfigGuesser": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.CSVConfigGuesser CSVConfigGuesser.java",
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.CSVConfigGuesser CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.CSVConfigGuesser CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.CSVConfigGuesser CSVConfigGuesser.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.hasFieldHeader": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.hasFieldHeader CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.hasFieldHeader CSVConfigGuesser.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setHasFieldHeader": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setHasFieldHeader CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setHasFieldHeader CSVConfigGuesser.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.getInputStream": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.getInputStream CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.getInputStream CSVConfigGuesser.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guess": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guess CSVConfigGuesser.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guess CSVConfigGuesser.java",
                "Make sure only 10 lines or less are read. Thanx to Stuart Robertson for noticing\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@526450 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guess CSVConfigGuesser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guess CSVConfigGuesser.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVField.CSVField": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java",
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java",
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVField.setSize": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setSize CSVField.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setSize CSVField.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVField.setName": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setName CSVField.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setName CSVField.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVField.setFill": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setFill CSVField.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setFill CSVField.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVField.getSize": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getSize CSVField.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getSize CSVField.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVField.getFill": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getFill CSVField.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getFill CSVField.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVField.overrideFill": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.overrideFill CSVField.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.overrideFill CSVField.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVField.getName": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getName CSVField.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getName CSVField.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVWriter.setWriter": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.setWriter CSVWriter.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.setWriter CSVWriter.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord CSVWriter.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord CSVWriter.java",
                "SANDBOX-202: CSVWriter can't handle missing entries in the Map - or non-String map values\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@608911 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord CSVWriter.java",
                "Apply configurable row delimiter by Dmitry Drozdov (SANDBOX-329).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1003046 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord CSVWriter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord CSVWriter.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVWriter.writeValue": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeValue CSVWriter.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeValue CSVWriter.java",
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeValue CSVWriter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeValue CSVWriter.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVWriter.getConfig": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.getConfig CSVWriter.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.getConfig CSVWriter.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVWriter.setConfig": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.setConfig CSVWriter.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.setConfig CSVWriter.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVWriter.CSVWriter": {
            "message": [
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.CSVWriter CSVWriter.java",
                "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.CSVWriter CSVWriter.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.CSVWriter CSVWriter.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.CSVWriter CSVWriter.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess2": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess2 CSVConfigGuesserTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess2 CSVConfigGuesserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess1": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess1 CSVConfigGuesserTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess1 CSVConfigGuesserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testSetters": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testSetters CSVConfigGuesserTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testSetters CSVConfigGuesserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVConfigTest.testDelimiter": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testDelimiter CSVConfigTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testDelimiter CSVConfigTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVConfigTest.testFixedWith": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFixedWith CSVConfigTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFixedWith CSVConfigTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVConfigTest.testFields": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFields CSVConfigTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFields CSVConfigTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFields CSVConfigTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVConfigTest.testFieldHeader": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFieldHeader CSVConfigTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFieldHeader CSVConfigTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVConfigTest.testValueDelimiter": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testValueDelimiter CSVConfigTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testValueDelimiter CSVConfigTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVConfigTest.testFill": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFill CSVConfigTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFill CSVConfigTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVConfigTest.testTrimEnd": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testTrimEnd CSVConfigTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testTrimEnd CSVConfigTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVFieldTest.testCSVField": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVFieldTest.testCSVField CSVFieldTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVFieldTest.testCSVField CSVFieldTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVFieldTest.testFill": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVFieldTest.testFill CSVFieldTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVFieldTest.testFill CSVFieldTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.testCSVConfig": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testCSVConfig CSVWriterTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testCSVConfig CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriter": {
            "message": [
                "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriter CSVWriterTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriter CSVWriterTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.setCSVStrategy": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setCSVStrategy CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.getLine": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java",
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java",
                "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java",
                "fix eol detection\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@558883 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.setIgnoreEmptyLines": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setIgnoreEmptyLines CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.setUnicodeEscapeInterpretation": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setUnicodeEscapeInterpretation CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.getLineNumber": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.nextToken": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "SANDBOX-313: Endless loops in CSV parser when last line is comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@964273 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "Fix for issue reported in SANDBOX-218: CSV reader doesn't handle older Mac line endings (\\r) that are also used by recent versions of Excel for Mac.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065496 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "Fixes for typos in comments and javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065549 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.getIgnoreEmptyLines": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getIgnoreEmptyLines CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.setDelimiter": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setDelimiter CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.setExcelStrategy": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setExcelStrategy CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "Moved back to JDK 1.3 compatibility. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@412968 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.setIgnoreLeadingWhitespaces": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setIgnoreLeadingWhitespaces CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.setStrategy": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setStrategy CSVParser.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setStrategy CSVParser.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setStrategy CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.setEncapsulator": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setEncapsulator CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.setCommentStart": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setCommentStart CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.parse": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testParse4": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testParse4 CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.CSVParserTest": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.CSVParserTest CSVParserTest.java",
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.CSVParserTest CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testNextValue": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextValue CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextValue CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextValue CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testGetLine": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testNextToken4": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testNextToken1": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testNextToken5": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1 CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1 CSVParserTest.java",
                "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1 CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1 CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1 CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testSetExcelStrategy": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testSetExcelStrategy CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testSetCSVStrategy": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testSetCSVStrategy CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testNextToken3": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java",
                "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testLineTokenConsistency": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testLineTokenConsistency CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testLineTokenConsistency CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testLineTokenConsistency CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testUnicodeEscape": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testParse6": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testParse6 CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testGetAllValues": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetAllValues CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetAllValues CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetAllValues CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testNextToken2": {
            "message": [
                "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.getStrategy": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getStrategy CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getStrategy CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.CSVParser": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "CSVParser constructor with CSVStrategy: SANDBOX-180\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@477503 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "CSVParser constructor with CSVStrategy: SANDBOX-180\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@477503 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Resolved warning caused by the usage of a deprecated constructor.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065526 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.getEncapsulator": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getEncapsulator CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getEncapsulator CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.getDelimiter": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getDelimiter CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getDelimiter CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.setDelimiter": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setDelimiter CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setDelimiter CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.setEncapsulator": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setEncapsulator CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setEncapsulator CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.getUnicodeEscapeInterpretation": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getUnicodeEscapeInterpretation CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getUnicodeEscapeInterpretation CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.getCommentStart": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getCommentStart CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getCommentStart CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "Breaking lines that are > 120\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631131 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.setCommentStart": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setCommentStart CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setCommentStart CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.setIgnoreLeadingWhitespaces": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreLeadingWhitespaces CSVStrategy.java",
                "Breaking lines that are > 120\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631131 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreLeadingWhitespaces CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreLeadingWhitespaces CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.getIgnoreLeadingWhitespaces": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreLeadingWhitespaces CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreLeadingWhitespaces CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.setIgnoreEmptyLines": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreEmptyLines CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreEmptyLines CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.getIgnoreEmptyLines": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreEmptyLines CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreEmptyLines CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.setUnicodeEscapeInterpretation": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setUnicodeEscapeInterpretation CSVStrategy.java",
                "Breaking lines that are > 120\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631131 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setUnicodeEscapeInterpretation CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setUnicodeEscapeInterpretation CSVStrategy.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testNextToken6": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetCommentStart": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetCommentStart CSVStrategyTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetCommentStart CSVStrategyTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetCommentStart CSVStrategyTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVStrategyTest.testSetExcelStrategy": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetExcelStrategy CSVStrategyTest.java",
                "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetExcelStrategy CSVStrategyTest.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetExcelStrategy CSVStrategyTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetExcelStrategy CSVStrategyTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetEncapsulator": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetEncapsulator CSVStrategyTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetEncapsulator CSVStrategyTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetEncapsulator CSVStrategyTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetDelimiter": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetDelimiter CSVStrategyTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetDelimiter CSVStrategyTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetDelimiter CSVStrategyTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVStrategyTest.CSVStrategyTest": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.CSVStrategyTest CSVStrategyTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVStrategyTest.testSetCSVStrategy": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetCSVStrategy CSVStrategyTest.java",
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetCSVStrategy CSVStrategyTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetCSVStrategy CSVStrategyTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetCSVStrategy CSVStrategyTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVStrategyTest.suite": {
            "message": [
                "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.suite CSVStrategyTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.print": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Adding a minor optimisation as detailed in #SANDBOX-160 by Daniel Gredler. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@427471 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "SANDBOX-322: remember to print separators everywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@966014 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "SANDBOX-322: remember to print separators everywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@966014 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.setStrategy": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.setStrategy CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.getStrategy": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.getStrategy CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.printlnComment": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printlnComment CSVPrinter.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printlnComment CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printlnComment CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.isCommentingDisabled": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.isCommentingDisabled CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.isCommentingDisabled CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVUtils.printLine": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVUtils.parse": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parse CSVUtils.java",
                "Optimisation from Ortwin Glueck (#SANDBOX-166) in which empty String arrays are replaced with constants. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430240 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parse CSVUtils.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parse CSVUtils.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVUtils.parseLine": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parseLine CSVUtils.java",
                "Optimisation from Ortwin Glueck (#SANDBOX-166) in which empty String arrays are replaced with constants. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430240 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parseLine CSVUtils.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parseLine CSVUtils.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVUtils.CSVUtils": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.CSVUtils CSVUtils.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParse7": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse7 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse7 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine3": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine3 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine3 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParse5": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse5 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse5 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine4": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine4 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine4 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine2": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine2 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine2 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParse1": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse1 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse1 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParse3": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse3 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse3 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine1": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine1 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine1 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParse4": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse4 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse4 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine7": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine7 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine7 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine5": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine5 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine5 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParse6": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse6 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse6 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine6": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine6 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine6 CSVUtilsTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVUtilsTest.testParse2": {
            "message": [
                "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse2 CSVUtilsTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse2 CSVUtilsTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.isWhitespace": {
            "message": [
                "Fixing bug reported byu Markus Rogg in #SANDBOX-153. Whitespace was being treated specially when it was not the delimiter. Unit test and patch applied. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@427470 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.isWhitespace CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.isWhitespace CSVParser.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace": {
            "message": [
                "Fixing bug reported byu Markus Rogg in #SANDBOX-153. Whitespace was being treated specially when it was not the delimiter. Unit test and patch applied. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@427470 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.getAllValues": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getAllValues CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getAllValues CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.Token": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.Token CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.Token CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.unicodeEscapeLexer": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.unicodeEscapeLexer CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.unicodeEscapeLexer CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.ExtendedBufferedReader.readUntil": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.readUntil ExtendedBufferedReader.java"
            ]
        },
        "src.java.org.apache.commons.csv.ExtendedBufferedReader.readLine": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.append": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.clear": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.clear CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.clear CharBuffer.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.CharBuffer": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java",
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java",
                "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.shrink": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.shrink CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.shrink CharBuffer.java",
                "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.shrink CharBuffer.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.toString": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.toString CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.toString CharBuffer.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.provideCapacity": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java",
                "allocate extra space when expanding CharBuffer: SANDBOX-189\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@522920 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java",
                "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.length": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.length CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.length CharBuffer.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.capacity": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.capacity CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.capacity CharBuffer.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.getCharacters": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.getCharacters CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.getCharacters CharBuffer.java",
                "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.getCharacters CharBuffer.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.toStringBuffer": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.toStringBuffer CharBuffer.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.toStringBuffer CharBuffer.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testCreate": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testCreate CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testCreate CharBufferTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testCreate CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArrayBuffer": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArrayBuffer CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArrayBuffer CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testSimpleAppend": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testSimpleAppend CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testSimpleAppend CharBufferTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testSimpleAppend CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArray": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArray CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArray CharBufferTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArray CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testProvideCapacity": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testProvideCapacity CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testProvideCapacity CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testAppendChar": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendChar CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendChar CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testAppendCharBuffer": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharBuffer CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharBuffer CharBufferTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharBuffer CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testShrink": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testShrink CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testShrink CharBufferTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testShrink CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testAppendStringBuffer": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendStringBuffer CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendStringBuffer CharBufferTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendStringBuffer CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testAppendNull": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendNull CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendNull CharBufferTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendNull CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testAppendString": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendString CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendString CharBufferTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendString CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testAppendString2": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendString2 CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendString2 CharBufferTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CharBufferTest.testAppendSingleChar": {
            "message": [
                "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendSingleChar CharBufferTest.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendSingleChar CharBufferTest.java"
            ]
        },
        "src.test.AllTests.suite": {
            "message": [
                "added test suites\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430326 13f79535-47bb-0310-9956-ffa450edef68 src.test.AllTests.suite AllTests.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.AllTests.suite AllTests.java"
            ]
        },
        "src.test.org.apache.commons.csv.AllTests.suite": {
            "message": [
                "added test suites\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430326 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.AllTests.suite AllTests.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.AllTests.suite AllTests.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.AllTests.suite": {
            "message": [
                "added test suites\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430326 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.AllTests.suite AllTests.java",
                "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.AllTests.suite AllTests.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.clone": {
            "message": [
                "make CSVStrategy cloneable and serializable: SANDBOX-181\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@477490 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.clone CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.clone CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.ExtendedBufferedReader.read": {
            "message": [
                "prevent blocking on lookahead after EOL: SANDBOX-173\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@501543 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.escapeAndQuote": {
            "message": [
                "use strategy encapsulator in printer rather than assuming double-quote\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@558885 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.escapeAndQuote CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.readEscape": {
            "message": [
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.readEscape CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.readEscape CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.setEscape": {
            "message": [
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setEscape CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setEscape CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.getEscape": {
            "message": [
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getEscape CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getEscape CSVStrategy.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping": {
            "message": [
                "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping CSVParserTest.java",
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping CSVParserTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.setIgnoreTrailingWhitespaces": {
            "message": [
                "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreTrailingWhitespaces CSVStrategy.java",
                "Breaking lines that are > 120\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631131 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreTrailingWhitespaces CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreTrailingWhitespaces CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.getIgnoreTrailingWhitespaces": {
            "message": [
                "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreTrailingWhitespaces CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreTrailingWhitespaces CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.charAt": {
            "message": [
                "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.charAt CharBuffer.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.charAt CharBuffer.java"
            ]
        },
        "src.java.org.apache.commons.csv.CharBuffer.trimTrailingWhitespace": {
            "message": [
                "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.trimTrailingWhitespace CharBuffer.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.trimTrailingWhitespace CharBuffer.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser": {
            "message": [
                "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testSkip0": {
            "message": [
                "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testSkip0 ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1": {
            "message": [
                "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2": {
            "message": [
                "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testConstructors": {
            "message": [
                "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testConstructors ExtendedBufferedReaderTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testConstructors ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testSkipUntil": {
            "message": [
                "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testSkipUntil ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadUntil": {
            "message": [
                "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadUntil ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine": {
            "message": [
                "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.println": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.printSep": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printSep CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printSep CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.flush": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.printAndEscape": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "SANDBOX-322: remember to print separators everywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@966014 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "SANDBOX-322: remember to print separators everywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@966014 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.setPrinterNewline": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setPrinterNewline CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setPrinterNewline CSVStrategy.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVStrategy.getPrinterNewline": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getPrinterNewline CSVStrategy.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getPrinterNewline CSVStrategy.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testDefaultStrategy": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDefaultStrategy CSVParserTest.java",
                "SANDBOX-313: Endless loops in CSV parser when last line is comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@964273 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDefaultStrategy CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDefaultStrategy CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.equals": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java",
                "SANDBOX-313: Endless loops in CSV parser when last line is comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@964273 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter1": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.testRandom": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.printable": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.randStr": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter3": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.doRandom": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter2": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.doOneRandom": {
            "message": [
                "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.getRowDelimiter": {
            "message": [
                "Apply configurable row delimiter by Dmitry Drozdov (SANDBOX-329).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1003046 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getRowDelimiter CSVConfig.java"
            ]
        },
        "src.java.org.apache.commons.csv.writer.CSVConfig.setRowDelimiter": {
            "message": [
                "Apply configurable row delimiter by Dmitry Drozdov (SANDBOX-329).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1003046 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setRowDelimiter CSVConfig.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterIgnoringDelimiter": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterIgnoringDelimiter CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterDefaults": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterDefaults CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitRowDelimiterCRLF": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitRowDelimiterCRLF CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.getConfig": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.getConfig CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.setUp": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.setUp CSVWriterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.setUp CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterIgnoringValueDelimiter": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterIgnoringValueDelimiter CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitRowDelimiterLF": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitRowDelimiterLF CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithoutHeader": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithoutHeader CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.todoTestWriterWithHeader": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.todoTestWriterWithHeader CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitValueDelimiter": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitValueDelimiter CSVWriterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitDelimiter": {
            "message": [
                "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitDelimiter CSVWriterTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.isEndOfLine": {
            "message": [
                "Fix for issue reported in SANDBOX-218: CSV reader doesn't handle older Mac line endings (\\r) that are also used by recent versions of Excel for Mac.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065496 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.isEndOfLine CSVParser.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.isEndOfLine CSVParser.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter7": {
            "message": [
                "Test cases for the scenarios described in SANDBOX-161:\n* Double quotes (\") should be escaped using two double quotes (\"\"), rather than a backslash (\\\").\n* Embedded line breaks are allowed and don't need to be escaped... just enclose the field in double quotes.\n* Because backslashes are not used to escape double quotes or line breaks, the backslashes themselves do not need to be escaped.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065519 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter4": {
            "message": [
                "Test cases for the scenarios described in SANDBOX-161:\n* Double quotes (\") should be escaped using two double quotes (\"\"), rather than a backslash (\\\").\n* Embedded line breaks are allowed and don't need to be escaped... just enclose the field in double quotes.\n* Because backslashes are not used to escape double quotes or line breaks, the backslashes themselves do not need to be escaped.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065519 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter5": {
            "message": [
                "Test cases for the scenarios described in SANDBOX-161:\n* Double quotes (\") should be escaped using two double quotes (\"\"), rather than a backslash (\\\").\n* Embedded line breaks are allowed and don't need to be escaped... just enclose the field in double quotes.\n* Because backslashes are not used to escape double quotes or line breaks, the backslashes themselves do not need to be escaped.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065519 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter6": {
            "message": [
                "Test cases for the scenarios described in SANDBOX-161:\n* Double quotes (\") should be escaped using two double quotes (\"\"), rather than a backslash (\\\").\n* Embedded line breaks are allowed and don't need to be escaped... just enclose the field in double quotes.\n* Because backslashes are not used to escape double quotes or line breaks, the backslashes themselves do not need to be escaped.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065519 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testLineFeedEndings": {
            "message": [
                "Test cases for \\r and \\n line endings (SANDBOX-218).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065525 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
            ]
        },
        "src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings": {
            "message": [
                "Test cases for \\r and \\n line endings (SANDBOX-218).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065525 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
            ]
        },
        "src.java.org.apache.commons.csv.ExtendedBufferedReader.markSupported": {
            "message": [
                "Applied patch contributed by Henri Yandell in SANDBOX-219: \"ExtendedBufferedReader does too much\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065948 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.markSupported ExtendedBufferedReader.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.markSupported ExtendedBufferedReader.java"
            ]
        },
        "src.java.org.apache.commons.csv.ExtendedBufferedReader.skip": {
            "message": [
                "Applied patch contributed by Henri Yandell in SANDBOX-219: \"ExtendedBufferedReader does too much\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065948 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.skip ExtendedBufferedReader.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.skip ExtendedBufferedReader.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.isEndOfFile": {
            "message": [
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.isEndOfFile CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.CSVParser.nextValue": {
            "message": [
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextValue CSVParser.java"
            ]
        },
        "src.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader": {
            "message": [
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java",
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
            ]
        },
        "src.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber": {
            "message": [
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java"
            ]
        },
        "src.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead": {
            "message": [
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
            ]
        },
        "src.java.org.apache.commons.csv.ExtendedBufferedReader.readAgain": {
            "message": [
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.readAgain ExtendedBufferedReader.java"
            ]
        },
        "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.getEBR": {
            "message": [
                "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.getEBR ExtendedBufferedReaderTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader": {
            "message": [
                "Removed an unused constructor in ExtendedBufferedReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199761 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java",
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java",
                "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java",
                "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461241 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java",
                "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461241 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy": {
            "message": [
                "Made the static fields final in CSVStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "Made the static fields final in CSVStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "Made the static fields final in CSVStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "Made the static fields final in CSVStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "Removed the deprecated constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "Removed the deprecated constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java",
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getAllValues": {
            "message": [
                "Changed the visibility of the Token types and the protected methods to package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getAllValues CSVParser.java",
                "Upgrading to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getAllValues CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.nextToken": {
            "message": [
                "Changed the visibility of the Token types and the protected methods to package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "Changed the visibility of the Token types and the protected methods to package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "Removed the package private method CSVParser.nextToken()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "Minor performance improvement (~2%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299486 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java",
                "Replaced CharBuffer with StringBuilder (CSV-59)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300659 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.unicodeEscapeLexer": {
            "message": [
                "Changed the visibility of the Token types and the protected methods to package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.unicodeEscapeLexer CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.CSVParser": {
            "message": [
                "Removed the deprecated constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Removed the deprecated constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Removed the deprecated constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "headerMapping is only created once, so make it final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Rename ivar headerMapping -> headerMap.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383920 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Remove whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397549 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Better method name. src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java",
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java",
                "Updated the Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297043 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java",
                "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java",
                "Changed while loops (CSV-55)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299706 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "Changed while loops (CSV-55)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299706 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java",
                "Replaced CharBuffer with StringBuilder (CSV-59)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300659 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.println": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Upgrading to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Standardise on record rather than line; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "[CSV-106] CSVFormat.format always append null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1577011 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Checkstyle: Line has trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742459 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.isTrailingSpacesIgnored": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.isTrailingSpacesIgnored CSVStrategy.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.isUnicodeEscapesInterpreted": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.isUnicodeEscapesInterpreted CSVStrategy.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.getEncapsulator": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.getEncapsulator CSVStrategy.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.isEmptyLinesIgnored": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.isEmptyLinesIgnored CSVStrategy.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.getCommentStart": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.getCommentStart CSVStrategy.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.getEscape": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.getEscape CSVStrategy.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.isLeadingSpacesIgnored": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.isLeadingSpacesIgnored CSVStrategy.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.clone": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.clone CSVStrategy.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.getDelimiter": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.getDelimiter CSVStrategy.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVStrategy.getLineSeparator": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.getLineSeparator CSVStrategy.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken3": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java",
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "Silence Eclipse warning about unthrown Exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298217 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "Check iterator is done\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300585 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken2": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java",
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withEmptyLinesIgnored CSVStrategy.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java",
                "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withEscape": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withEscape CSVStrategy.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Remove whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397080 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Removed the constructors of CSVFormat from the public API, as well as the DISABLED constant which becomes useless because the special characters are disabled by default in the predefined formats\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297930 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Removed the constructors of CSVFormat from the public API, as well as the DISABLED constant which becomes useless because the special characters are disabled by default in the predefined formats\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297930 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Removed the constructors of CSVFormat from the public API, as well as the DISABLED constant which becomes useless because the special characters are disabled by default in the predefined formats\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297930 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Calculate the booleans once; prepares for CSV-78\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305700 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-88] Not possible to create a CSVFormat from scratch. Should the validate method be public?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397877 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Fix param name and Javadoc to match ivar names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397925 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Fix param name and Javadoc to match ivar names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397925 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (',') seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397927 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (',') seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397927 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398012 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398012 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add ctor to create simplest possible CSV parser\nDoes not make sense to allow delim = EOL in ctor but disable it in withDelimiter()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398556 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add ctor to create simplest possible CSV parser\nDoes not make sense to allow delim = EOL in ctor but disable it in withDelimiter()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398556 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Multi-parameter ctor is confusing and unnecessary\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398563 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Make some methods package-protected to avoid the need for synthetic accessors.\nTODO consider whether to do so for the fields as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Fix formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458139 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458713 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Replace accidentally checked in tab characters with spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458721 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Better parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465753 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Better parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465753 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Make CSVFormat constructor package private since it is only used in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592833 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "CSV-114 CSVFormat constructor should reject a header array with duplicate entries\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593076 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "tab police\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593097 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Checkstyle: Line is longer than 120 characters (found 141).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602904 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Format \"for\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602906 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Checkstyle: '+' should be on the previous line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602907 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-134] Unified parameter validation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638699 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Remove trailing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742145 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Checkstyle: Line is too long\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742461 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Make parameters final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742462 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Make parameters final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742462 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withUnicodeEscapesInterpreted": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withUnicodeEscapesInterpreted CSVStrategy.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withUnicodeEscapesInterpreted CSVFormat.java",
                "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withUnicodeEscapesInterpreted CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withUnicodeEscapesInterpreted CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withUnicodeEscapesInterpreted CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withEncapsulator CSVStrategy.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Remove whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397080 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withTrailingSpacesIgnored CSVStrategy.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored CSVFormat.java",
                "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withLeadingSpacesIgnored CSVStrategy.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored CSVFormat.java",
                "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withLineSeparator CSVStrategy.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withCommentStart CSVStrategy.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Remove whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397080 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withDelimiter CSVStrategy.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Fixed the immutability of the delimiter in CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200283 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Remove whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397080 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Now that delimiter is a char, simplify API by removing withDelimiter(Character)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398349 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Now that delimiter is a char, simplify API by removing withDelimiter(Character)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398349 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Add ctor to create simplest possible CSV parser\nDoes not make sense to allow delim = EOL in ctor but disable it in withDelimiter()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398556 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getFormat": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getFormat CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.isWhitespace": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isWhitespace CSVParser.java",
                "Perform the cheaper test first\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300531 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isWhitespace CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printSep": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printSep CSVPrinter.java",
                "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printSep CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printSep CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Remove extra blank line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383567 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Fix NPE when format is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508938 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "<action issue=\"CSV-120\" type=\"add\" dev=\"ggregory\" due-to=\"Sergei Lebedev\">CSVFormat#withHeader doesn't work with CSVPrinter</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1601517 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "CSV-153: CSVPrinter doesn't skip creation of header record if skipHeaderRecord is set to true. Thanks to Wren. This also fixes #8 from github.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1706542 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Use streams.\nRemove unused imports. src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Only clone header comments once src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java",
                "Remove redundant keywords src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397534 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "Explicit unboxing; associated Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398365 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "Simplify code so delimiter only printed in one place\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479823 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.print": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Made CSVPrinter.print(char[], int, int, boolean) private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297138 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397534 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398016 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398017 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Fix Javadoc and better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398149 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Fix Javadoc and better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398149 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Remove method org.apache.commons.csv.CSVPrinter.print(Object, boolean), it should not have been public in the first place, the format is the API to specify this kind of option.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398276 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458805 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Document why original object is needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479721 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Simplify code so delimiter only printed in one place\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479823 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "[CSV-181] Make CSVPrinter.print(Object) GC-free.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printlnComment": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printlnComment CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397534 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java",
                "Better lvar names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398015 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVUtils.parse": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.parse CSVUtils.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.parse CSVUtils.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVUtils.printLine": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java",
                "Changed the signature of CSVUtils.printLine() to use varargs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200065 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java",
                "Changed the signature of CSVUtils.printLine() to use varargs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200065 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity": {
            "message": [
                "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVStrategyTest.testImmutalibity CSVStrategyTest.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Fixed the immutability of the delimiter in CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200283 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Changed the default line separator to \\r\\n to comply with RFC 4180 (SANDBOX-163)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201115 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301862 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Use public CRLF constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307188 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Group quote test fragments together.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398011 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken6": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java",
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.TestCSVParser": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java",
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java",
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java",
                "Removed the package private method CSVParser.nextToken()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "CSV-69 Eliminate CSVPrinterTest.equals(String[][], String[][]) by using Assert.assertArrayEquals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306833 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Reduce dependency on DISABLED package constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307186 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Use public CRLF constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307205 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "PRISTINE can now be private as we have ctor which allows delimiter to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398560 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Tidy up; rename shared fields to be clearer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306307 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "CSV-84 Clarify comment handling\nFix test case which expected to handle a trailing comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306315 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "CSV-84 Clarify comment handling\nTest was wrong; line comment should have been dropped entirely.\nFix record handling accordingly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306342 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Test multiple adjacent comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306650 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Add back trailing comment test (this time with correct expected results)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306660 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "CSV-69 Eliminate CSVPrinterTest.equals(String[][], String[][]) by using Assert.assertArrayEquals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306833 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Reduce dependency on DISABLED package constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307186 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748096 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java",
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Reduce dependency on DISABLED package constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307186 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Use public CRLF constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307205 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "PRISTINE can now be private as we have ctor which allows delimiter to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398560 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Use Utils class for comparing list of CSVRecords against expectation array\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460194 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Bug in test case result\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478619 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java",
                "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java",
                "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "CSV-69 Eliminate CSVPrinterTest.equals(String[][], String[][]) by using Assert.assertArrayEquals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306833 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "The class implements Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398278 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Avoid Eclipse warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460396 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Make members private, they are only needed in this test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512614 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVUtilsTest.testParse6": {
            "message": [
                "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVUtilsTest.testParse6 CSVUtilsTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.writer.CSVConfig.addField": {
            "message": [
                "Upgrading to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.writer.CSVConfig.addField CSVConfig.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getLine": {
            "message": [
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java",
                "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java",
                "Updated the Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297043 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java",
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.Token": {
            "message": [
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.Token CSVParser.java",
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.Token CSVParser.java",
                "Replaced CharBuffer with StringBuilder (CSV-59)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300659 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.Token CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken1": {
            "message": [
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken5": {
            "message": [
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken4": {
            "message": [
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine": {
            "message": [
                "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Renamed CSVParser.getLine() into getRecord() to avoid confusions since a record can span several lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298333 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Don't use == null; use assertNull\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303983 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Tidy up; rename shared fields to be clearer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306307 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Clean up constant name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584893 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getRecords": {
            "message": [
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Renamed CSVParser.getLine() into getRecord() to avoid confusions since a record can span several lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298333 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Rename to avoid hiding class field\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1304097 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "CSV-87 CSVParser.getRecords() returns null rather than empty List at EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305692 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Sort methods in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383924 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Add API org.apache.commons.csv.CSVParser.getRecords(T).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Add API org.apache.commons.csv.CSVParser.getRecords(T).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Remove needless method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Remove needless method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Revert Java 7 diamond notation since JavaNCSS can't handle it\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Make checkstyle happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1617066 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java",
                "CSVParser.getRecords() now throws UncheckedIOException instead of\nIOException src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings": {
            "message": [
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines": {
            "message": [
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings": {
            "message": [
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings": {
            "message": [
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping": {
            "message": [
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetAllValues": {
            "message": [
                "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetAllValues CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.iterator": {
            "message": [
                "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Renamed CSVParser.getLine() into getRecord() to avoid confusions since a record can span several lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298333 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "CSV-60 CSVParser.iterator().remove() should throw throw new UnsupportedOperationException()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300661 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Not needed outside the iterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300664 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "It's not a line, it's a record\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300665 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Sort methods in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383924 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "In-line comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Add // TODO comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398749 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Better throw a NoSuchElementException if no more elements are available because parser has been closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509395 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "Add missing '@Override' annotations\nAdd missing '@Override' annotations to implementations of interface methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635504 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "[CSV-201] Do not use RuntimeException in CSVParser.iterator().new\nIterator() {...}.getNextRecord(). Use an IllegalStateException instead\n(KISS for now, no need for a custom exception) src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java",
                "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testForEach": {
            "message": [
                "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Added a convenient parse() method to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297022 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testIterator": {
            "message": [
                "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Added a convenient parse() method to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297022 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "FIx test due to change in remove() behaviour\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300675 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Document empty block.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508935 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords": {
            "message": [
                "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Tidy up; rename shared fields to be clearer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306307 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Clean up constant name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584893 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isEscaping": {
            "message": [
                "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscaping CSVFormat.java",
                "Calculate the booleans once; prepares for CSV-78\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305700 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscaping CSVFormat.java",
                "CSV-90 CSVFormat isEscaping/isEncapsulating are not public\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1327754 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscaping CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscaping CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscaping CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isCommentingDisabled": {
            "message": [
                "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentingDisabled CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating": {
            "message": [
                "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating CSVFormat.java",
                "Calculate the booleans once; prepares for CSV-78\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305700 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating CSVFormat.java",
                "CSV-90 CSVFormat isEscaping/isEncapsulating are not public\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1327754 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.writer.CSVConfig.equals": {
            "message": [
                "bad logic, should use || rather than &&, but instanceof covers the null case anyway\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200112 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.writer.CSVConfig.equals CSVConfig.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators": {
            "message": [
                "Fixed the immutability of the delimiter in CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200283 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Added a mutator to CSVFormat to change the trimming behavior at both ends\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298013 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301862 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Use public CRLF constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307188 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Group quote test fragments together.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398011 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.clone": {
            "message": [
                "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.clone CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.clone CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.clone CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.clone CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.parse": {
            "message": [
                "Added a convenient parse() method to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297022 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java",
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java",
                "Better name. src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java",
                "Better name. src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java",
                "Migrate from deprecated code\n\nCSVParser.Builder.recordNumber should default to 1 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printComment": {
            "message": [
                "Test cases for CSVPrinter.printComment()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297075 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Stop Eclipse complaining about fall-through\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298223 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "CSV-79 - CSVFormat.isCommentingDisabled() is confusing/confused\nrenamed method to isCommentingEnabled and fixed code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303483 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397534 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Explicit unboxing; associated Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398365 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Standardise on record rather than line; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Use streams.\nRemove unused imports. src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment": {
            "message": [
                "Test cases for CSVPrinter.printComment()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297075 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.printable": {
            "message": [
                "Test cases for CSVPrinter.printComment()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297075 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java",
                "Make members private, they are only needed in this test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512614 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment": {
            "message": [
                "Test cases for CSVPrinter.printComment()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297075 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment": {
            "message": [
                "Test cases for CSVPrinter.printComment()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297075 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.append": {
            "message": [
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297078 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java",
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CharBufferTest.testAppendNull": {
            "message": [
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297078 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CharBufferTest.testAppendNull CharBufferTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.format": {
            "message": [
                "Added a convenient format() method in CSVFormat replacing CSVUtils.printLine()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297091 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Replace empty throws that \"should not happen\" with an IllegalStateException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383569 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "In-line comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398007 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "[CSV-211] CSVFormat.format trims last delimiter if the delimiter is a white space (#71)\n\n* [CSV-211] fix CSVFormat.format trims last delimiter if the delimiter is a white space\r\n\r\n* [CSV-211] Add JiraCsv211Test src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat": {
            "message": [
                "Added a convenient format() method in CSVFormat replacing CSVUtils.printLine()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297091 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues": {
            "message": [
                "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.flush": {
            "message": [
                "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java",
                "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.isEndOfLine": {
            "message": [
                "Removed the package private method CSVParser.nextToken()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isEndOfLine CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.charAt": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.charAt CharBuffer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.shrink": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.shrink CharBuffer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.provideCapacity": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.CharBuffer": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java",
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java",
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java",
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.trimTrailingWhitespace": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.trimTrailingWhitespace CharBuffer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.getCharacters": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.getCharacters CharBuffer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.capacity": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.capacity CharBuffer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.clear": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.clear CharBuffer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.length": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.length CharBuffer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readAgain": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readAgain ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java",
                "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java",
                "CSV-278: Reuse Buffers in Lexer for Delimiter Detection (#162)\n\n* CSV-278: Reuse Buffers in Lexer for Delimiter Detection\r\n\r\n* Remove erroneous tab character\r\n\r\n* Reduce change set with fewer formatting changes\r\n\r\n* Reduce change set with fewer formatting changes src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java",
                "CSV-278: Reuse Buffers in Lexer for Delimiter Detection (#162)\n\n* CSV-278: Reuse Buffers in Lexer for Delimiter Detection\r\n\r\n* Remove erroneous tab character\r\n\r\n* Reduce change set with fewer formatting changes\r\n\r\n* Reduce change set with fewer formatting changes src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java",
                "Sort members. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java",
                "Whitespace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java",
                "Whitespace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java",
                "Allocate a string look ahead buffer in\nCSVFormat.printWithEscapes(CharSequence, Appendable)\n\nAs opposed to one for each character read. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber": {
            "message": [
                "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java",
                "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java",
                "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java",
                "Improve parser performance by up to 20%, YMMV src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr": {
            "message": [
                "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "Make members private, they are only needed in this test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512614 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom": {
            "message": [
                "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java",
                "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java",
                "Make members private, they are only needed in this test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512614 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.readEscape": {
            "message": [
                "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.readEscape CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.isHexadecimal": {
            "message": [
                "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.isHexadecimal UnicodeUnescapeReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.read": {
            "message": [
                "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.read UnicodeUnescapeReader.java",
                "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.read UnicodeUnescapeReader.java",
                "Rename local variables to make them easier to read\nl (ell) looks rather like 1 (one)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300540 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.read UnicodeUnescapeReader.java",
                "Rename local variables to make them easier to read\nl (ell) looks rather like 1 (one)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300540 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.read UnicodeUnescapeReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.UnicodeUnescapeReader": {
            "message": [
                "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.UnicodeUnescapeReader UnicodeUnescapeReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.close": {
            "message": [
                "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.close UnicodeUnescapeReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored": {
            "message": [
                "Added a mutator to CSVFormat to change the trimming behavior at both ends\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298013 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getLineNumber": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java",
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java",
                "Sort methods in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383924 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java",
                "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.CSVLexer": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVLexer CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java",
                "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java",
                "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java",
                "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java",
                "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java",
                "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java",
                "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java",
                "Improve escape tests\nFix bug in readEscape() - was not handling EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306890 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java",
                "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java",
                "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java",
                "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java",
                "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java",
                "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals CSVLexerTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals CSVLexerTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "CSV-70 Improve readability of CSVLexer\nIntroduce COMMENT type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306064 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Make lines clearer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306414 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Don't detect comments except at start of a line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306422 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Add a trailing comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306432 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Fix readLine() so can still detect start of line next time round\nAlso fix broken test: format was set to ignore empty lines, yet it checked for one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306649 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Have to check for comment after dealing with empty lines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306667 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java",
                "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6": {
            "message": [
                "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java",
                "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java",
                "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java",
                "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.validate": {
            "message": [
                "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Last of the Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383758 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Use the single quote char to delineate a char in error messages. Remove a trailing space.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "CSVFormat.validate() throws IllegalStateException instead of IllegalArgumentException because the method validates the state of the object.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397876 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Add missing single-quote\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397878 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Validation checks the delimiter character cannot be null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397909 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (',') seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397927 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (',') seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397930 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Validation fails if no quotes mode set but no escape character is set.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398148 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Explicit unboxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398354 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Invalid use of == to compare Character equality; add tests to detect this\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398357 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Validate that headers do not contain duplicates.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "CSV-114 CSVFormat constructor should reject a header array with duplicate entries\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593076 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Make Checkstyle happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609552 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Clearify handling of record separators and remove senseless validation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610492 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "[CSV-134] Unified parameter validation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638699 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "[CSV-241] CSVFormat#valiadte() does not account for\nllowDuplicateHeaderNames.\n\nApplying a different version of the GitHub patch with adjustments to the\ntests. Also remove trailing whitespace from CSVRecord.\n\nCloses #43. src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Test for empty/blank headers the same way for input and output src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "CSVFormat: Sanitise empty headers to the empty string \"\"\n\nAdd more tests for duplicate headers including null header names. src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Use final and lambda shorthand src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "changing the exception message to be more meaningful src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Internal refactoring for escape character src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak": {
            "message": [
                "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Now that delimiter is a char, simplify API by removing withDelimiter(Character)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398349 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Now that delimiter is a char, simplify API by removing withDelimiter(Character)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398349 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Make some methods package-protected to avoid the need for synthetic accessors.\nTODO consider whether to do so for the fields as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Make some methods package-protected to avoid the need for synthetic accessors.\nTODO consider whether to do so for the fields as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Sort members alphabetically\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512606 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Methods are no longer used in test code. Make them private.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512610 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Methods are no longer used in test code. Make them private.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512610 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation": {
            "message": [
                "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "Serialization test for CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299580 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "CSVFormat.validate() throws IllegalStateException instead of IllegalArgumentException because the method validates the state of the object.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397876 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "Validation fails if no quotes mode set but no escape character is set.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398148 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "Invalid use of == to compare Character equality; add tests to detect this\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398357 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java",
                "Add ctor to create simplest possible CSV parser\nDoes not make sense to allow delim = EOL in ctor but disable it in withDelimiter()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getRecord": {
            "message": [
                "Renamed CSVParser.getLine() into getRecord() to avoid confusions since a record can span several lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298333 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java",
                "Changed while loops (CSV-55)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299706 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java",
                "CSV-70 Improve readability of CSVLexer\nIntroduce COMMENT type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306064 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java",
                "CSV-84 Clarify comment handling\nTest was wrong; line comment should have been dropped entirely.\nFix record handling accordingly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306342 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java",
                "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java",
                "Last of the Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383758 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java",
                "Rename ivar headerMapping -> headerMap.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383920 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java",
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization": {
            "message": [
                "Serialization test for CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299580 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Better error message in test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603203 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read": {
            "message": [
                "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Rename local variables to make them easier to read\nl (ell) looks rather like 1 (one)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300540 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Rename local variables to make them easier to read\nl (ell) looks rather like 1 (one)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300540 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "CSV-75 ExtendedBufferReader does not handle EOL consistently\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "CSV-75 ExtendedBufferReader does not handle EOL consistently\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Refactor '\\r' and '\\n' into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383564 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Refactor '\\r' and '\\n' into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383564 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "[CSV-131] Save positions of records to enable random access. First commit for this new feature. Let the ExtendedBufferedReader track how many characters it has read so far.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1625455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "[CSV-131] Save positions of records to enable random access. First commit for this new feature. Let the ExtendedBufferedReader track how many characters it has read so far.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1625455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "PMD: Remove useless parentheses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742468 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "[CSV-149]/[CSV-195] fix line number is not proper at EOF (#60) src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Fix checkstyle src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Add PMD check to default goal and fix only 2 remaining PMD warnings. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader (#5)\n\n* Fix eol checking for read array in ExtendedBufferedReader\r\n\r\n* Add test for eol checking when reading to different buffers\r\n\r\nCo-authored-by: mirasrael <d_signer@mail.ru>\r\nCo-authored-by: Alexander Bondarev <alexander.bondarev@thomsonreuters.com> src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Whitespace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Use the same internal name as LineNumberReader src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Use the same internal name as LineNumberReader src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine": {
            "message": [
                "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java",
                "Fix readLine() so can still detect start of line next time round\nAlso fix broken test: format was set to ignore empty lines, yet it checked for one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306649 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java",
                "Refactor '\\r' and '\\n' into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383564 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java",
                "[CSV-265] Update buffer position when reading line comment (#120)\n\n* [CSV-265] Add JiraCsv265Test\r\n\r\n* [CSV-265] Update buffer position when reading line comment\r\n\r\n* Update JiraCsv265Test.java\r\n\r\nFile should end in a new line.\r\n\r\nCo-authored-by: Tyler King <tylerking001@hotmail.com>\r\nCo-authored-by: Gary Gregory <garydgregory@users.noreply.github.com> src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java",
                "Rename internal methods src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CharBuffer.ensureCapacity": {
            "message": [
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.ensureCapacity CharBuffer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CharBufferTest.testSimpleAppend": {
            "message": [
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CharBufferTest.testSimpleAppend CharBufferTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CharBufferTest.testProvideCapacity": {
            "message": [
                "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CharBufferTest.testProvideCapacity CharBufferTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.isUnicodeSequence": {
            "message": [
                "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.isUnicodeSequence UnicodeUnescapeReader.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CharBufferTest.testTrim": {
            "message": [
                "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CharBufferTest.testTrim CharBufferTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput": {
            "message": [
                "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java",
                "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java",
                "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java",
                "Internal refactoring\n\nReduce whitepace src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java",
                "Rename internal methods src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1": {
            "message": [
                "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Add test for CSV-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301971 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "CSV-75 ExtendedBufferReader does not handle EOL consistently\nFix tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305695 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Internal refactoring\n\nReduce whitepace src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Rename internal methods src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java",
                "Improve parser performance by up to 20%, YMMV src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2": {
            "message": [
                "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java",
                "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java",
                "Rename internal methods src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader": {
            "message": [
                "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader ExtendedBufferedReaderTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader ExtendedBufferedReaderTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine": {
            "message": [
                "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "Simplify assertions, and provide details if the strings are not equal\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "Simplify\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301973 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader.\n\nClean up new test methods. Sort methods. src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "Rename internal methods src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java",
                "Improve parser performance by up to 20%, YMMV src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscapeMySQL": {
            "message": [
                "Check that Unicode works with the MYSQL format which uses backslash as its escape character\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300591 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscapeMySQL CSVParserTest.java",
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscapeMySQL CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscapeMySQL CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscapeMySQL CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.trimTrailingSpaces": {
            "message": [
                "Replaced CharBuffer with StringBuilder (CSV-59)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300659 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.trimTrailingSpaces CSVParser.java",
                "Optimized trimTrailingSpaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300780 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.trimTrailingSpaces CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.Token": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.Token CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.getLineNumber": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.getLineNumber CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.nextToken": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "CSV-71 - Add convenience Methods to CSVLexer\nUse convenience methods from Lexer parent class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303904 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "CSV-71 - Add convenience Methods to CSVLexer\nUse convenience fields from Lexer parent class; missed one method replacement earlier\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Oops - fix bug introduced in r1303933 \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303948 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "CSV-80 - CSVLexer.nextToken does not need wsBuf\nremove useless wsBuf\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303955 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "CSV-81 Token.Type.isReady could perhaps be removed\nNot removed, but only set on EOF if there is data to return\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303988 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "CSV-70 Improve readability of CSVLexer\nIntroduce COMMENT type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306064 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "lastChar cannot possibly be EOF if it is CR, LF or UNDEFINED\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306073 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Add method for detecting start of line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306321 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Revert r1306321 - committed wrong file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306324 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "CSV-84 Clarify comment handling\nFix code so comment only detected at start of a line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306325 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Misplaced comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306643 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Have to check for comment after dealing with empty lines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306667 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "We don't care if trailing LF has been consumed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306797 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Rename pname from 'tkn' to 'token'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383583 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Rename pname from 'tkn' to 'token'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383583 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Rename ivar to ignoreEmptyLines to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397785 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397923 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Method names should start with a verb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495268 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "Fix possible NPE reported by FindBugs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495269 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.isWhitespace": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isWhitespace CSVLexer.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isWhitespace CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.isEndOfLine": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isEndOfLine CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.readEscape": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.readEscape CSVLexer.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.readEscape CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.isEndOfFile": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isEndOfFile CSVLexer.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isEndOfFile CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java",
                "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java",
                "Allow class to be instantiated dynamically\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303879 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java",
                "Make internal API package private.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461237 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java",
                "Make fields private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511015 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "CSV-71 - Add convenience Methods to CSVLexer\nUse convenience methods from Lexer parent class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303904 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "CSV-71 - Add convenience Methods to CSVLexer\nUse convenience fields from Lexer parent class; missed one method replacement earlier\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "CSV-81 Token.Type.isReady could perhaps be removed\nNot removed, but only set on EOF if there is data to return\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303988 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "CSV-70 Improve readability of CSVLexer\nSimplify; remove while(true) loop\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306079 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "Checking the token type seems to be quite slow\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306663 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397923 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.trimTrailingSpaces": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.trimTrailingSpaces CSVLexer.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.trimTrailingSpaces CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer": {
            "message": [
                "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "CSV-71 - Add convenience Methods to CSVLexer\nUse convenience methods from Lexer parent class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303904 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "CSV-81 Token.Type.isReady could perhaps be removed\nNot removed, but only set on EOF if there is data to return\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303988 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307201 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "Last of the Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383758 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397923 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java",
                "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld": {
            "message": [
                "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Fix typos in site and test #53 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withHeader": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "CSV-180: Add withHeader(Class<? extends Enum>) to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742169 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Delegate to withHeader(String[]) instead of calling the long constructor directly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742170 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Sort 1 method into place.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742957 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743530 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getHeader": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java",
                "Make org.apache.commons.csv.CSVFormat.getHeader() public and make it return a clone.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508585 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java",
                "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.initializeHeader": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Explict boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301860 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "headerMapping is only created once, so make it final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Rename to avoid hiding class field\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1304097 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "[CVS-92] Need a way to extract parsed headers, e.g. for use in formatting output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383934 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461307 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Make org.apache.commons.csv.CSVFormat.getHeader() public and make it return a clone.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508585 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "The local variable record is hiding a field from type CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1558888 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "CSV-112: HeaderMap is inconsistent when it is parsed from an input with duplicate columns names. Reported by Romain Goss\u00e9\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592371 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Make checkstyle happy (line is longer than 120 characters)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Fix checkstyle error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592600 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "CSV-113 Check whether ISE/IAE are being used appropriately\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593148 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Checkstyle: '+' should be on the previous line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "CSV-122: NullPointerException when empty header string and and null string of \"\". Thanks to Mike Lewis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Make checkstyle happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1617066 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Checkstyle: Operator should be on the previous line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Simplify boolean expression: emptyHeader will always be true when reached.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742466 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java",
                "Redundant specification of type arguments. src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458803 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "CSV-124 replace string concatenation with StringBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "Checkstyle: line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635147 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java",
                "Refactor and reuse constant. src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.get": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "@Override; explicit unboxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301861 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Add CVSRecord.isMapped(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397094 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Add CVSRecord.isSet(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458803 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Fix boxing and unboxing warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508940 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "CSV-124 replace string concatenation with StringBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Let a null input to CSVRecord#get(Enum) fail in CSVRecord#get(String). src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.values": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.values CSVRecord.java",
                "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.values CSVRecord.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509231 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.values CSVRecord.java",
                "[CSV-291] Make CSVRecord#values() public. src.main.java.org.apache.commons.csv.CSVRecord.values CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.iterator": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.iterator CSVRecord.java",
                "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.iterator CSVRecord.java",
                "Internal refactoring. If we have a toMap, a toList makes sense (which is already needed internally).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560003 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.iterator CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.size": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.size CSVRecord.java",
                "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.size CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.toString": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java",
                "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java",
                "CSV-124 apply provided patch and update unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624048 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java",
                "CSV-124 replace string concatenation with StringBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java",
                "revert tostring implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624273 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java",
                "Prepare for release 1.7.\n\n- There is no longer site archives. We forgot to do it for 1.6 but the\nsites are still in svn.\n- The Javadoc archives now point to the same place GitHub uses:\njavadoc.io\n- Checkstyle fixes. src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java",
                "[CSV-241] CSVFormat#valiadte() does not account for\nllowDuplicateHeaderNames.\n\nApplying a different version of the GitHub patch with adjustments to the\ntests. Also remove trailing whitespace from CSVRecord.\n\nCloses #43. src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testHeader": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java",
                "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java",
                "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "Add CVSRecord.isMapped(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.equals": {
            "message": [
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java",
                "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java",
                "Give a bit more detail when reporting an error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306313 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.main": {
            "message": [
                "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Add tests of ExtendedBufferedReader for comparison\nAllow tests to be configured dynamically\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302037 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Add direct lexer tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303719 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Allow testing of dynamically loaded CSVLexers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303878 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Use locally stored big file as per perf/PerformanceTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397851 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Ensure resources are released\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582817 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Minor Improvement: (#130)\n\n* System.arraycopy\r\n* Remove redundant initializer\r\n* Use empty array src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "CSV-286: Cleanup and Document Performance Test Harness (#170) src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Convert cascading if-else to switch src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV": {
            "message": [
                "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java",
                "More lambdas, less boilerplate. src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.Stats": {
            "message": [
                "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.readAll": {
            "message": [
                "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.show": {
            "message": [
                "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "Remove extra parens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397071 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile": {
            "message": [
                "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.iterate": {
            "message": [
                "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.getReader": {
            "message": [
                "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getReader PerformanceTest.java",
                "Use locally stored big file as per perf/PerformanceTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397851 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getReader PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar": {
            "message": [
                "Add test for CSV-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301971 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "CSV-75 ExtendedBufferReader does not handle EOL consistently\nFix tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305695 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "Document empty block. Formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader.\n\nClean up new test methods. Sort methods. src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "Internal refactoring\n\nReduce whitepace src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "Use Checkstyle WhitespaceAfter src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "Add test assertions src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java",
                "Improve parser performance by up to 20%, YMMV src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer": {
            "message": [
                "Add tests of ExtendedBufferedReader for comparison\nAllow tests to be configured dynamically\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302037 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java",
                "create strings for each field\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302039 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java",
                "Add direct lexer tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303719 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java",
                "Internal refactoring\n\nReduce whitepace src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isCommentingEnabled": {
            "message": [
                "CSV-79 - CSVFormat.isCommentingDisabled() is confusing/confused\nrenamed method to isCommentingEnabled and fixed code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303483 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentingEnabled CSVFormat.java",
                "Calculate the booleans once; prepares for CSV-78\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305700 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentingEnabled CSVFormat.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentingEnabled CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentingEnabled CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Token.reset": {
            "message": [
                "Move Token into separate file for more flexibility\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303506 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Token.reset Token.java",
                "org.apache.commons.csv.Token.reset() does not need to return itself. Save a return.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397906 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Token.reset Token.java",
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.main.java.org.apache.commons.csv.Token.reset Token.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.getLineNumber": {
            "message": [
                "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.getLineNumber Lexer.java",
                "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.getLineNumber Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isEndOfLine": {
            "message": [
                "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfLine Lexer.java",
                "Remove extra parens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397071 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfLine Lexer.java",
                "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397536 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfLine Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.Lexer": {
            "message": [
                "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "CSV-71 - Add convenience Methods to CSVLexer\nAdded methods to Lexer parent class (updated CSVLexer to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303882 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Additional convenience fields\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303929 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Rename ivar to ignoreEmptyLines to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397785 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "[CSV-94] Lexer should only use char fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397863 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Rename method nullMeansDisabled() to mapNullToDisabled()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397864 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512650 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "CSV-278: Reuse Buffers in Lexer for Delimiter Detection (#162)\n\n* CSV-278: Reuse Buffers in Lexer for Delimiter Detection\r\n\r\n* Remove erroneous tab character\r\n\r\n* Reduce change set with fewer formatting changes\r\n\r\n* Reduce change set with fewer formatting changes src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "Internal refactoring for delimiter src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java",
                "[CSV-150] Escaping is not disableable src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isWhitespace": {
            "message": [
                "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java",
                "Remove extra parens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397071 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java",
                "Sort methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460348 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java",
                "Use isDelimiter method instead of != check. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478655 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.readEscape": {
            "message": [
                "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Improve escape tests\nFix bug in readEscape() - was not handling EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306890 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397536 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Rename constant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "CSV-58 Unescape handling needs rethinking\nFixed up most issues.\nTODO should TAB, FF and BACKSPACE be un/escaped?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478621 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Extract check for metaChar\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479706 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java",
                "Add CSVException that extends IOException thrown on invalid input\ninstead of IOException src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.trimTrailingSpaces": {
            "message": [
                "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.trimTrailingSpaces Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.trimTrailingSpaces Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.trimTrailingSpaces Lexer.java",
                "Yse -- src.main.java.org.apache.commons.csv.Lexer.trimTrailingSpaces Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isEndOfFile": {
            "message": [
                "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java",
                "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer": {
            "message": [
                "Add direct lexer tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303719 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "Allow testing of dynamically loaded CSVLexers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303878 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "More info\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306046 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "Allow for new COMMENT token type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor": {
            "message": [
                "Allow testing of dynamically loaded CSVLexers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303878 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java",
                "Alignment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398847 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java",
                "Minor clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461302 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isCommentStart": {
            "message": [
                "CSV-71 - Add convenience Methods to CSVLexer\nAdded methods to Lexer parent class (updated CSVLexer to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303882 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java",
                "[CSV-94] Lexer should only use char fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397863 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java",
                "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512650 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isEncapsulator": {
            "message": [
                "CSV-71 - Add convenience Methods to CSVLexer\nAdded methods to Lexer parent class (updated CSVLexer to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303882 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEncapsulator Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEncapsulator Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEncapsulator Lexer.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEncapsulator Lexer.java",
                "[CSV-94] Lexer should only use char fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397863 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEncapsulator Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isDelimiter": {
            "message": [
                "CSV-71 - Add convenience Methods to CSVLexer\nAdded methods to Lexer parent class (updated CSVLexer to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303882 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "CSV-279: Optimize Lexer Delimiter Check for One Character Delimiter (#163) src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "CSV-278: Reuse Buffers in Lexer for Delimiter Detection (#162)\n\n* CSV-278: Reuse Buffers in Lexer for Delimiter Detection\r\n\r\n* Remove erroneous tab character\r\n\r\n* Reduce change set with fewer formatting changes\r\n\r\n* Reduce change set with fewer formatting changes src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "Add Checkstyle rules src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java",
                "Rename internal methods src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isEscape": {
            "message": [
                "CSV-71 - Add convenience Methods to CSVLexer\nAdded methods to Lexer parent class (updated CSVLexer to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303882 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java",
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java",
                "[CSV-94] Lexer should only use char fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397863 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1.nextToken": {
            "message": [
                "Temporary copy of original CSVLexer for performance comparison.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java",
                "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java",
                "org.apache.commons.csv.Token.reset() does not need to return itself. Save a return.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397906 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java",
                "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer": {
            "message": [
                "Temporary copy of original CSVLexer for performance comparison.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java",
                "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java",
                "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1.CSVLexer1": {
            "message": [
                "Temporary copy of original CSVLexer for performance comparison.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.CSVLexer1 CSVLexer1.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.CSVLexer1 CSVLexer1.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.CSVLexer1 CSVLexer1.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer": {
            "message": [
                "Temporary copy of original CSVLexer for performance comparison.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java",
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java",
                "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.toString": {
            "message": [
                "Add basic toString method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1304462 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Add more info to toString() method; use space separator for clarity\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305669 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398016 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398186 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Add output of the nullString to toString implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522879 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Add output of header record skipping to toString implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522880 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Add output of recordSeparator to toString implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522887 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Add output of the header array to toString implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522890 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Show quote mode if not null src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Remove trailing white spaces on all lines. src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isSurroundingSpacesIgnored": {
            "message": [
                "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isSurroundingSpacesIgnored CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile": {
            "message": [
                "Test empty files\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305668 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF": {
            "message": [
                "Added tests for line counting by the parser (CSV-75)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305689 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java",
                "Use public CRLF constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307205 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java",
                "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java",
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java",
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR": {
            "message": [
                "Added tests for line counting by the parser (CSV-75)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305689 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java",
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java",
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF": {
            "message": [
                "Added tests for line counting by the parser (CSV-75)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305689 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java",
                "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java",
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java",
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData": {
            "message": [
                "Add CSV file parser test case runner\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305919 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData CSVFileParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData CSVFileParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData CSVFileParserTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData CSVFileParserTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData CSVFileParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData": {
            "message": [
                "Add CSV file parser test case runner\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305919 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "Remove unneeded @SuppressWarnings(\"unused\") \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383557 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "CSV-124 apply provided patch and update unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624048 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "FindBugs: Avoid possible NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725345 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "Camel-case name. src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "More lambdas, less boilerplate. src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "Use Stream.of() and rename new method to be like Collection#stream()\ninstead of toStream(). src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile": {
            "message": [
                "Add CSV file parser test case runner\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305919 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Handle CommentStart option\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306345 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "PRISTINE can now be private as we have ctor which allows delimiter to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398560 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508510 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "CSV-124 apply provided patch and update unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624048 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Fix the old test case record.getComment() will never be null (#62)\n\n* The old test case record.getComment() will never be null and if record.getComment() be null the test code misplace the null test.\r\nAdd a new test file that record.getComment() will be null and test record.getComment() no null before using\r\n\r\n* keep the caching of \"record.getComment()\" src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest": {
            "message": [
                "Add CSV file parser test case runner\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305919 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest CSVFileParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest CSVFileParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest CSVFileParserTest.java",
                "CSV-124 apply provided patch and update unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624048 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest CSVFileParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Token.toString": {
            "message": [
                "Provide toString method for IDE debugging\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306047 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Token.toString Token.java",
                "More debug\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306889 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Token.toString Token.java",
                "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Token.toString Token.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isStartOfLine": {
            "message": [
                "Add method for detecting start of line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306322 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java",
                "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397536 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java",
                "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer3.CSVLexer3": {
            "message": [
                "Add experimental state-driven lexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306519 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.CSVLexer3 CSVLexer3.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.CSVLexer3 CSVLexer3.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.CSVLexer3 CSVLexer3.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer3.nextToken": {
            "message": [
                "Add experimental state-driven lexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306519 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java",
                "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer3.classify": {
            "message": [
                "Add experimental state-driven lexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306519 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.classify CSVLexer3.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.classify CSVLexer3.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.classify CSVLexer3.java",
                "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.classify CSVLexer3.java",
                "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.classify CSVLexer3.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines": {
            "message": [
                "Test with empty lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306651 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java",
                "Add a few more blank lines to the test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306659 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java",
                "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java",
                "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer130663.simpleTokenLexer": {
            "message": [
                "Save current lexer for comparisons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306664 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer130663.simpleTokenLexer CSVLexer130663.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer130663.nextToken": {
            "message": [
                "Save current lexer for comparisons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306664 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer130663.nextToken CSVLexer130663.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer130663.encapsulatedTokenLexer": {
            "message": [
                "Save current lexer for comparisons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306664 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer130663.encapsulatedTokenLexer CSVLexer130663.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer130663.CSVLexer130663": {
            "message": [
                "Save current lexer for comparisons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306664 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer130663.CSVLexer130663 CSVLexer130663.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1306663.CSVLexer1306663": {
            "message": [
                "Fix revision\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306789 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.CSVLexer1306663 CSVLexer1306663.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.CSVLexer1306663 CSVLexer1306663.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.CSVLexer1306663 CSVLexer1306663.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.Utils.compare": {
            "message": [
                "CSV-69 Utility methods for comparing results\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306828 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java",
                "CSV-69 Utility methods for comparing results\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306828 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java",
                "Remove unused method. It made no sense anyway, since Assert.assertArrayEquals is capable of comparing multi dimensional arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512617 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java",
                "Format.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725356 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.Utils.compare Utils.java",
                "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.Utils.Utils": {
            "message": [
                "CSV-69 Utility methods for comparing results\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306828 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.Utils Utils.java",
                "Sort members. src.test.java.org.apache.commons.csv.Utils.Utils Utils.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3BadEscaping": {
            "message": [
                "Improve escape tests\nFix bug in readEscape() - was not handling EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306890 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3BadEscaping CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3BadEscaping CSVLexerTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3BadEscaping CSVLexerTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3BadEscaping CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping": {
            "message": [
                "Improve escape tests\nFix bug in readEscape() - was not handling EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306890 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java",
                "CSV-35 add test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306896 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java",
                "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java",
                "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getComment": {
            "message": [
                "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getComment CSVRecord.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509231 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getComment CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer": {
            "message": [
                "Another baseline\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307043 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java",
                "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java",
                "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1306667.CSVLexer1306667": {
            "message": [
                "Another baseline\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307043 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.CSVLexer1306667 CSVLexer1306667.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.CSVLexer1306667 CSVLexer1306667.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.CSVLexer1306667 CSVLexer1306667.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken": {
            "message": [
                "Another baseline\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307043 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java",
                "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java",
                "Rename ivar to ignoreEmptyLines to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397785 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java",
                "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java",
                "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer": {
            "message": [
                "Another baseline\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307043 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer CSVLexer1306667.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer CSVLexer1306667.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer CSVLexer1306667.java",
                "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer CSVLexer1306667.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer CSVLexer1306667.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57": {
            "message": [
                "Add test for CSV-57\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307068 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java",
                "Better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397998 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment": {
            "message": [
                "CSV-85 Allow comments to be returned in CSVRecord\nAdded test for comment before header\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307078 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.perf.PerformanceTest.println": {
            "message": [
                "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.println PerformanceTest.java",
                "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.println PerformanceTest.java",
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.println PerformanceTest.java",
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.println PerformanceTest.java",
                "Unused\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398343 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.println PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile": {
            "message": [
                "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java",
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java",
                "Allow performance test to traverse column values (optional).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397559 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java",
                "Allow performance test to traverse column values (optional).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397559 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java",
                "Better resource management. src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat": {
            "message": [
                "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat PerformanceTest.java",
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat PerformanceTest.java",
                "Allow performance test to traverse column values (optional).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397559 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat PerformanceTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.perf.PerformanceTest.readAll": {
            "message": [
                "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.readAll PerformanceTest.java",
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.readAll PerformanceTest.java",
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.readAll PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile": {
            "message": [
                "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java",
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java",
                "Fixtypo in the PerformanceTest (#55) src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java",
                "Rename internal method src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse": {
            "message": [
                "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Allow performance test to traverse column values (optional).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397559 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Allow performance test to traverse column values (optional).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397559 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Avoid IDE warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Better resource management. src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "Better resource management. src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.perf.PerformanceTest.getBufferedReader": {
            "message": [
                "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.getBufferedReader PerformanceTest.java",
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.getBufferedReader PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken": {
            "message": [
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java",
                "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java",
                "Rename ivar to ignoreEmptyLines to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397785 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java",
                "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java",
                "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer": {
            "message": [
                "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java",
                "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java",
                "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap": {
            "message": [
                "[CVS-92] Need a way to extract parsed headers, e.g. for use in formatting output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383934 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508511 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java",
                "[CSV-100] CSVParser: getHeaderMap throws NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1524435 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java",
                "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap": {
            "message": [
                "[CVS-92] Need a way to extract parsed headers, e.g. for use in formatting output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383934 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Remove trailing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460125 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines": {
            "message": [
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines": {
            "message": [
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces": {
            "message": [
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces": {
            "message": [
                "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.isMapped": {
            "message": [
                "Add CVSRecord.isMapped(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397094 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java",
                "CSV-115: Simplify boolean expressions in CSVRecord. This also closes #1 from github. Thanks to Furkan Kamaci.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592822 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass": {
            "message": [
                "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass PerformanceTest.java",
                "Ensure resources are released\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582817 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass PerformanceTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass PerformanceTest.java",
                "Better resource management. src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass PerformanceTest.java",
                "CSV-284: Formalize PerformanceTest (#168)\n\n* CSV-284: Formalize PerformanceTest\r\n\r\n* Revert some changes src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexer1306663.simpleTokenLexer": {
            "message": [
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.simpleTokenLexer CSVLexer1306663.java",
                "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.simpleTokenLexer CSVLexer1306663.java",
                "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.simpleTokenLexer CSVLexer1306663.java",
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.simpleTokenLexer CSVLexer1306663.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.isSet": {
            "message": [
                "Add CVSRecord.isSet(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java",
                "Add CSVRecord.isSet(int) method (#52)\n\n* Add CSVRecord.isSet(int) method\r\n\r\n* Remove unnecessary unboxing\r\n\r\n* Revert: Remove unnecessary unboxing src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java",
                "[CSV-255] Add CSVRecord.isSet(int) method #52.\n\nLess cryptic parameter name. src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java",
                "[CSV-255] Add CSVRecord.isSet(int) method #52.\n\nLess cryptic parameter name. src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport": {
            "message": [
                "Add CVSRecord.isSet(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "Remove trailing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460125 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1462110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getCommentStart": {
            "message": [
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getCommentStart CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getCommentStart CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getEscape": {
            "message": [
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getEscape CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getEscape CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getEncapsulator": {
            "message": [
                "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getEncapsulator CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.nullMeansDisabled": {
            "message": [
                "[CSV-94] Lexer should only use char fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397863 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.nullMeansDisabled Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled": {
            "message": [
                "Rename method nullMeansDisabled() to mapNullToDisabled()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397864 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java",
                "No need to declare private method final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512398 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java",
                "CSVFormat does not support explicit \" as escape char src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java",
                "Revert \"CSVFormat does not support explicit \" as escape char\"\n\nThis reverts commit 28acf1138b64c889a520c190464ad1d16862dd41. src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getRecordNumber": {
            "message": [
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecordNumber CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecordNumber CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.getRecordNumber CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getRecordNumber": {
            "message": [
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getRecordNumber CSVRecord.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509231 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getRecordNumber CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers": {
            "message": [
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Remove trailing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460125 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF": {
            "message": [
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF CSVParserTest.java",
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF CSVParserTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues": {
            "message": [
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java",
                "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF": {
            "message": [
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF CSVParserTest.java",
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF CSVParserTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR": {
            "message": [
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR CSVParserTest.java",
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR CSVParserTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers": {
            "message": [
                "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "[CSV-149]/[CSV-195] fix line number is not proper at EOF (#60) src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.nextRecord": {
            "message": [
                "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "It looks like TWO record objects were created for each record read!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397902 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Remove redundant code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398367 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Replace magic String with constant from Constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495912 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508511 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Don't omit default cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582814 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "[CSV-110] Add ability to parse single lines.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585496 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Revert.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585716 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Better ivar name. src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Refactor and reuse constant. src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Guard against NPE in createHeaders\n\nAlso, formatting and whitespace changes\nas requested in code review. src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Fix formatting src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "adding more details into the error message during the CSV parser issues src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "formatting changes src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "changing the message src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "removing last parsed content from exception message, instead making respective method public src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "adding code review typo fixes src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "fixing code review changes src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "moving exception handling to the Lexer src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java",
                "Use Objects.toString() src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLastChar": {
            "message": [
                "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLastChar ExtendedBufferedReader.java",
                "Sort members src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLastChar ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.readEndOfLine": {
            "message": [
                "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397914 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java",
                "In-line comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397915 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508943 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java",
                "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java",
                "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java",
                "Rename internal methods src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printDelimiter": {
            "message": [
                "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printDelimiter CSVPrinter.java",
                "Standardise on record rather than line; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printDelimiter CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getQuotePolicy": {
            "message": [
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuotePolicy CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuotePolicy CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy": {
            "message": [
                "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getQuoteChar": {
            "message": [
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuoteChar CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuoteChar CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar": {
            "message": [
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java",
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isQuoting": {
            "message": [
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398016 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isQuoting CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isQuoting CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote": {
            "message": [
                "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398017 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Implement Quote.ALL. Bullet-proof a unit test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398133 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Explicit unboxing; associated Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398365 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Remove trailing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458683 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458805 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Standardise on record rather than line; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Simplify code so delimiter only printed in one place\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479823 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Add code and test for Quote.NONE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1480499 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Don't omit default cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582814 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "Remove commented out code and add TODO for obscure code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1617070 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java",
                "PMD: Remove useless parentheses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742467 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printRecord": {
            "message": [
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Fixed CSV-271 & Add testcase for new change (#157) src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Use API instead of system property\n\nUse final src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Move package-private method. src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Use forEachOrdered() src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printRecords": {
            "message": [
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Printer can now use a JDBC result set as input. Use H2 as lightweight in-memory JDBC database for easy test set up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398108 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Document how the pintRecord(s) methods work\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610502 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Document how the pintRecord(s) methods work\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610502 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "[CSV-140] QuoteMode.NON_NUMERIC doesn't work with CSVPrinter.printRecords(ResultSet)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1637781 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Add TODO.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1637788 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Remove duplicated code by calling printRecords(Iterable) src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Add in-line comment. src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Use API instead of system property\n\nUse final src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Move package-private method. src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Use forEachOrdered() src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Use try-with-resources to manage JDBC Clob in\nCSVPrinter.printRecords(ResultSet) src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays": {
            "message": [
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java",
                "Fix compiler warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620893 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists": {
            "message": [
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "No need for explicitly creating an array. Arrays.asList is a varargs method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512621 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "Fix compiler warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620893 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "Oops, back out one of the previous changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620896 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "Fix compiler warning.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620897 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists": {
            "message": [
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java",
                "No need for explicitly creating an array. Arrays.asList is a varargs method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512621 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java",
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java",
                "Use varargs. src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays": {
            "message": [
                "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip": {
            "message": [
                "Add roundtrip test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398020 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter": {
            "message": [
                "Printer can now use a JDBC result set as input. Use H2 as lightweight in-memory JDBC database for easy test set up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398108 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Implement Quote.ALL. Bullet-proof a unit test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398133 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Refactor test to better abstract set up of fixture.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Better exception handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638111 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "[CSV-234] Add support for java.sql.Clob. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinterQuoteAll": {
            "message": [
                "Implement Quote.ALL. Bullet-proof a unit test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398133 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinterQuoteAll CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll": {
            "message": [
                "Rename test method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric": {
            "message": [
                "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java",
                "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isQuoteChar": {
            "message": [
                "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isQuoteChar Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isQuoteChar Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isQuoteChar Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isQuoteChar Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.close": {
            "message": [
                "The class implements Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398278 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java",
                "Call flush instead of duplicating the logic src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java",
                "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator": {
            "message": [
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getRecordSeparator": {
            "message": [
                "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getRecordSeparator CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getRecordSeparator CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getRecordSeparator CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getRecordSeparator CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410045 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Make some methods package-protected to avoid the need for synthetic accessors.\nTODO consider whether to do so for the fields as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Make some methods package-protected to avoid the need for synthetic accessors.\nTODO consider whether to do so for the fields as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458713 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Replace accidentally checked in tab characters with spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458721 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458794 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Standardise on recordSeparator; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468825 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Standardise on recordSeparator; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468825 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java",
                "Fix formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1496236 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.defaults": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.defaults CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.newFormat": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCommentStart": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCommentStart CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCommentStart CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscape": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscape CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscape CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteChar": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteChar CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteChar CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithEscapeCRThrowsExceptions": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithEscapeCRThrowsExceptions CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithEscapeCRThrowsExceptions CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsDelimiterThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiter": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiter CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiter CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithDelimiterLFThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithDelimiterLFThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithDelimiterLFThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicy": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicy CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicy CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.setUp": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.setUp CSVFormatBuilderTest.java",
                "Explicit boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411923 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.setUp CSVFormatBuilderTest.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.setUp CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreEmptyLines": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreEmptyLines CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreEmptyLines CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicyNoneWithoutEscapeThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatBuilderTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithQuoteLFThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithQuoteLFThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithQuoteLFThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRecoardSeparator": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRecoardSeparator CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRecoardSeparator CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithCommentStartCRThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithCommentStartCRThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithCommentStartCRThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreSurroundingSpaces": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreSurroundingSpaces CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreSurroundingSpaces CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsEscapeThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsEscapeThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsEscapeThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatCRThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatCRThrowsException CSVFormatBuilderTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatCRThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatCRThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsCommentStartThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsCommentStartThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsCommentStartThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatLFThrowsException": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatLFThrowsException CSVFormatBuilderTest.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatLFThrowsException CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatLFThrowsException CSVFormatBuilderTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.newBuilder": {
            "message": [
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410045 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "More useful to have double-quote as a Character\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411920 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "Fix checksyle trailing space.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465774 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal CSVFormatBuilderTest.java",
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal CSVFormatBuilderTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal CSVFormatBuilderTest.java",
                "Add a toBuilder method to do:\nCSVFormat format = CSVFormat.EXCEL.toBuilder().withHeader(\"Col1\", \"Col2\", \"Col3\").build();\nInstead of:\nCSVFormat format = CSVFormat.newBuilder(CSVFormat.EXCEL).withHeader(\"Col1\", \"Col2\", \"Col3\").build();\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460255 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatWithChanges": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatWithChanges CSVFormatBuilderTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatWithChanges CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatWithChanges CSVFormatBuilderTest.java",
                "Add a toBuilder method to do:\nCSVFormat format = CSVFormat.EXCEL.toBuilder().withHeader(\"Col1\", \"Col2\", \"Col3\").build();\nInstead of:\nCSVFormat format = CSVFormat.newBuilder(CSVFormat.EXCEL).withHeader(\"Col1\", \"Col2\", \"Col3\").build();\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460254 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatWithChanges CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.assertEqualFormats": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.assertEqualFormats CSVFormatBuilderTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.equals": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Fix { } formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460251 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Add missing fields to hashcode and equals methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592832 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "CSV-242 CSVFormat equals() and hash() don't use all fields\n\nFix equals()\nTODO fix hash() src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Use Objects.equals(). src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.hashCode": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Add missing fields to hashcode and equals methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592832 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "CSV-242 CSVFormat equals() and hashCode() don't use all fields\n\nFix hashCode() src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Use Objects.hash(). src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testHeaderReferenceCannotEscape": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testHeaderReferenceCannotEscape CSVFormatBuilderTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testHeaderReferenceCannotEscape CSVFormatBuilderTest.java",
                "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testHeaderReferenceCannotEscape CSVFormatBuilderTest.java",
                "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testHeaderReferenceCannotEscape CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "CSV-242 CSVFormat equals() and hash() don't use all fields\n\nFix equals()\nTODO fix hash() src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "CSV-242 CSVFormat equals() and hashCode() don't use all fields\n\nFix hashCode() src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Typo src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Remove trailing white spaces on all lines. src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java",
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java",
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java",
                "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java",
                "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java",
                "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java",
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces": {
            "message": [
                "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRFC4180": {
            "message": [
                "Add testRFC4180().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458637 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRFC4180 CSVFormatBuilderTest.java",
                "Avoid double boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460392 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRFC4180 CSVFormatBuilderTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken": {
            "message": [
                "Method names should start with a verb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java",
                "CSV-58 Unescape handling needs rethinking\nFixed up most issues.\nTODO should TAB, FF and BACKSPACE be un/escaped?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478621 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java",
                "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495268 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java",
                "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495268 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken": {
            "message": [
                "Method names should start with a verb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken CSVLexer.java",
                "CSV-58 Unescape handling needs rethinking\nFixed up most issues.\nTODO should TAB, FF and BACKSPACE be un/escaped?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478621 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken CSVLexer.java",
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken CSVLexer.java",
                "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495268 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken CSVLexer.java",
                "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495268 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken CSVLexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscaping": {
            "message": [
                "Add some unit tests for escape handling in preparation for CSV-58\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460138 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscaping CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapingAtEOF": {
            "message": [
                "Add some unit tests for escape handling in preparation for CSV-58\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460138 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapingAtEOF CSVLexerTest.java",
                "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapingAtEOF CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapingAtEOF CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapingAtEOF CSVLexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.toBuilder": {
            "message": [
                "Add a toBuilder method to do:\nCSVFormat format = CSVFormat.EXCEL.toBuilder().withHeader(\"Col1\", \"Col2\", \"Col3\").build();\nInstead of:\nCSVFormat format = CSVFormat.newBuilder(CSVFormat.EXCEL).withHeader(\"Col1\", \"Col2\", \"Col3\").build();\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460254 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toBuilder CSVFormat.java",
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toBuilder CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF": {
            "message": [
                "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF CSVLexerTest.java",
                "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF CSVLexerTest.java",
                "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter": {
            "message": [
                "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter CSVLexerTest.java",
                "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter CSVLexerTest.java",
                "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR": {
            "message": [
                "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR CSVLexerTest.java",
                "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR CSVLexerTest.java",
                "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter": {
            "message": [
                "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java",
                "Add comment why test uses a different CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460369 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java",
                "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java",
                "CSV-58 Unescape handling needs rethinking\nFixed up most issues.\nTODO should TAB, FF and BACKSPACE be un/escaped?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478621 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeFF": {
            "message": [
                "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeFF CSVLexerTest.java",
                "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeFF CSVLexerTest.java",
                "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeFF CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab": {
            "message": [
                "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab CSVLexerTest.java",
                "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab CSVLexerTest.java",
                "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue": {
            "message": [
                "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java",
                "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java",
                "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java",
                "Change wrong input data of test. Test now fails because of CSV-58 and is therefore changed to be @Ignore.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1466604 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeBackspace": {
            "message": [
                "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeBackspace CSVLexerTest.java",
                "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeBackspace CSVLexerTest.java",
                "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeBackspace CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.setUp": {
            "message": [
                "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.setUp CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.setUp CSVLexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.isConsistent": {
            "message": [
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1462110 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isConsistent CSVRecord.java",
                "CSV-115: Simplify boolean expressions in CSVRecord. This also closes #1 from github. Thanks to Furkan Kamaci.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592822 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isConsistent CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.isConsistent CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.isConsistent CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.TokenMatchers.matches": {
            "message": [
                "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.matches TokenMatchers.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.TokenMatchers.hasContent": {
            "message": [
                "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasContent TokenMatchers.java",
                "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasContent TokenMatchers.java",
                "Simplify if statements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512399 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasContent TokenMatchers.java",
                "Add missing '@Override' annotations\nAdd missing '@Override' annotations to implementations of interface methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasContent TokenMatchers.java",
                "Sort members. src.test.java.org.apache.commons.csv.TokenMatchers.hasContent TokenMatchers.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.TokenMatchers.hasType": {
            "message": [
                "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasType TokenMatchers.java",
                "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasType TokenMatchers.java",
                "Simplify if statements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512399 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasType TokenMatchers.java",
                "Add missing '@Override' annotations\nAdd missing '@Override' annotations to implementations of interface methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasType TokenMatchers.java",
                "Sort members. src.test.java.org.apache.commons.csv.TokenMatchers.hasType TokenMatchers.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.TokenMatchers.isReady": {
            "message": [
                "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.isReady TokenMatchers.java",
                "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.isReady TokenMatchers.java",
                "Add missing '@Override' annotations\nAdd missing '@Override' annotations to implementations of interface methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.isReady TokenMatchers.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.TokenMatchersTest.setUp": {
            "message": [
                "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchersTest.setUp TokenMatchersTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.TokenMatchersTest.testHasType": {
            "message": [
                "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchersTest.testHasType TokenMatchersTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.TokenMatchersTest.testMatches": {
            "message": [
                "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchersTest.testMatches TokenMatchersTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.TokenMatchersTest.testIsReady": {
            "message": [
                "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchersTest.testIsReady TokenMatchersTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.TokenMatchersTest.testHasContent": {
            "message": [
                "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchersTest.testHasContent TokenMatchersTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.TokenMatchersTest.testHasContent TokenMatchersTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2": {
            "message": [
                "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2 CSVLexerTest.java",
                "Add missing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463212 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2 CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2 CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2 CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2 CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreSurroundingSpacesAreDeleted": {
            "message": [
                "Give test a name that's a bit more expressive\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465693 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreSurroundingSpacesAreDeleted CSVLexerTest.java",
                "Express intention of tokens in token content and give test more structure\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465705 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreSurroundingSpacesAreDeleted CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines": {
            "message": [
                "Give test a name that's a bit more expressive and remove comment that is no longer needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465715 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java",
                "Make sure empty lines are ignored by constructing CSVFormat this way. Remove corresponding assert that would have failed if CSVFormat.newBuilder() was changed to withIgnoreEmptyLines(false)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465718 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java",
                "Separate testing empty line handling from comment recognition\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465722 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testComments": {
            "message": [
                "Separate testing empty line handling from comment recognition\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465722 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testComments CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testComments CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testComments CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testComments CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetString": {
            "message": [
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetString CSVRecordTest.java",
                "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.testGetString CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsMapped": {
            "message": [
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIsMapped CSVRecordTest.java",
                "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.testIsMapped CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.setUp": {
            "message": [
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java",
                "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java",
                "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java",
                "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java",
                "CSVRecord.toList() does not give write access to the new List src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testIterator": {
            "message": [
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIterator CSVRecordTest.java",
                "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIterator CSVRecordTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIterator CSVRecordTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIterator CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord": {
            "message": [
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord CSVRecordTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord CSVRecordTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsConsistent": {
            "message": [
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIsConsistent CSVRecordTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.test.java.org.apache.commons.csv.CSVRecordTest.testIsConsistent CSVRecordTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVRecordTest.testIsConsistent CSVRecordTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nRename CSVRecord.getCSVParser() -> getParser(). src.test.java.org.apache.commons.csv.CSVRecordTest.testIsConsistent CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetInt": {
            "message": [
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetInt CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader": {
            "message": [
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader CSVRecordTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559898 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader CSVRecordTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSet": {
            "message": [
                "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSet CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getDelimiter": {
            "message": [
                "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getDelimiter CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.getDelimiter CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getDelimiter CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getDelimiter CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getNullToString": {
            "message": [
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getNullToString CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues": {
            "message": [
                "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java",
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingTabsAreDeleted": {
            "message": [
                "Add a test that makes sure ignoreSurroundingWhitespaces works for the tab character\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1466590 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingTabsAreDeleted CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingTabsAreDeleted CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingTabsAreDeleted CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingTabsAreDeleted CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingSpacesAreDeleted": {
            "message": [
                "Give test a better name\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1466591 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingSpacesAreDeleted CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingSpacesAreDeleted CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingSpacesAreDeleted CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingSpacesAreDeleted CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testCommentsAndEmptyLines": {
            "message": [
                "Give test a better name and remove comment that is now no longer needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1466601 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCommentsAndEmptyLines CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCommentsAndEmptyLines CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCommentsAndEmptyLines CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCommentsAndEmptyLines CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithEscaping": {
            "message": [
                "Give tests a better name that expresses, what actually happens\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1467766 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithEscaping CSVLexerTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithEscaping CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithEscaping CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithEscaping CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithoutEscaping": {
            "message": [
                "Give tests a better name that expresses, what actually happens\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1467766 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithoutEscaping CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithoutEscaping CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithoutEscaping CSVLexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isMetaChar": {
            "message": [
                "Extract check for metaChar\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479706 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java",
                "Checkstyle: put trailing || on previous line (indicates more to come)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485805 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java",
                "Allow a caller to close the parser before reading all records and free resources. The parser and lexer now implement java.io.Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508475 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java",
                "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java",
                "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512650 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped": {
            "message": [
                "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted": {
            "message": [
                "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted": {
            "message": [
                "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain": {
            "message": [
                "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped": {
            "message": [
                "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain": {
            "message": [
                "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted": {
            "message": [
                "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped": {
            "message": [
                "MOre tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479753 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted": {
            "message": [
                "MOre tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479753 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain": {
            "message": [
                "MOre tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479753 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getCurrentLineNumber": {
            "message": [
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getCurrentLineNumber CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getCurrentLineNumber CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.getCurrentLineNumber CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber": {
            "message": [
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber ExtendedBufferedReader.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber ExtendedBufferedReader.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber ExtendedBufferedReader.java",
                "Use the same internal name as LineNumberReader src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.getCurrentLineNumber": {
            "message": [
                "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.getCurrentLineNumber Lexer.java",
                "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.getCurrentLineNumber Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.getCurrentLineNumber Lexer.java",
                "Improve parser performance by up to 20%, YMMV src.main.java.org.apache.commons.csv.Lexer.getCurrentLineNumber Lexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDefaultQuotePolicy": {
            "message": [
                "Test default Quote policy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1480498 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDefaultQuotePolicy CSVFormatBuilderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE": {
            "message": [
                "Add code and test for Quote.NONE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1480499 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE CSVPrinterTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getNullString": {
            "message": [
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getNullString CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getNullString CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getNullString CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.addRecordValue": {
            "message": [
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508511 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "[CSV-169] The null string should be case-sensitive when reading records. Also simplify branch test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725358 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743529 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743529 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "Better ivar name. src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "Test for empty/blank headers the same way for input and output src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues": {
            "message": [
                "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java",
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmapped": {
            "message": [
                "Make sure an unmapped header returns null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1498003 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmapped CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withNullString": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.copy": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java",
                "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java",
                "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java",
                "Make org.apache.commons.csv.CSVFormat.getHeader() public and make it return a clone.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508585 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java",
                "Drop senseless assertion\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java",
                "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Use Character cache. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java",
                "Revert previous commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603206 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparator": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparator CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparator CSVFormatTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparator CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java",
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java",
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Use Character cache. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java",
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java",
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java",
                "Ensure Closeable is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509264 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java",
                "Remove redundant cast\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512622 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat": {
            "message": [
                "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java",
                "Ensure Closeable is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509264 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java",
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.close": {
            "message": [
                "Allow a caller to close the parser before reading all records and free resources. The parser and lexer now implement java.io.Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508475 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508511 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java",
                "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java",
                "Lexer is never null src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.close": {
            "message": [
                "Allow a caller to close the parser before reading all records and free resources. The parser and lexer now implement java.io.Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508475 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.close Lexer.java",
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.close Lexer.java",
                "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.close Lexer.java",
                "class Lexer implements Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.close Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.close Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.isClosed": {
            "message": [
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isClosed CSVParser.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508511 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isClosed CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isClosed CSVParser.java",
                "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isClosed CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.isClosed CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close": {
            "message": [
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java",
                "Make checkstyle happy: Line was longer than 120 chars, file contained tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512625 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java",
                "Improve parser performance by up to 20%, YMMV src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.isClosed": {
            "message": [
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.isClosed ExtendedBufferedReader.java",
                "Make checkstyle happy: Line was longer than 120 chars, file contained tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512625 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.isClosed ExtendedBufferedReader.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.isClosed ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isClosed": {
            "message": [
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isClosed Lexer.java",
                "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isClosed Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isClosed Lexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testClose": {
            "message": [
                "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java",
                "Better throw a NoSuchElementException if no more elements are available because parser has been closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509395 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.parseResource": {
            "message": [
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseResource CSVParser.java",
                "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseResource CSVParser.java",
                "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseResource CSVParser.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseResource CSVParser.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseResource CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.parseString": {
            "message": [
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseString CSVParser.java",
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseString CSVParser.java",
                "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseString CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.parseURL": {
            "message": [
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseURL CSVParser.java",
                "Don't split ternary expression over two lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509261 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseURL CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.parseFile": {
            "message": [
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseFile CSVParser.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508635 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseFile CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVResource": {
            "message": [
                "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVResource CSVFileParserTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVResource CSVFileParserTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVResource CSVFileParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader": {
            "message": [
                "Make org.apache.commons.csv.CSVFormat.getHeader() public and make it return a clone.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508585 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java",
                "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java",
                "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader": {
            "message": [
                "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java",
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testSkipAutoHeader": {
            "message": [
                "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipAutoHeader CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipAutoHeader CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testSkipAutoHeader CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testSkipAutoHeader CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto": {
            "message": [
                "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements": {
            "message": [
                "Validate that headers do not contain duplicates.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508618 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java",
                "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java",
                "[CSV-241] CSVFormat#valiadte() does not account for\nllowDuplicateHeaderNames.\n\nApplying a different version of the GitHub patch with adjustments to the\ntests. Also remove trailing whitespace from CSVRecord.\n\nCloses #43. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord": {
            "message": [
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord CSVFormat.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord": {
            "message": [
                "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.copy": {
            "message": [
                "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.copy CSVFormatTest.java",
                "Sort in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1576750 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.copy CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.copy CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.copy CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.copy CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.FercGovTest.testContractFile": {
            "message": [
                "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testContractFile FercGovTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testContractFile FercGovTest.java",
                "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testContractFile FercGovTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testContractFile FercGovTest.java",
                "Format.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578189 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testContractFile FercGovTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.FercGovTest.testTransactionFile": {
            "message": [
                "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testTransactionFile FercGovTest.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testTransactionFile FercGovTest.java",
                "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testTransactionFile FercGovTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testTransactionFile FercGovTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getBoolean": {
            "message": [
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getBoolean CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByNullString": {
            "message": [
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByNullString CSVRecordBooleanTest.java",
                "Simplify tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509446 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByNullString CSVRecordBooleanTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByMissingString": {
            "message": [
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByMissingString CSVRecordBooleanTest.java",
                "Simplify tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509446 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByMissingString CSVRecordBooleanTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByString": {
            "message": [
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByString CSVRecordBooleanTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509442 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByString CSVRecordBooleanTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.createTestRecord": {
            "message": [
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.createTestRecord CSVRecordBooleanTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509442 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.createTestRecord CSVRecordBooleanTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.setUp": {
            "message": [
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.setUp CSVRecordBooleanTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedName": {
            "message": [
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedName CSVRecordTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559898 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedName CSVRecordTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedName CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt": {
            "message": [
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt CSVRecordTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum": {
            "message": [
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum CSVRecordTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt": {
            "message": [
                "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt CSVRecordTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getLong": {
            "message": [
                "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getLong CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByMissingString": {
            "message": [
                "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByMissingString CSVRecordLongTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByString": {
            "message": [
                "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByString CSVRecordLongTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordLongTest.createTestRecord": {
            "message": [
                "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordLongTest.createTestRecord CSVRecordLongTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordLongTest.setUp": {
            "message": [
                "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordLongTest.setUp CSVRecordLongTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByNullString": {
            "message": [
                "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByNullString CSVRecordLongTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getInt": {
            "message": [
                "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getInt CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordIntTest.createTestRecord": {
            "message": [
                "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordIntTest.createTestRecord CSVRecordIntTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByString": {
            "message": [
                "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByString CSVRecordIntTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordIntTest.setUp": {
            "message": [
                "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordIntTest.setUp CSVRecordIntTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByNullString": {
            "message": [
                "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByNullString CSVRecordIntTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByMissingString": {
            "message": [
                "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByMissingString CSVRecordIntTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedFF": {
            "message": [
                "Align test names to other tests of the same kind\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509956 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedFF CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedFF CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedFF CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedBackspace": {
            "message": [
                "Align test names to other tests of the same kind\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509956 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedBackspace CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedBackspace CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedBackspace CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testBackspace": {
            "message": [
                "Add some more tests that document escaping behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509957 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackspace CSVLexerTest.java",
                "Use NotEscaped where character has not been escaped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackspace CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackspace CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackspace CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testFF": {
            "message": [
                "Add some more tests that document escaping behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509957 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testFF CSVLexerTest.java",
                "Use NotEscaped where character has not been escaped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testFF CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testFF CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testFF CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testLF": {
            "message": [
                "Add some more tests that document escaping behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509957 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testLF CSVLexerTest.java",
                "Use NotEscaped where character has not been escaped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testLF CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testLF CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testLF CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testTab": {
            "message": [
                "Add some more tests that document escaping behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509957 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testTab CSVLexerTest.java",
                "Use NotEscaped where character has not been escaped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testTab CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testTab CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testTab CSVLexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVLexerTest.testCR": {
            "message": [
                "Add some more tests that document escaping behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509957 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCR CSVLexerTest.java",
                "Use NotEscaped where character has not been escaped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCR CSVLexerTest.java",
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCR CSVLexerTest.java",
                "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCR CSVLexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.isDelimiter": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isDelimiter CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.isClosed": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isClosed CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.isCommentStart": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isCommentStart CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.mapNullToDisabled": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.mapNullToDisabled CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.close": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.close CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.isQuoteChar": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isQuoteChar CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.isEscape": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isEscape CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.isMetaChar": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isMetaChar CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.getCurrentLineNumber": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.getCurrentLineNumber CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.isStartOfLine": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isStartOfLine CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVLexer.readEndOfLine": {
            "message": [
                "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.readEndOfLine CSVLexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.parse": {
            "message": [
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Make checkstyle happy: remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512624 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Remove fallback logic for charset parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1519269 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "The charset can be null and will default to UTF-8.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578191 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Simplest behavior: null -> exception, like the other params.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578502 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Remove in-line comment that no longer applies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635507 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "[CSV-189] CSVParser: Add factory method accepting InputStream. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "[CSV-189] CSVParser: Add factory method accepting InputStream. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Sort static methods. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat) src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "CSVParser.parse(Path, Charset, CSVFormat) should use NIO and not convert\nthe Path to a File. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Fix last checkstyle error src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Update CSVParser.parse(File, Charset, CSVFormat) from IO to NIO. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Migrate from deprecated code\n\nCSVParser.Builder.recordNumber should default to 1 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Migrate from deprecated code\n\nCSVParser.Builder.recordNumber should default to 1 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Migrate from deprecated code\n\nCSVParser.Builder.recordNumber should default to 1 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators": {
            "message": [
                "Add test that documents behavior of multiple iterators over the same CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513228 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl": {
            "message": [
                "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "CSV-124 apply provided patch and update unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624048 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Fix the old test case record.getComment() will never be null (#62)\n\n* The old test case record.getComment() will never be null and if record.getComment() be null the test code misplace the null test.\r\nAdd a new test file that record.getComment() will be null and test record.getComment() no null before using\r\n\r\n* keep the caching of \"record.getComment()\" src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java",
                "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Assertions.Assertions": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.Assertions Assertions.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Assertions.notNull": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java",
                "Remove unnecessary generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518974 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java",
                "Remove unnecessary generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518974 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java",
                "Method in package private class does not need to be public src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.AssertionsTest.testNotNull": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.AssertionsTest.testNotNull AssertionsTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.AssertionsTest.testNotNull AssertionsTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.AssertionsTest.testNotNullNull": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.AssertionsTest.testNotNullNull AssertionsTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.AssertionsTest.testNotNullNull AssertionsTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat CSVParserTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java",
                "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java",
                "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java",
                "Clean up tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578199 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java",
                "TRailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582822 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java",
                "Use HTTPS links to Apache. src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java",
                "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat CSVPrinterTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat": {
            "message": [
                "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat": {
            "message": [
                "Remove fallback logic for charset parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1519269 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java",
                "The charset can be null and will default to UTF-8.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578198 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java",
                "Simplest behavior: null -> exception, like the other params.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java",
                "Use HTTPS links to Apache. src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isNullHandling": {
            "message": [
                "Add method to check if null handling has been defined\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522878 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isNullHandling CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues": {
            "message": [
                "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522882 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java",
                "[CSV-149]/[CSV-195] fix line number is not proper at EOF (#60) src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap": {
            "message": [
                "[CSV-100] CSVParser: getHeaderMap throws NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1524435 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java",
                "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.putIn": {
            "message": [
                "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "Hide a method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "Fix generics issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560399 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "Fix generics issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560399 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "[CSV-111] CSVRecord.toMap() fails if row length shorter than header length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1589281 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "<action issue=\"CSV-118\" type=\"fix\" dev=\"ggregory\" due-to=\"Enrique Lara\">CSVRecord.toMap() throws NPE on formats with no headers.</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1594966 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "[CSV-184] Make the method CSVRecord#putIn(Map) public. src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "Use streams.\nRemove unused imports. src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "* Replace For loop with map.forEach (#172)\n\n* Use diamond type <>\r\n* Extract commons expressions src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "Use own API src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "Fix typo, extract getHeaderMapRaw to var src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java",
                "Rollback var extraction src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.toMap": {
            "message": [
                "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toMap CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.toMap CSVRecord.java",
                "* Replace For loop with map.forEach (#172)\n\n* Use diamond type <>\r\n* Extract commons expressions src.main.java.org.apache.commons.csv.CSVRecord.toMap CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap": {
            "message": [
                "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap CSVRecordTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap CSVRecordTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap CSVRecordTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap CSVRecordTest.java",
                "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testToMap": {
            "message": [
                "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMap CSVRecordTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMap CSVRecordTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVRecordTest.testToMap CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap": {
            "message": [
                "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java",
                "Fix generics issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560399 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java",
                "Add testcases for CSVRecord with get(Enum) and toString. (#54) src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java",
                "* Replace For loop with map.forEach (#172)\n\n* Use diamond type <>\r\n* Extract commons expressions src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.toList": {
            "message": [
                "Internal refactoring. If we have a toMap, a toList makes sense (which is already needed internally).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560003 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toList CSVRecord.java",
                "[CSV-275] Make CSVRecord.toList() public. src.main.java.org.apache.commons.csv.CSVRecord.toList CSVRecord.java",
                "CSVRecord.toList() does not give write access to the new List src.main.java.org.apache.commons.csv.CSVRecord.toList CSVRecord.java",
                "Use own API src.main.java.org.apache.commons.csv.CSVRecord.toList CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.getOut": {
            "message": [
                "Add accessor for out ivar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560384 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.getOut CSVPrinter.java",
                "Sort 1 method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695166 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.getOut CSVPrinter.java",
                "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.getOut CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.getOut CSVPrinter.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns": {
            "message": [
                "Add @Test testRemoveAndAddColumns.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560389 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java",
                "Fix generics issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560399 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java",
                "Inline Collections.sort(Comparator). src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106": {
            "message": [
                "[CSV-106] CSVFormat.format always append null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1577011 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream": {
            "message": [
                "Testing [CSV-107] CSVFormat.EXCEL.parse should handle byte order marks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578196 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java",
                "Clean up tests for [CSV-107] CSVFormat.EXCEL.parse should handle byte order marks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578397 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java",
                "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBOM": {
            "message": [
                "Testing [CSV-107] CSVFormat.EXCEL.parse should handle byte order marks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578196 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "Clean up tests for [CSV-107] CSVFormat.EXCEL.parse should handle byte order marks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578397 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "Charset cannot be null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603965 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "Use standard constant src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineCustomCollection": {
            "message": [
                "Add API org.apache.commons.csv.CSVParser.getRecords(T).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584903 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineCustomCollection CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLine": {
            "message": [
                "Add API org.apache.commons.csv.CSVParser.getRecords(T).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584903 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLine CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLine CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLine CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken": {
            "message": [
                "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Fix PMDs: Unnecessary use of fully qualified name 'Constants.END_OF_STREAM' due to existing static import 'org.apache.commons.csv.Constants.END_OF_STREAM'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1721770 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "No need to nest in else. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "CSV-283: Remove Whitespace Check Determines Delimiter Twice (#167) src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Javadoc src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "moving exception handling to the Lexer src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "fixing checkstyle issue src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "MongoDBCsv empty first column parsing fix src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Extract duplicated code into a method src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Add CSVException that extends IOException thrown on invalid input\ninstead of IOException src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java",
                "Rename internal methods src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.nextToken": {
            "message": [
                "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java",
                "PMD: Remove useless parentheses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742468 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java",
                "CSV-283: Remove Whitespace Check Determines Delimiter Twice (#167) src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java",
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java",
                "Javadoc src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java",
                "Add Checkstyle rules src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken": {
            "message": [
                "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java",
                "Fix PMDs: Unnecessary use of fully qualified name 'Constants.END_OF_STREAM' due to existing static import 'org.apache.commons.csv.Constants.END_OF_STREAM'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1721770 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java",
                "No need to nest in else. src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java",
                "* Replace For loop with map.forEach (#172)\n\n* Use diamond type <>\r\n* Extract commons expressions src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java",
                "Extract duplicated code into a method src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser": {
            "message": [
                "Add org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(). See discussion in [CSV-110].\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585491 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java",
                "Add org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(). See discussion in [CSV-110].\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585492 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord": {
            "message": [
                "[CSV-111] CSVRecord.toMap() fails if row length shorter than header length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1589281 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord CSVRecordTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord CSVRecordTest.java",
                "[CSV-248] CSVRecord is not Serializable.\n\nSort members. src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaderEntries": {
            "message": [
                "CSV-112: HeaderMap is inconsistent when it is parsed from an input with duplicate columns names. Reported by Romain Goss\u00e9\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592371 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaderEntries CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord": {
            "message": [
                "Add missing fields to hashcode and equals methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592832 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java",
                "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString": {
            "message": [
                "Add missing fields to hashcode and equals methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592832 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java",
                "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader": {
            "message": [
                "<action issue=\"CSV-118\" type=\"fix\" dev=\"ggregory\" due-to=\"Enrique Lara\">CSVRecord.toMap() throws NPE on formats with no headers.</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1594966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader CSVRecordTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader CSVRecordTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader CSVRecordTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.print": {
            "message": [
                "<action issue=\"CSV-119\" type=\"add\" dev=\"ggregory\" due-to=\"Sergei Lebedev\">CSVFormat is missing a print(...) method</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1599285 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "<action issue=\"CSV-120\" type=\"add\" dev=\"ggregory\" due-to=\"Sergei Lebedev\">CSVFormat#withHeader doesn't work with CSVPrinter</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1601517 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add convenience API CSVFormat.print(File, Charset) (JIRA is down ATM).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748347 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add convenience API CSVFormat.print(Path, Charset) (JIRA is down ATM).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748349 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Fix comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "org.apache.commons.csv.CSVFormat.print(Path, Charset) should use NIO and\nnot convert the Path to a File. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "PMD: Unnecessary use of fully qualified name 'Constants.EMPTY' due to\nexisting static import 'org.apache.commons.csv.Constants.EMPTY' src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Use final. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "[CSV-238] Escape quotes in CLOBs.\n\nCloses #39. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Organize imports, simpler arrays, simpler if/else. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Javadoc src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Use final\n\nRemove whitespace src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Use NIO instead of old io. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint": {
            "message": [
                "<action issue=\"CSV-119\" type=\"add\" dev=\"ggregory\" due-to=\"Sergei Lebedev\">CSVFormat is missing a print(...) method</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1599285 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader": {
            "message": [
                "<action issue=\"CSV-120\" type=\"add\" dev=\"ggregory\" due-to=\"Sergei Lebedev\">CSVFormat#withHeader doesn't work with CSVPrinter</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1601517 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java",
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing": {
            "message": [
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Add a test that shows that ONE missing header is OK.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602166 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java",
                "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java",
                "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException": {
            "message": [
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Add a test that shows that TWO missing header is not OK.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602168 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException CSVParserTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException CSVParserTest.java",
                "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyHeaders": {
            "message": [
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyHeaders CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyHeaders": {
            "message": [
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyHeaders CSVFormat.java",
                "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyHeaders CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaders": {
            "message": [
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaders CSVParserTest.java",
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaders CSVParserTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaders CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing": {
            "message": [
                "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java",
                "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java",
                "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLfThrowsException": {
            "message": [
                "Camel case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603204 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLfThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF": {
            "message": [
                "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorIllegal": {
            "message": [
                "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorIllegal CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF": {
            "message": [
                "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR": {
            "message": [
                "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull": {
            "message": [
                "CSV-122: NullPointerException when empty header string and and null string of \"\". Thanks to Mike Lewis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609768 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java",
                "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java",
                "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringEmptyHeaders": {
            "message": [
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringEmptyHeaders CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isHandlingNull": {
            "message": [
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isHandlingNull CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringEmptyLines": {
            "message": [
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringEmptyLines CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isSkippingHeaderRecord": {
            "message": [
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isSkippingHeaderRecord CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringSurroundingSpaces": {
            "message": [
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringSurroundingSpaces CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines": {
            "message": [
                "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines LexerTest.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines LexerTest.java",
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines LexerTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines LexerTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines LexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker": {
            "message": [
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testComments": {
            "message": [
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testComments LexerTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testComments LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testNextToken6": {
            "message": [
                "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken6 LexerTest.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken6 LexerTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken6 LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testNextToken6 LexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isAllowMissingColumnNames": {
            "message": [
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isAllowMissingColumnNames CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames": {
            "message": [
                "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames": {
            "message": [
                "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode": {
            "message": [
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getQuoteMode": {
            "message": [
                "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuoteMode CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getQuoteMode CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getQuoteMode CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getQuoteCharacter": {
            "message": [
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuoteCharacter CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getQuoteCharacter CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getQuoteCharacter CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withQuote": {
            "message": [
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getEscapeCharacter": {
            "message": [
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getEscapeCharacter CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getEscapeCharacter CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getEscapeCharacter CSVFormat.java",
                "Don't allocate an extra String in CSVFormat.printWithEscapes(Reader,\nAppendable)\n\nInternal refactoring src.main.java.org.apache.commons.csv.CSVFormat.getEscapeCharacter CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet": {
            "message": [
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isNullStringSet": {
            "message": [
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isNullStringSet CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isNullStringSet CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isNullStringSet CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isCommentStartCharacterSet": {
            "message": [
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentStartCharacterSet CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getCommentStartCharacter": {
            "message": [
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getCommentStartCharacter CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet": {
            "message": [
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithEscaping": {
            "message": [
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithEscaping LexerTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithEscaping LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithEscaping LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping": {
            "message": [
                "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping LexerTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping LexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getCommentMarker": {
            "message": [
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getCommentMarker CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getCommentMarker CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getCommentMarker CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isCommentMarkerSet": {
            "message": [
                "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentMarkerSet CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isCommentMarkerSet CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isCommentMarkerSet CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData": {
            "message": [
                "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted": {
            "message": [
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted LexerTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testNextToken4": {
            "message": [
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken4 LexerTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken4 LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testNextToken4 LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted": {
            "message": [
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted LexerTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testIgnoreEmptyLines": {
            "message": [
                "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testIgnoreEmptyLines LexerTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testIgnoreEmptyLines LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testIgnoreEmptyLines LexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getHeaderComments": {
            "message": [
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getHeaderComments CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getHeaderComments CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getHeaderComments CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.toStringArray": {
            "message": [
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java",
                "Use Java 8 API src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments": {
            "message": [
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel": {
            "message": [
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java",
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments": {
            "message": [
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...). Adjust test for style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623985 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...). Adjust test for style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623985 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf": {
            "message": [
                "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java",
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getPosition": {
            "message": [
                "[CSV-131] Save positions of records to enable random access. First commit for this new feature. Let the ExtendedBufferedReader track how many characters it has read so far.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1625455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getPosition ExtendedBufferedReader.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getPosition ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.getCharacterPosition": {
            "message": [
                "[CSV-131] Save positions of records to enable random access. 2nd commit for this new feature. Let the Lexer make the underlying reader's character position available through a new package private method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1625456 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.getCharacterPosition Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.getCharacterPosition Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.setNextRecordNumber": {
            "message": [
                "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.setNextRecordNumber CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.setNextCharacterPosition": {
            "message": [
                "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.setNextCharacterPosition CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getCharacterPosition": {
            "message": [
                "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getCharacterPosition CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF": {
            "message": [
                "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF CSVParserTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF CSVParserTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition": {
            "message": [
                "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java",
                "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF": {
            "message": [
                "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF CSVParserTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF CSVParserTest.java",
                "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders": {
            "message": [
                "Use @Ignore instead of commenting out code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635065 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable": {
            "message": [
                "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java",
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java",
                "Refactor test to better abstract set up of fixture.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java",
                "Refactor test to better abstract set up of fixture.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java",
                "[CSV-234] Add support for java.sql.Clob. src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java",
                "[CSV-238] Escape quotes in CLOBs.\n\nCloses #39. src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithHeaders": {
            "message": [
                "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithHeaders CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet": {
            "message": [
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java",
                "Refactor test to better abstract set up of fixture.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java",
                "Better exception handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638111 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java",
                "[CSV-234] Add support for java.sql.Clob. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java",
                "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java",
                "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java",
                "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.geH2Connection": {
            "message": [
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.geH2Connection CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.geH2Connection CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData": {
            "message": [
                "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java",
                "Refactor test to better abstract set up of fixture.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java",
                "Better exception handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638111 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java",
                "[CSV-234] Add support for java.sql.Clob. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java",
                "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java",
                "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV": {
            "message": [
                "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java",
                "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java",
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.getReader": {
            "message": [
                "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java",
                "Load the data in memory before running the benchmarks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658653 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java",
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java",
                "Sort test members src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.baseline": {
            "message": [
                "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.baseline CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback": {
            "message": [
                "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback CSVBenchmark.java",
                "Sort test members src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV": {
            "message": [
                "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java",
                "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java",
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV": {
            "message": [
                "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java",
                "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java",
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV": {
            "message": [
                "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java",
                "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java",
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV": {
            "message": [
                "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java",
                "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java",
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV": {
            "message": [
                "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java",
                "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java",
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.split": {
            "message": [
                "Added another baseline benchmark against StringUtils.split() from commons-lang\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658392 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java",
                "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java",
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java",
                "Sort test members src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.read": {
            "message": [
                "Added another baseline benchmark against StringUtils.split() from commons-lang\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658392 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java",
                "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java",
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java",
                "Sort test members src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.init": {
            "message": [
                "Load the data in memory before running the benchmarks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658653 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.init CSVBenchmark.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.init CSVBenchmark.java",
                "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.test.java.org.apache.commons.csv.CSVBenchmark.init CSVBenchmark.java",
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.init CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.init CSVBenchmark.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getFormat": {
            "message": [
                "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getFormat CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getFormat CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getFormat CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.Predefined": {
            "message": [
                "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java",
                "Drop modifiers which are implied by the context\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742149 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testDefault": {
            "message": [
                "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testDefault CSVFormatPredefinedTest.java",
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testDefault CSVFormatPredefinedTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.test": {
            "message": [
                "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.test CSVFormatPredefinedTest.java",
                "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695179 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.test CSVFormatPredefinedTest.java",
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.test CSVFormatPredefinedTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.test CSVFormatPredefinedTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testTDF": {
            "message": [
                "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testTDF CSVFormatPredefinedTest.java",
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testTDF CSVFormatPredefinedTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testExcel": {
            "message": [
                "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testExcel CSVFormatPredefinedTest.java",
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testExcel CSVFormatPredefinedTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL": {
            "message": [
                "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL CSVFormatPredefinedTest.java",
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL CSVFormatPredefinedTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL CSVFormatPredefinedTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180": {
            "message": [
                "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180 CSVFormatPredefinedTest.java",
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180 CSVFormatPredefinedTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.valueOf": {
            "message": [
                "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695179 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.valueOf CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.valueOf CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.valueOf CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testJIraCsv154": {
            "message": [
                "Test CSV-154.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1700073 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testJIraCsv154 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withHeaderComments": {
            "message": [
                "Test CSV-154.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1700391 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withHeaderComments CSVFormatTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withHeaderComments CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withCommentMarker": {
            "message": [
                "Test CSV-154.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1700391 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withCommentMarker CSVFormatTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withCommentMarker CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue": {
            "message": [
                "CSV-153: CSVPrinter doesn't skip creation of header record if skipHeaderRecord is set to true. Thanks to Wren. This also fixes #8 from github.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1706542 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue CSVPrinterTest.java",
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet": {
            "message": [
                "CSV-153: CSVPrinter doesn't skip creation of header record if skipHeaderRecord is set to true. Thanks to Wren. This also fixes #8 from github.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1706542 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse": {
            "message": [
                "CSV-153: CSVPrinter doesn't skip creation of header record if skipHeaderRecord is set to true. Thanks to Wren. This also fixes #8 from github.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1706542 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java",
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase": {
            "message": [
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase": {
            "message": [
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase CSVFormat.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping": {
            "message": [
                "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders": {
            "message": [
                "More tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1715712 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders": {
            "message": [
                "More tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1715712 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java",
                "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.isComment": {
            "message": [
                "Unit test for [CSV-167] Comment line hides next record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1721778 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isComment CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault CSVPrinterTest.java",
                "The declared exception IOException is not actually thrown by the method testMySqlNullStringDefault() from type CSVPrinterTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743528 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomExcel": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomExcel CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomExcel CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java",
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMySql": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMySql CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMySql CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java",
                "Use Java 7 method instead of Apache Commons Lang 3.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748095 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomDefault": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomDefault CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomDefault CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.generateLines": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.generateLines CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.generateLines CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomTdf": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomTdf CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomTdf CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomTdf CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash": {
            "message": [
                "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash CSVPrinterTest.java",
                "Remove extra blank line. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2": {
            "message": [
                "Update copyright for 2016 in NOTICE.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725424 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All": {
            "message": [
                "Update copyright for 2016 in NOTICE.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725424 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3": {
            "message": [
                "Update copyright for 2016 in NOTICE.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725424 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1": {
            "message": [
                "Update copyright for 2016 in NOTICE.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725424 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java",
                "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.hasComment": {
            "message": [
                "CSV-167 Rename method and update Javadoc to correspond with reality\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1727766 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.hasComment CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getTrailingDelimiter": {
            "message": [
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getTrailingDelimiter CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getTrailingDelimiter CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getTrailingDelimiter CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getTrim": {
            "message": [
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getTrim CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getTrim CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getTrim CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withTrim": {
            "message": [
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "Sort methods in alphabetic order\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742506 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter": {
            "message": [
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testTrim": {
            "message": [
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter": {
            "message": [
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns": {
            "message": [
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns CSVPrinterTest.java",
                "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn": {
            "message": [
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn CSVPrinterTest.java",
                "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn": {
            "message": [
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn CSVPrinterTest.java",
                "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns": {
            "message": [
                "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns CSVPrinterTest.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns CSVPrinterTest.java",
                "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum": {
            "message": [
                "CSV-180: Add withHeader(Class<? extends Enum>) to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742169 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum": {
            "message": [
                "CSV-180: Add withHeader(Class<? extends Enum>) to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742169 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments": {
            "message": [
                "Move tests for specific issues to own package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742173 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments JiraCsv164Test.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments JiraCsv164Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker": {
            "message": [
                "Move tests for specific issues to own package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742173 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker JiraCsv164Test.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker JiraCsv164Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.parse": {
            "message": [
                "Unit test for [CSV-167] Comment line hides next record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1721778 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.JiraCsv167Test.parse JiraCsv167Test.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.JiraCsv167Test.parse JiraCsv167Test.java",
                "Fix test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1727538 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.JiraCsv167Test.parse JiraCsv167Test.java",
                "Oops, forgot to commit this\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1727808 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.JiraCsv167Test.parse JiraCsv167Test.java",
                "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.JiraCsv167Test.parse JiraCsv167Test.java",
                "Move tests for specific issues to own package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742173 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.parse JiraCsv167Test.java",
                "Access test data using the classloader instead of defining a file handle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742426 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.parse JiraCsv167Test.java",
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.parse JiraCsv167Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader": {
            "message": [
                "CSV-179: Add shortcut method for using first record as header to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742175 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader": {
            "message": [
                "CSV-179: Add shortcut method for using first record as header to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742175 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader CSVFormatTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.getTestInput": {
            "message": [
                "Access test data using the classloader instead of defining a file handle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742426 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.getTestInput JiraCsv167Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.trim": {
            "message": [
                "[CSV-181] Make CSVPrinter.print(Object) GC-free.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.trim CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.trim": {
            "message": [
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java",
                "Useless parentheses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java",
                "Reuse constant instead of magic char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743432 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java",
                "Reuse constant instead of magic char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743434 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java",
                "Refactor duplicate code\n\nNormalize Javadoc first word src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java",
                "Test for empty/blank headers the same way for input and output src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.printAndEscape": {
            "message": [
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.printAndEscape CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.printRecord": {
            "message": [
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java",
                "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.println": {
            "message": [
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java",
                "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java",
                "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.printAndQuote": {
            "message": [
                "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.printAndQuote CSVFormat.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.main.java.org.apache.commons.csv.CSVFormat.printAndQuote CSVFormat.java",
                "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.main.java.org.apache.commons.csv.CSVFormat.printAndQuote CSVFormat.java",
                "[CSV-219] The behavior of quote char using is not similar as Excel does\nwhen the first string contains CJK char(s).\n[CSV-172] Don't quote cells just because they have UTF-8 encoded\ncharacters. src.main.java.org.apache.commons.csv.CSVFormat.printAndQuote CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes": {
            "message": [
                "Add tests for CSVFormat.equals for null quotes. Closes #12. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1747331 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote": {
            "message": [
                "Add tests for CSVFormat.equals for null quotes. Closes #12. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1747331 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote CSVFormatTest.java",
                "Fix Checkstyle warnings: Remove trailing white spaces on all lines. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.createBufferedReader": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.createBufferedReader ExtendedBufferedReaderTest.java",
                "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader.\n\nClean up new test methods. Sort methods. src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.createBufferedReader ExtendedBufferedReaderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testNextToken5": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken5 LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testNextToken5 LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEscapedCR": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedCR LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEscapingAtEOF": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapingAtEOF LexerTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.LexerTest.testEscapingAtEOF LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapingAtEOF LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.createLexer": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.createLexer LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testBackspace": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testBackspace LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testBackspace LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter2": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter2 LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter2 LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testTab": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testTab LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testTab LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEscapedTab": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedTab LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEscapedFF": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedFF LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedFF LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEscapedLF": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedLF LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testLF": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testLF LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testLF LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testFF": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testFF LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testFF LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEscapedBackspace": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedBackspace LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedBackspace LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEscapedCharacter": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedCharacter LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedCharacter LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testCR": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testCR LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testCR LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.createReader": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.createReader PerformanceTest.java",
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.createReader PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.createReader PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.createReader PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.createTestCSVLexer": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.createTestCSVLexer PerformanceTest.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.PerformanceTest.createTestCSVLexer PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.createTestCSVLexer PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.createTestCSVLexer PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.perf.PerformanceTest.createBufferedReader": {
            "message": [
                "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.createBufferedReader PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset": {
            "message": [
                "Add convenience API CSVFormat.print(File, Charset) (JIRA is down ATM).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748347 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset CSVPrinterTest.java",
                "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset CSVPrinterTest.java",
                "Port some code from IO to NIO APIs src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be": {
            "message": [
                "Add convenience API CSVFormat.print(File, Charset) (JIRA is down ATM).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748347 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be CSVPrinterTest.java",
                "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be CSVPrinterTest.java",
                "Port some code from IO to NIO APIs src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset": {
            "message": [
                "Add convenience API CSVFormat.print(Path, Charset) (JIRA is down ATM).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748349 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset CSVPrinterTest.java",
                "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset CSVPrinterTest.java",
                "Port some code from IO to NIO APIs src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream": {
            "message": [
                "[CSV-189] CSVParser: Add factory method accepting InputStream. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java",
                "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java",
                "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader": {
            "message": [
                "[CSV-189] CSVParser: Add factory method accepting InputStream. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java",
                "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java",
                "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader": {
            "message": [
                "[CSV-189] CSVParser: Add factory method accepting InputStream. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java",
                "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java",
                "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream": {
            "message": [
                "[CSV-189] CSVParser: Add factory method accepting InputStream. src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream CSVParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream CSVParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream CSVParserTest.java",
                "CSVParser.getRecords() now throws UncheckedIOException instead of\nIOException src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintOnePositiveInteger": {
            "message": [
                "Add testPrintOnePositiveInteger(). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintOnePositiveInteger CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintOnePositiveInteger CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintOnePositiveInteger CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash3": {
            "message": [
                "Break up testEscapeBackslash() method into individual tests. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash3 CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash3 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash3 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash3 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2": {
            "message": [
                "Break up testEscapeBackslash() method into individual tests. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2 CSVPrinterTest.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2 CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4": {
            "message": [
                "Break up testEscapeBackslash() method into individual tests. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4 CSVPrinterTest.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4 CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5": {
            "message": [
                "Break up testEscapeBackslash() method into individual tests. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5 CSVPrinterTest.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5 CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1": {
            "message": [
                "Break up testEscapeBackslash() method into individual tests. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1 CSVPrinterTest.java",
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1 CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull4": {
            "message": [
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull4 CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull4 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull4 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull4 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull1": {
            "message": [
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull1 CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull1 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull1 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull1 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull3": {
            "message": [
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull3 CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull3 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull3 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull3 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull5": {
            "message": [
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull5 CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull5 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull5 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull5 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull2": {
            "message": [
                "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull2 CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull2 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull2 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull2 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRfc4180QuoteSingleChar": {
            "message": [
                "Add testRfc4180QuoteSingleChar(). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRfc4180QuoteSingleChar CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.bugs.JiraCsv198Test.test": {
            "message": [
                "Add JiraCsv198Test. src.test.java.org.apache.commons.csv.bugs.JiraCsv198Test.test JiraCsv198Test.java",
                "Fix compiler warnings. src.test.java.org.apache.commons.csv.bugs.JiraCsv198Test.test JiraCsv198Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.printer": {
            "message": [
                "[CSV-205] \n\nAdd convenience API CSVFormat#printer() to print to System.out. src.main.java.org.apache.commons.csv.CSVFormat.printer CSVFormat.java",
                "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.printer CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printer CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printer CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printer CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues": {
            "message": [
                "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java",
                "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode": {
            "message": [
                "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java",
                "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll": {
            "message": [
                "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString": {
            "message": [
                "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal": {
            "message": [
                "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java",
                "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric": {
            "message": [
                "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java",
                "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull": {
            "message": [
                "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlText": {
            "message": [
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlText CSVFormatPredefinedTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlCsv": {
            "message": [
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlCsv CSVFormatPredefinedTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlCsv CSVFormatPredefinedTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvTextOutput": {
            "message": [
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvTextOutput CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvTextOutput CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlCsv": {
            "message": [
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlCsv CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlCsv CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlText": {
            "message": [
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlText CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlText CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSQLNullStringDefaultText": {
            "message": [
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSQLNullStringDefaultText CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvNullOutput": {
            "message": [
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvNullOutput CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvNullOutput CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSQLNullStringDefaultCsv": {
            "message": [
                "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSQLNullStringDefaultCsv CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testToString": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java",
                "[CSV-220] Add API\norg.apache.commons.csv.CSVFormat.withSystemRecordSeparator(). src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java",
                "Address compiler warnings. src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java",
                "[CSV-208] Fix escape character for POSTGRESQL_TEXT and POSTGRESQL_CSV\nformats. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java",
                "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java",
                "CSV-290 - Fix the wrong assumptions in PostgreSQL formats\n\nCSVFormat.POSTGRESQL_CSV - special characters are not escaped.\nCSVFormat.POSTGRESQL_TEXT - values are not quoted. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java",
                "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java",
                "Internal refactoring for escape character src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java",
                "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat CSVFormatTest.java",
                "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java",
                "Document change to test behaviour src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java",
                "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java",
                "CSV-244 Test case failures following CSVFormat#equals() update src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java",
                "Address compiler warnings. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java",
                "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java",
                "Fixed CSV-271 & Add testcase for new change (#157) src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java",
                "Document change to test behaviour src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java",
                "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java",
                "CSV-244 Test case failures following CSVFormat#equals() update src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java",
                "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java",
                "Be quiet on the console. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java",
                "Don't use deprecated code src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow": {
            "message": [
                "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java",
                "Update tests from H2 1.4.197 to 1.4.198. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.test": {
            "message": [
                "[CSV-213] CSVParser#iterator()#hasNext() fails. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.test JiraCsv213Test.java",
                "Enable JiraCsv213Test src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.test JiraCsv213Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel": {
            "message": [
                "[CSV-213] CSVParser#iterator()#hasNext() fails. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java",
                "Don't throw RuntimeException. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java",
                "Clean ups. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java",
                "Remove useless return. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java",
                "Better resource management. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getFirstEndOfLine": {
            "message": [
                "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.main.java.org.apache.commons.csv.CSVParser.getFirstEndOfLine CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.getFirstEol": {
            "message": [
                "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.main.java.org.apache.commons.csv.Lexer.getFirstEol Lexer.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.getFirstEol Lexer.java",
                "Add Checkstyle rules src.main.java.org.apache.commons.csv.Lexer.getFirstEol Lexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf": {
            "message": [
                "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf CSVParserTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf": {
            "message": [
                "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf CSVParserTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCr": {
            "message": [
                "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCr CSVParserTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCr CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCr CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush": {
            "message": [
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java",
                "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getAutoFlush": {
            "message": [
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.getAutoFlush CSVFormat.java",
                "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.getAutoFlush CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getAutoFlush CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getAutoFlush CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility": {
            "message": [
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java",
                "Fix compiler warning. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn": {
            "message": [
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java",
                "[CSV-217] Add autoFlush option for CsvPrinter. Remove println() in test. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java",
                "Fix compiler warning. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn": {
            "message": [
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java",
                "Address compiler warnings. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff": {
            "message": [
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java",
                "Address compiler warnings. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff": {
            "message": [
                "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java",
                "Fix compiler warning. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test": {
            "message": [
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java",
                "Move resources to component specific folder. src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java",
                "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java",
                "Use forEach() src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteCommaFirstChar": {
            "message": [
                "[CSV-219] The behavior of quote char using is not similar as Excel does\nwhen the first string contains CJK char(s).\n[CSV-172] Don't quote cells just because they have UTF-8 encoded\ncharacters. src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteCommaFirstChar CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteCommaFirstChar CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteCommaFirstChar CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar": {
            "message": [
                "[CSV-219] The behavior of quote char using is not similar as Excel does\nwhen the first string contains CJK char(s).\n[CSV-172] Don't quote cells just because they have UTF-8 encoded\ncharacters. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar CSVPrinterTest.java",
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator": {
            "message": [
                "[CSV-220] Add API\norg.apache.commons.csv.CSVFormat.withSystemRecordSeparator(). src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator": {
            "message": [
                "[CSV-220] Add API\norg.apache.commons.csv.CSVFormat.withSystemRecordSeparator(). src.test.java.org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator CSVFormatTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator CSVFormatTest.java",
                "Use API instead of system property\n\nUse final src.test.java.org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testOracle": {
            "message": [
                "[CSV-209] Create CSVFormat.ORACLE preset. Also: Fix and complete\ndocumentation for other formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testOracle CSVFormatPredefinedTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testOracle CSVFormatPredefinedTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomOracle": {
            "message": [
                "[CSV-209] Create CSVFormat.ORACLE preset. Also: Fix and complete\ndocumentation for other formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomOracle CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomOracle CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator": {
            "message": [
                "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Remove trailing white spaces on all lines. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Remove trailing white spaces on all lines. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "CSVParser.getRecords() now throws UncheckedIOException instead of\nIOException src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "removing duplicated exception class name from error message src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Update CSVParser.java src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Remove redundant keywords src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Remove redundant keywords src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking": {
            "message": [
                "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java",
                "Move init in test. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java",
                "Remove trailing whitepsace. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat": {
            "message": [
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParse": {
            "message": [
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java",
                "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java",
                "Add @SuppressWarnings(\"resource\") in test as narrowly as possible src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.parseFully": {
            "message": [
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java",
                "Use final and lambda shorthand src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.testParser": {
            "message": [
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testParser PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.testParser PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testParser PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.testParsePathDoubleBuffering": {
            "message": [
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePathDoubleBuffering PerformanceTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePathDoubleBuffering PerformanceTest.java",
                "More lambdas, less boilerplate. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePathDoubleBuffering PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testParsePathDoubleBuffering PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL": {
            "message": [
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL PerformanceTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL PerformanceTest.java",
                "More lambdas, less boilerplate. src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL PerformanceTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.PerformanceTest.testParsePath": {
            "message": [
                "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePath PerformanceTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePath PerformanceTest.java",
                "More lambdas, less boilerplate. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePath PerformanceTest.java",
                "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testParsePath PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbTsv": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbTsv CSVFormatPredefinedTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbTsv CSVFormatPredefinedTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbCsv": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbCsv CSVFormatPredefinedTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbCsv CSVFormatPredefinedTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testMongoDbCsv": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVParserTest.testMongoDbCsv CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testMongoDbCsv CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvCommaInValue": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvCommaInValue CSVPrinterTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvCommaInValue CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvCommaInValue CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvCommaInValue CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvBasic": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvBasic CSVPrinterTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvBasic CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvBasic CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvBasic CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvCommaInValue": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvCommaInValue CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvCommaInValue CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvCommaInValue CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolEscaped": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolEscaped CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolEscaped CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolEscaped CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvDoubleQuoteInValue": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvDoubleQuoteInValue CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvDoubleQuoteInValue CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvDoubleQuoteInValue CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvBasic": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvBasic CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvBasic CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvBasic CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvTabInValue": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvTabInValue CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvTabInValue CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvTabInValue CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvTabInValue": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvTabInValue CSVPrinterTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvTabInValue CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvTabInValue CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultCsv": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultCsv CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultCsv CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolPlain": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolPlain CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolPlain CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolPlain CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterNullAppendableFormat": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterNullAppendableFormat CSVPrinterTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterNullAppendableFormat CSVPrinterTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterNullAppendableFormat CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterNullAppendableFormat CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultText": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultText CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultText CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNone": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNone CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNone CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNone CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolQuoted": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolQuoted CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolQuoted CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolQuoted CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMongoDbCsv": {
            "message": [
                "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMongoDbCsv CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMongoDbCsv CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes": {
            "message": [
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Checkstyle. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "[CSV-238] Escape quotes in CLOBs.\n\nCloses #39. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "[CSV-238] Escape quotes in CLOBs.\n\nCloses #39. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "CSV-135 - Char escape doesn't work\n\nEnsure escape chars are escaped when using quote mode src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "[CSV-263] Print from Reader with embedded quotes generates incorrect\noutput.\n\n- Resolve conflicts from PR #78 by Jason A. Guild.\n- Don't use depreacted methods.\n- Javadoc.\n- Use final. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Refactor duplicate code\n\nNormalize Javadoc first word src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Javadoc src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Call append once\n\nBetter comments src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "[CSV-311] OutOfMemory for very long rows despite using column value of\ntype Reader src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Internal refactoring for delimiter src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Internal refactoring for escape character src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes": {
            "message": [
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "fix isssue csv-259 (#61)\n\n* fix isssue csv-259\r\n\r\n* add testcase for CSV259\r\n\r\n* exclude csv259 test file\r\n\r\n* organize the imports src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "CSV-267 - Minor improvement (#126) src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Internal refactoring for delimiter src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Internal refactoring for delimiter src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Internal refactoring for escape character src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Internal refactoring for escape character src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Allocate a string look ahead buffer in\nCSVFormat.printWithEscapes(CharSequence, Appendable)\n\nAs opposed to one for each character read. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Don't allocate an extra String in CSVFormat.printWithEscapes(Reader,\nAppendable)\n\nInternal refactoring src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Don't allocate an extra String in CSVFormat.printWithEscapes(Reader,\nAppendable)\n\nInternal refactoring src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "No need to store in local variable src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "No need to store in local variable src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Rename internal methods src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Better internal API src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.IOUtils.copyLarge": {
            "message": [
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java",
                "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java",
                "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.IOUtils.copy": {
            "message": [
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.IOUtils.copy IOUtils.java",
                "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.IOUtils.copy IOUtils.java",
                "Bump commons-parent from 52 to 53.\n\nAllow org.apache.commons.csv.IOUtils.copy(Reader, Appendable,\nCharBuffer) to compile on Java 11 and run on Java 8. src.main.java.org.apache.commons.csv.IOUtils.copy IOUtils.java",
                "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.IOUtils.copy IOUtils.java",
                "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.IOUtils.copy IOUtils.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.createHeaderMap": {
            "message": [
                "Better method name. src.main.java.org.apache.commons.csv.CSVParser.createHeaderMap CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nSome NPE-proofing. src.main.java.org.apache.commons.csv.CSVParser.createHeaderMap CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.createHeaderMap CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.createHeaderMap CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.createHeaderNames": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.createHeaderNames CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo header names as an read-only list. src.main.java.org.apache.commons.csv.CSVParser.createHeaderNames CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nCSVParser.createHeaderNames(Map<String, Integer>) -> private and\ninstance side. src.main.java.org.apache.commons.csv.CSVParser.createHeaderNames CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getHeaderNames": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.getHeaderNames CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getIndex": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.getIndex CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getName": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.getName CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetHeaderNames": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetHeaderNames CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getHeaderNames": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.getHeaderNames CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo header names as an read-only list. src.main.java.org.apache.commons.csv.CSVParser.getHeaderNames CSVParser.java",
                "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVParser.getHeaderNames CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getHeaderMapRaw": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.getHeaderMapRaw CSVParser.java",
                "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVParser.getHeaderMapRaw CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.getHeaderMapRaw CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.createEmptyHeaderMap": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.createEmptyHeaderMap CSVParser.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nUndo previous change. src.main.java.org.apache.commons.csv.CSVParser.createEmptyHeaderMap CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.createEmptyHeaderMap CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getCSVParser": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.getCSVParser CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getHeaderMapRaw": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.getHeaderMapRaw CSVRecord.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nRename CSVRecord.getCSVParser() -> getParser(). src.main.java.org.apache.commons.csv.CSVRecord.getHeaderMapRaw CSVRecord.java",
                "[CSV-248] Test the parser and map functionality after deserialization\n\nMethods with unexpected return values (null or exceptions) have been\ndocumented. All other methods will just fail as if the record came from\na parser without a header. src.main.java.org.apache.commons.csv.CSVRecord.getHeaderMapRaw CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames CSVParserTest.java",
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nAdd test. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsInconsistent": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVRecordTest.testIsInconsistent CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nAdd test. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java",
                "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.getParser": {
            "message": [
                "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nRename CSVRecord.getCSVParser() -> getParser(). src.main.java.org.apache.commons.csv.CSVRecord.getParser CSVRecord.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames": {
            "message": [
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames": {
            "message": [
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java",
                "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java",
                "Prepare for release 1.7.\n\n- There is no longer site archives. We forgot to do it for 1.6 but the\nsites are still in svn.\n- The Javadoc archives now point to the same place GitHub uses:\njavadoc.io\n- Checkstyle fixes. src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.Headers": {
            "message": [
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVParser.Headers CSVParser.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVParser.Headers CSVParser.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVParser.Headers CSVParser.java",
                "Sort methods in AB order. src.main.java.org.apache.commons.csv.CSVParser.Headers CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.createHeaders": {
            "message": [
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "Prepare for release 1.7.\n\n- There is no longer site archives. We forgot to do it for 1.6 but the\nsites are still in svn.\n- The Javadoc archives now point to the same place GitHub uses:\njavadoc.io\n- Checkstyle fixes. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "Guard against NPE in createHeaders\n\nAlso, formatting and whitespace changes\nas requested in code review. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "Javadoc and format tweaks src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "Test for empty/blank headers the same way for input and output src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "User ternary expression src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames": {
            "message": [
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java",
                "Add @SuppressWarnings(\"resource\") in test as narrowly as possible src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed": {
            "message": [
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFileHeaderParsing": {
            "message": [
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFileHeaderParsing CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFileHeaderParsing CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault": {
            "message": [
                "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault CSVParserTest.java",
                "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault CSVParserTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault CSVParserTest.java",
                "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV": {
            "message": [
                "Standardize on US spelling of \"behavior\". src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel": {
            "message": [
                "Standardize on US spelling of \"behavior\". src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel": {
            "message": [
                "Standardize on US spelling of \"behavior\". src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java",
                "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue": {
            "message": [
                "[CSV-241] CSVFormat#valiadte() does not account for\nllowDuplicateHeaderNames.\n\nApplying a different version of the GitHub patch with adjustments to the\ntests. Also remove trailing whitespace from CSVRecord.\n\nCloses #43. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse": {
            "message": [
                "[CSV-241] CSVFormat#valiadte() does not account for\nllowDuplicateHeaderNames.\n\nApplying a different version of the GitHub patch with adjustments to the\ntests. Also remove trailing whitespace from CSVRecord.\n\nCloses #43. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash": {
            "message": [
                "CSV-242 CSVFormat equals() and hash() don't use all fields\n\nFix equals()\nTODO fix hash() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java",
                "Remove trailing white spaces on all lines. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java",
                "Use varargs. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java",
                "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java",
                "Convert cascading if-else to switch src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToWriter": {
            "message": [
                "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToWriter CSVPrinterTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToWriter CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToWriter CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToAppendable": {
            "message": [
                "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToAppendable CSVPrinterTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToAppendable CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToAppendable CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToAppendable CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235": {
            "message": [
                "CSV235 - WRONG Implementation for RFC4180\n\nShow that implementation is actually correct src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235 CSVParserTest.java",
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235 CSVParserTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235 CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235 CSVParserTest.java",
                "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat": {
            "message": [
                "CSV-135 - Char escape doesn't work\n\nEnsure escape chars are escaped when using quote mode src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java",
                "Use try-with-resources. Better local var name. src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java",
                "Use try-with-resources. Better local var name. src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135": {
            "message": [
                "CSV-135 - Char escape doesn't work\n\nEnsure escape chars are escaped when using quote mode src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135 CSVPrinterTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135 CSVPrinterTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135 CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236": {
            "message": [
                "[CSV-236] Allow duplicate headers in CSV File.\n\nAdd test. src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCvs249.testJiraCsv249": {
            "message": [
                "[CSV-249] ArrayIndexOutOfBoundsException when trying to read record\nwritten by CSVPrinter using CSVParser with same format.\n\nAdd passing test. src.test.java.org.apache.commons.csv.issues.JiraCvs249.testJiraCsv249 JiraCvs249.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments": {
            "message": [
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments JiraCsv164Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withCommentMarker": {
            "message": [
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withCommentMarker JiraCsv164Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.parse": {
            "message": [
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.parse JiraCsv167Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.parse JiraCsv167Test.java",
                "Better resource management. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.parse JiraCsv167Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.parse JiraCsv167Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCvs249Test.testJiraCsv249": {
            "message": [
                "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCvs249Test.testJiraCsv249 JiraCvs249Test.java",
                "No need for all the whitespace. src.test.java.org.apache.commons.csv.issues.JiraCvs249Test.testJiraCsv249 JiraCvs249Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCvs247Test.testJiraDescription": {
            "message": [
                "[CSV-247]  A single empty header is allowed when not allowing empty\ncolumn headers.\n\nAdd test case. src.test.java.org.apache.commons.csv.issues.JiraCvs247Test.testJiraDescription JiraCvs247Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCvs247Test.testHeadersMissingOneColumn": {
            "message": [
                "[CSV-247]  A single empty header is allowed when not allowing empty\ncolumn headers.\n\nAdd test case. src.test.java.org.apache.commons.csv.issues.JiraCvs247Test.testHeadersMissingOneColumn JiraCvs247Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingOneColumnException": {
            "message": [
                "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingOneColumnException CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingOneColumnException CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingOneColumnException CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames": {
            "message": [
                "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames JiraCsv247Test.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames JiraCsv247Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames JiraCsv247Test.java",
                "Better resource management. src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames JiraCsv247Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames JiraCsv247Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingOneColumnWhenAllowingMissingColumnNames": {
            "message": [
                "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingOneColumnWhenAllowingMissingColumnNames JiraCsv247Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingOneColumnWhenAllowingMissingColumnNames JiraCsv247Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingOneColumnWhenAllowingMissingColumnNames JiraCsv247Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetString": {
            "message": [
                "Add CSVRecord.isSet(int) method (#52)\n\n* Add CSVRecord.isSet(int) method\r\n\r\n* Remove unnecessary unboxing\r\n\r\n* Revert: Remove unnecessary unboxing src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetString CSVRecordTest.java",
                "[CSV-248] CSVRecord is not Serializable.\n\nSort members. src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetString CSVRecordTest.java",
                "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetString CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetInt": {
            "message": [
                "Add CSVRecord.isSet(int) method (#52)\n\n* Add CSVRecord.isSet(int) method\r\n\r\n* Remove unnecessary unboxing\r\n\r\n* Revert: Remove unnecessary unboxing src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetInt CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization": {
            "message": [
                "[CSV-248] CSVRecord is not Serializable.\n\nMake field transient. src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java",
                "[CSV-248] Test the parser and map functionality after deserialization\n\nMethods with unexpected return values (null or exceptions) have been\ndocumented. All other methods will just fail as if the record came from\na parser without a header. src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java",
                "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java",
                "Proper use of JUnit APIs src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java",
                "Use Assertions.assertInstanceOf() src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetNullEnum": {
            "message": [
                "Let a null input to CSVRecord#get(Enum) fail in CSVRecord#get(String). src.test.java.org.apache.commons.csv.CSVRecordTest.testGetNullEnum CSVRecordTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetNullEnum CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testDeserialisation": {
            "message": [
                "[CSV-248] Test the parser and map functionality after deserialization\n\nMethods with unexpected return values (null or exceptions) have been\ndocumented. All other methods will just fail as if the record came from\na parser without a header. src.test.java.org.apache.commons.csv.CSVRecordTest.testDeserialisation CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248": {
            "message": [
                "[CSV-248] Test CSVRecord deserialization from binary format.\n\nThe serialised form was created using version 1.6. src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java",
                "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java",
                "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java",
                "Proper use of JUnit APIs src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java",
                "Use Assertions.assertInstanceOf() src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.getTestInput": {
            "message": [
                "[CSV-248] Test CSVRecord deserialization from binary format.\n\nThe serialised form was created using version 1.6. src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.getTestInput JiraCsv248Test.java",
                "Move resources to component specific folder. src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.getTestInput JiraCsv248Test.java",
                "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.getTestInput JiraCsv248Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName": {
            "message": [
                "Document that the list of header names will not contain null names.\n\nAdded a test to demonstrate missing null headers from the list. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java",
                "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java",
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java",
                "Add @SuppressWarnings(\"resource\") in test as narrowly as possible src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetWithEnum": {
            "message": [
                "Add testcases for CSVRecord with get(Enum) and toString. (#54) src.test.java.org.apache.commons.csv.CSVRecordTest.testGetWithEnum CSVRecordTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetWithEnum CSVRecordTest.java",
                "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.testGetWithEnum CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testToString": {
            "message": [
                "Add testcases for CSVRecord with get(Enum) and toString. (#54) src.test.java.org.apache.commons.csv.CSVRecordTest.testToString CSVRecordTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVRecordTest.testToString CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.EnumHeader": {
            "message": [
                "Add testcases for CSVRecord with get(Enum) and toString. (#54) src.test.java.org.apache.commons.csv.CSVRecordTest.EnumHeader CSVRecordTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVRecordTest.EnumHeader CSVRecordTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVRecordTest.EnumHeader CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.toString": {
            "message": [
                "Add testcases for CSVRecord with get(Enum) and toString. (#54) src.test.java.org.apache.commons.csv.CSVRecordTest.toString CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259": {
            "message": [
                "fix isssue csv-259 (#61)\n\n* fix isssue csv-259\r\n\r\n* add testcase for CSV259\r\n\r\n* exclude csv259 test file\r\n\r\n* organize the imports src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259 CSVPrinterTest.java",
                "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259 CSVPrinterTest.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259 CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithoutCRLF": {
            "message": [
                "improve CSVFormat test coverage (#63)\n\n* improve CSVFormat test coverage\r\n\r\n* remove print in test src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithoutCRLF CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithoutCRLF CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithoutCRLF CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithoutCRLF CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString": {
            "message": [
                "improve CSVFormat test coverage (#63)\n\n* improve CSVFormat test coverage\r\n\r\n* remove print in test src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java",
                "Clean up exception. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithCRLF": {
            "message": [
                "improve CSVFormat test coverage (#63)\n\n* improve CSVFormat test coverage\r\n\r\n* remove print in test src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithCRLF CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithCRLF CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithCRLF CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithCRLF CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof": {
            "message": [
                "[CSV-149] Add disabled test. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java",
                "Fix bug in test. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java",
                "Add assert as sanity check src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithoutEOL": {
            "message": [
                "[CSV-149] Add disabled test. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithoutEOL JiraCsv149Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEOL": {
            "message": [
                "[CSV-149] Add disabled test. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEOL JiraCsv149Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testTrim": {
            "message": [
                "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testTrim CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testTrim CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testTrim CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testTrim CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsRecordSeparatorThrowsException": {
            "message": [
                "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsRecordSeparatorThrowsException CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsRecordSeparatorThrowsException CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsRecordSeparatorThrowsException CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes": {
            "message": [
                "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes CSVFormatTest.java",
                "[CSV-263] Print from Reader with embedded quotes generates incorrect\noutput.\n\n- Resolve conflicts from PR #78 by Jason A. Guild.\n- Don't use depreacted methods.\n- Javadoc.\n- Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuoteModeIsNONE": {
            "message": [
                "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuoteModeIsNONE CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuoteModeIsNONE CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuoteModeIsNONE CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuoteModeIsNONE CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull": {
            "message": [
                "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithoutQuotes": {
            "message": [
                "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithoutQuotes CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithoutQuotes CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithoutQuotes CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithoutQuotes CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull": {
            "message": [
                "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull CSVFormatTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull CSVFormatTest.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testNotFlushable": {
            "message": [
                "Improve record and printer Coverage (#66)\n\n* Improve CSVRecord and CSVPrinter coverage\r\n\r\n* remove useless test code and test throws\r\n\r\n* add space src.test.java.org.apache.commons.csv.CSVPrinterTest.testNotFlushable CSVPrinterTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testNotFlushable CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testNotFlushable CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment": {
            "message": [
                "Improve record and printer Coverage (#66)\n\n* Improve CSVRecord and CSVPrinter coverage\r\n\r\n* remove useless test code and test throws\r\n\r\n* add space src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testCSVRecordNULLValues": {
            "message": [
                "Improve record and printer Coverage (#66)\n\n* Improve CSVRecord and CSVPrinter coverage\r\n\r\n* remove useless test code and test throws\r\n\r\n* add space src.test.java.org.apache.commons.csv.CSVRecordTest.testCSVRecordNULLValues CSVRecordTest.java",
                "Sort methods. src.test.java.org.apache.commons.csv.CSVRecordTest.testCSVRecordNULLValues CSVRecordTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVRecordTest.testCSVRecordNULLValues CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeFF": {
            "message": [
                "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeFF LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeFF LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testIsMetaCharCommentStart": {
            "message": [
                "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.LexerTest.testIsMetaCharCommentStart LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testIsMetaCharCommentStart LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testTrimTrailingSpacesZeroLength": {
            "message": [
                "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.LexerTest.testTrimTrailingSpacesZeroLength LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testTrimTrailingSpacesZeroLength LexerTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.LexerTest.testTrimTrailingSpacesZeroLength LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeTab": {
            "message": [
                "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeTab LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeBackspace": {
            "message": [
                "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeBackspace LexerTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeBackspace LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.TokenMatchersTest.testToString": {
            "message": [
                "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.TokenMatchersTest.testToString TokenMatchersTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format": {
            "message": [
                "[CSV-211] CSVFormat.format trims last delimiter if the delimiter is a white space (#71)\n\n* [CSV-211] fix CSVFormat.format trims last delimiter if the delimiter is a white space\r\n\r\n* [CSV-211] Add JiraCsv211Test src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java",
                "[CSV-211] CSVFormat.format trims last delimiter if the delimiter is a\nwhite space #71. src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java",
                "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java",
                "Use forEach() src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java",
                "Fix compiler warning src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestInput": {
            "message": [
                "Move resources to component specific folder. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestInput JiraCsv167Test.java",
                "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestInput JiraCsv167Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestInput JiraCsv167Test.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withEscape": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withRecordSeparator": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getTrailingDelimiter": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getTrailingDelimiter CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.print": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withHeader": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getQuoteCharacter": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getQuoteCharacter CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withAutoFlush": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withTrim": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withQuote": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.toStringArray": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withDelimiter": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withNullString": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withHeaderComments": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.equals": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.valueOf": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.valueOf CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.println": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.printWithQuotes": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withQuoteMode": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getQuoteMode": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getQuoteMode CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.CSVFormat": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.toString": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getCommentMarker": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getCommentMarker CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.trim": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getHeader": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withTrailingDelimiter": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.isNullStringSet": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isNullStringSet CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getAutoFlush": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getAutoFlush CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.printer": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printer CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getTrim": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getTrim CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getHeaderComments": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getHeaderComments CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.parse": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getEscapeCharacter": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getEscapeCharacter CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.validate": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.printWithEscapes": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.isLineBreak": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getFormat": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getFormat CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withCommentMarker": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.hashCode": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.format": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.newFormat": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getDelimiter": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getDelimiter CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getNullString": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getNullString CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.Predefined": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.getRecordSeparator": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getRecordSeparator CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.isCommentMarkerSet": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isCommentMarkerSet CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVFormat.printRecord": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.getRecords": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.createEmptyHeaderMap": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.createEmptyHeaderMap CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.nextRecord": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.CSVRecordIterator": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.Headers": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.Headers CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.getHeaderMap": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.iterator": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.addRecordValue": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.close": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.close CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.isClosed": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.isClosed CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.CSVParser": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.getHeaderNames": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getHeaderNames CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.getHeaderMapRaw": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getHeaderMapRaw CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.getFirstEndOfLine": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getFirstEndOfLine CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.parse": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.getRecordNumber": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getRecordNumber CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.getCurrentLineNumber": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getCurrentLineNumber CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVParser.createHeaders": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVPrinter.close": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVPrinter.printComment": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java",
                "CSV-267 - Minor improvement (#126) src.test.resources.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVPrinter.printRecords": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVPrinter.println": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVPrinter.flush": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVPrinter.CSVPrinter": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVPrinter.print": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVPrinter.getOut": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.getOut CSVPrinter.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVPrinter.printRecord": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.getCharacterPosition": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.getCharacterPosition CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.isSet": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.getParser": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.getParser CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.getComment": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.getComment CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.get": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.get CSVRecord.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.toList": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.toList CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.getHeaderMapRaw": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.getHeaderMapRaw CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.CSVRecord": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.hasComment": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.hasComment CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.size": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.size CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.isMapped": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.getRecordNumber": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.getRecordNumber CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.putIn": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.values": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.values CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.iterator": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.iterator CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.isConsistent": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.isConsistent CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.toMap": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.toMap CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.CSVRecord.toString": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.lookAhead": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.isClosed": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.isClosed ExtendedBufferedReader.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getLastChar": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getLastChar ExtendedBufferedReader.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.readLine": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.read": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.close": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber ExtendedBufferedReader.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getPosition": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getPosition ExtendedBufferedReader.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.IOUtils.copyLarge": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.IOUtils.copy": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.IOUtils.copy IOUtils.java",
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.IOUtils.copy IOUtils.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.parseEncapsulatedToken": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.isCommentStart": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.isStartOfLine": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.nextToken": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.nextToken Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.getCurrentLineNumber": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.getCurrentLineNumber Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.getCharacterPosition": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.getCharacterPosition Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.close": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.close Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.isWhitespace": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.readEscape": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.readEscape Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.isEscape": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isEscape Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.parseSimpleToken": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.mapNullToDisabled": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.isEndOfFile": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.isQuoteChar": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isQuoteChar Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.isClosed": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isClosed Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.Lexer": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.Lexer Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.isDelimiter": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.isMetaChar": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.trimTrailingSpaces": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.trimTrailingSpaces Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.readEndOfLine": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Lexer.getFirstEol": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.getFirstEol Lexer.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Token.reset": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Token.reset Token.java"
            ]
        },
        "src.test.resources.org.apache.commons.csv.Token.toString": {
            "message": [
                "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Token.toString Token.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord": {
            "message": [
                "Add org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord(). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java",
                "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java",
                "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv249Test.testJiraCsv249": {
            "message": [
                "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.issues.JiraCsv249Test.testJiraCsv249 JiraCsv249Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv249Test.testJiraCsv249 JiraCsv249Test.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv249Test.testJiraCsv249 JiraCsv249Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv249Test.testJiraCsv249 JiraCsv249Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders": {
            "message": [
                "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java",
                "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java",
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetHeader": {
            "message": [
                "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetHeader CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetHeader CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetHeader CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetHeader CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.getH2Connection": {
            "message": [
                "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.test.java.org.apache.commons.csv.CSVPrinterTest.getH2Connection CSVPrinterTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.getH2Connection CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.getH2Connection CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testToList": {
            "message": [
                "[CSV-275] Make CSVRecord.toList() public. src.test.java.org.apache.commons.csv.CSVRecordTest.testToList CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.toStream": {
            "message": [
                "Add CSVRecord#toStream(). src.main.java.org.apache.commons.csv.CSVRecord.toStream CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testToStream": {
            "message": [
                "Add CSVRecord#toStream(). src.test.java.org.apache.commons.csv.CSVRecordTest.testToStream CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVRecord.stream": {
            "message": [
                "Use Stream.of() and rename new method to be like Collection#stream()\ninstead of toStream(). src.main.java.org.apache.commons.csv.CSVRecord.stream CSVRecord.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testStream": {
            "message": [
                "Use Stream.of() and rename new method to be like Collection#stream()\ninstead of toStream(). src.test.java.org.apache.commons.csv.CSVRecordTest.testStream CSVRecordTest.java",
                "Sort members. src.test.java.org.apache.commons.csv.CSVRecordTest.testStream CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.stream": {
            "message": [
                "# WARNING: head commit changed in the meantime\n\nAdd CSVParser#stream().\n\n- Use JApiCmp instead of Clirr in the default goal.\n- Allow for longer lines.\n- Fix PMD custom rules for current version of PMD.\n- Bump checkstyle from 8.29 to 8.44.\n- Bump commons.javadoc.version from 3.2.0 to 3.3.0. src.main.java.org.apache.commons.csv.CSVParser.stream CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testStream": {
            "message": [
                "# WARNING: head commit changed in the meantime\n\nAdd CSVParser#stream().\n\n- Use JApiCmp instead of Clirr in the default goal.\n- Allow for longer lines.\n- Fix PMD custom rules for current version of PMD.\n- Bump checkstyle from 8.29 to 8.44.\n- Bump commons.javadoc.version from 3.2.0 to 3.3.0. src.test.java.org.apache.commons.csv.CSVParserTest.testStream CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testStream CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testStream CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testStream CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testStream CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty": {
            "message": [
                "[CSV-148] Add testcases about withIgnoreSurroundingSpaces() and withTrim() (#70) src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty JiraCsv148Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty JiraCsv148Test.java",
                "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty JiraCsv148Test.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty JiraCsv148Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty JiraCsv148Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty": {
            "message": [
                "[CSV-148] Add testcases about withIgnoreSurroundingSpaces() and withTrim() (#70) src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty JiraCsv148Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty JiraCsv148Test.java",
                "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty JiraCsv148Test.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty JiraCsv148Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty JiraCsv148Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.Builder": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Sort members src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Check setDelimiter() for empty string\n\nSigned-off-by: Mykola Faryma <m.faryma@partner.samsung.com> src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Use Java 8 API src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Inline single use variable src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Inline single use variable src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.builder": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.builder CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.builder CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.builder CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException1": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException1 CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException1 CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException1 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236_0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236_0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106_0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106_0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException1": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException1 CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException1 CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException1 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType0": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType0 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withList": {
            "message": [
                "Fixed CSV-271 & Add testcase for new change (#157) src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withList JiraCsv271Test.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withList JiraCsv271Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withArray": {
            "message": [
                "Fixed CSV-271 & Add testcase for new change (#157) src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withArray JiraCsv271Test.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withArray JiraCsv271Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106__Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106__Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106__Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236__Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236__Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236__Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236__Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse_Deprecated": {
            "message": [
                "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse_Deprecated CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse_Deprecated CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse_Deprecated CSVFormatTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterString": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterString CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterString CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterString CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter CSVFormat.java",
                "Better internal name\n\nJavadoc src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter CSVFormat.java",
                "Better internal name\n\nJavadoc src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.containsLineBreak": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.containsLineBreak CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.containsLineBreak CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.containsLineBreak CSVFormat.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.containsLineBreak CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.contains": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.contains CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.contains CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.contains CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.isEscapeDelimiter": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.isEscapeDelimiter Lexer.java",
                "CSV-278: Reuse Buffers in Lexer for Delimiter Detection (#162)\n\n* CSV-278: Reuse Buffers in Lexer for Delimiter Detection\r\n\r\n* Remove erroneous tab character\r\n\r\n* Reduce change set with fewer formatting changes\r\n\r\n* Reduce change set with fewer formatting changes src.main.java.org.apache.commons.csv.Lexer.isEscapeDelimiter Lexer.java",
                "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.isEscapeDelimiter Lexer.java",
                "Rename internal methods src.main.java.org.apache.commons.csv.Lexer.isEscapeDelimiter Lexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote CSVParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote CSVParserTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteWithEscape": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteWithEscape CSVParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteWithEscape CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteWithEscape CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteWithEscape CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteThrowsException": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteThrowsException CSVParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteThrowsException CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteThrowsException CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteThrowsException CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape CSVParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape CSVParserTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV CSVParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV CSVParserTest.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithQuote": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithQuote CSVParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithQuote CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithQuote CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithQuote CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithEscape": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithEscape CSVParserTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithEscape CSVParserTest.java",
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithEscape CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithEscape CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoted": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoted CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoted CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoted CSVPrinterTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoted CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterStringEscaped": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterStringEscaped CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterStringEscaped CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterStringEscaped CSVPrinterTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterStringEscaped CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoteNone": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoteNone CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoteNone CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoteNone CSVPrinterTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoteNone CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter": {
            "message": [
                "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java",
                "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java",
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord": {
            "message": [
                "Add tests that print CSVRecords. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser": {
            "message": [
                "Add tests that print CSVRecords. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords": {
            "message": [
                "Add tests that print CSVRecords. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java",
                "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java",
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadingInDifferentBuffer": {
            "message": [
                "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader (#5)\n\n* Fix eol checking for read array in ExtendedBufferedReader\r\n\r\n* Add test for eol checking when reading to different buffers\r\n\r\nCo-authored-by: mirasrael <d_signer@mail.ru>\r\nCo-authored-by: Alexander Bondarev <alexander.bondarev@thomsonreuters.com> src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadingInDifferentBuffer ExtendedBufferedReaderTest.java",
                "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader.\n\nClean up new test methods. Sort methods. src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadingInDifferentBuffer ExtendedBufferedReaderTest.java",
                "Use final. src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadingInDifferentBuffer ExtendedBufferedReaderTest.java",
                "Improve parser performance by up to 20%, YMMV src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadingInDifferentBuffer ExtendedBufferedReaderTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.append": {
            "message": [
                "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java",
                "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv263Test.testPrintFromReaderWithQuotes": {
            "message": [
                "[CSV-263] Print from Reader with embedded quotes generates incorrect\noutput.\n\n- Resolve conflicts from PR #78 by Jason A. Guild.\n- Don't use depreacted methods.\n- Javadoc.\n- Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv263Test.testPrintFromReaderWithQuotes JiraCsv263Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv263Test.testPrintFromReaderWithQuotes JiraCsv263Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.isStrictQuoteMode": {
            "message": [
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.main.java.org.apache.commons.csv.CSVParser.isStrictQuoteMode CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.isStrictQuoteMode CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.handleNull": {
            "message": [
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.main.java.org.apache.commons.csv.CSVParser.handleNull CSVParser.java",
                "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.handleNull CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv253Test.testHandleAbsentValues": {
            "message": [
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv253Test.testHandleAbsentValues JiraCsv253Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv253Test.testHandleAbsentValues JiraCsv253Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv253Test.assertArrayEqual": {
            "message": [
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv253Test.assertArrayEqual JiraCsv253Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithNotSetNullString": {
            "message": [
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithNotSetNullString JiraCsv93Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithNotSetNullString JiraCsv93Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.every": {
            "message": [
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.every JiraCsv93Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringNULL": {
            "message": [
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringNULL JiraCsv93Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringNULL JiraCsv93Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringEmptyString": {
            "message": [
                "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringEmptyString JiraCsv93Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringEmptyString JiraCsv93Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyString": {
            "message": [
                "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyString CSVParserTest.java",
                "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyString CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withCommentMarker": {
            "message": [
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withCommentMarker JiraCsv154Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withCommentMarker JiraCsv154Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withHeaderComments": {
            "message": [
                "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withHeaderComments JiraCsv154Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withHeaderComments JiraCsv154Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestReader": {
            "message": [
                "Better resource management. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestReader JiraCsv167Test.java",
                "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestReader JiraCsv167Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVBenchmark.scan": {
            "message": [
                "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.scan CSVBenchmark.java",
                "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.scan CSVBenchmark.java",
                "Sort test members src.test.java.org.apache.commons.csv.CSVBenchmark.scan CSVBenchmark.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithComments": {
            "message": [
                "[CSV-265] Update buffer position when reading line comment (#120)\n\n* [CSV-265] Add JiraCsv265Test\r\n\r\n* [CSV-265] Update buffer position when reading line comment\r\n\r\n* Update JiraCsv265Test.java\r\n\r\nFile should end in a new line.\r\n\r\nCo-authored-by: Tyler King <tylerking001@hotmail.com>\r\nCo-authored-by: Gary Gregory <garydgregory@users.noreply.github.com> src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithComments JiraCsv265Test.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithComments JiraCsv265Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithComments JiraCsv265Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithCommentsSpanningMultipleLines": {
            "message": [
                "[CSV-265] Update buffer position when reading line comment (#120)\n\n* [CSV-265] Add JiraCsv265Test\r\n\r\n* [CSV-265] Update buffer position when reading line comment\r\n\r\n* Update JiraCsv265Test.java\r\n\r\nFile should end in a new line.\r\n\r\nCo-authored-by: Tyler King <tylerking001@hotmail.com>\r\nCo-authored-by: Gary Gregory <garydgregory@users.noreply.github.com> src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithCommentsSpanningMultipleLines JiraCsv265Test.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithCommentsSpanningMultipleLines JiraCsv265Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithCommentsSpanningMultipleLines JiraCsv265Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.setUp": {
            "message": [
                "Sort members. src.test.java.org.apache.commons.csv.LexerTest.setUp LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4 JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4 JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4 JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4 JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4 JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1 JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1 JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1 JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1 JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1 JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java",
                "Use forEach() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2 JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2 JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2 JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2 JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2 JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3 JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3 JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3 JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3 JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3 JiraCsv288Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue": {
            "message": [
                "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue JiraCsv288Test.java",
                "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue JiraCsv288Test.java",
                "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue JiraCsv288Test.java",
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue JiraCsv288Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue JiraCsv288Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode": {
            "message": [
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode CSVFormat.java",
                "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode CSVFormat.java",
                "Sort members src.main.java.org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyDuplicates": {
            "message": [
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyDuplicates CSVFormatTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyDuplicates CSVFormatTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyDuplicates CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyDuplicates CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264": {
            "message": [
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264 JiraCsv264Test.java",
                "Remove unused exceptions src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264 JiraCsv264Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264 JiraCsv264Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapDisallow": {
            "message": [
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapDisallow JiraCsv264Test.java",
                "Remove unused exceptions src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapDisallow JiraCsv264Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapDisallow JiraCsv264Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapAllowEmpty": {
            "message": [
                "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapAllowEmpty JiraCsv264Test.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapAllowEmpty JiraCsv264Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapAllowEmpty JiraCsv264Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.printRecordObject": {
            "message": [
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecordObject CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.rethrow": {
            "message": [
                "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.rethrow CSVPrinter.java",
                "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVPrinter.rethrow CSVPrinter.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordStream": {
            "message": [
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordStream CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordStream CSVPrinterTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordStream CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordStream CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllStreamOfArrays": {
            "message": [
                "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllStreamOfArrays CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllStreamOfArrays CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testToListForEach": {
            "message": [
                "CSVRecord.toList() does not give write access to the new List src.test.java.org.apache.commons.csv.CSVRecordTest.testToListForEach CSVRecordTest.java",
                "Use API instead of system property\n\nUse final src.test.java.org.apache.commons.csv.CSVRecordTest.testToListForEach CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testToListFor": {
            "message": [
                "CSVRecord.toList() does not give write access to the new List src.test.java.org.apache.commons.csv.CSVRecordTest.testToListFor CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testToListSet": {
            "message": [
                "CSVRecord.toList() does not give write access to the new List src.test.java.org.apache.commons.csv.CSVRecordTest.testToListSet CSVRecordTest.java",
                "Use API instead of system property\n\nUse final src.test.java.org.apache.commons.csv.CSVRecordTest.testToListSet CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testToListAdd": {
            "message": [
                "CSVRecord.toList() does not give write access to the new List src.test.java.org.apache.commons.csv.CSVRecordTest.testToListAdd CSVRecordTest.java",
                "Use API instead of system property\n\nUse final src.test.java.org.apache.commons.csv.CSVRecordTest.testToListAdd CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getHeaderComment": {
            "message": [
                "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.getHeaderComment CSVParser.java",
                "Sort members src.main.java.org.apache.commons.csv.CSVParser.getHeaderComment CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getTrailerComment": {
            "message": [
                "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.getTrailerComment CSVParser.java",
                "Sort members src.main.java.org.apache.commons.csv.CSVParser.getTrailerComment CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.hasTrailerComment": {
            "message": [
                "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.hasTrailerComment CSVParser.java",
                "Sort members src.main.java.org.apache.commons.csv.CSVParser.hasTrailerComment CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.hasHeaderComment": {
            "message": [
                "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.hasHeaderComment CSVParser.java",
                "Sort members src.main.java.org.apache.commons.csv.CSVParser.hasHeaderComment CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.getHeaderComment": {
            "message": [
                "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.test.java.org.apache.commons.csv.CSVParserTest.getHeaderComment CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.getTrailerComment": {
            "message": [
                "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.test.java.org.apache.commons.csv.CSVParserTest.getTrailerComment CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment3": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment3 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment3 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment3": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment3 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment3 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment1": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment1 CSVParserTest.java",
                "Fix formatting src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment1 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment1 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment2": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment2 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment2 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment3": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment3 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment3 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment2": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment2 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment2 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment1": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment1 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment1 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment3": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment3 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment3 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderTrailerComment": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderTrailerComment CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderTrailerComment CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderTrailerComment CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment2": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment2 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment2 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_MultilineComment": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_MultilineComment CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_MultilineComment CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_MultilineComment CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment2": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment2 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment2 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment1": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment1 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment1 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment1": {
            "message": [
                "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment1 CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment1 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordsFromBrokenInputStream": {
            "message": [
                "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordsFromBrokenInputStream CSVParserTest.java",
                "CSVParser.getRecords() now throws UncheckedIOException instead of\nIOException src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordsFromBrokenInputStream CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Constants.Constants": {
            "message": [
                "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.Constants.Constants Constants.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.IOUtils.IOUtils": {
            "message": [
                "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.IOUtils.IOUtils IOUtils.java",
                "Sort members src.main.java.org.apache.commons.csv.IOUtils.IOUtils IOUtils.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.IOUtils.rethrow": {
            "message": [
                "Move package-private method. src.main.java.org.apache.commons.csv.IOUtils.rethrow IOUtils.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testPostgresqlText": {
            "message": [
                "CSV-290 - Fix the wrong assumptions in PostgreSQL formats\n\nCSVFormat.POSTGRESQL_CSV - special characters are not escaped.\nCSVFormat.POSTGRESQL_TEXT - values are not quoted. src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testPostgresqlText JiraCsv290Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testPostgresqlCsv": {
            "message": [
                "CSV-290 - Fix the wrong assumptions in PostgreSQL formats\n\nCSVFormat.POSTGRESQL_CSV - special characters are not escaped.\nCSVFormat.POSTGRESQL_TEXT - values are not quoted. src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testPostgresqlCsv JiraCsv290Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead": {
            "message": [
                "CSV-290 - Fix the wrong assumptions in PostgreSQL formats\n\nCSVFormat.POSTGRESQL_CSV - special characters are not escaped.\nCSVFormat.POSTGRESQL_TEXT - values are not quoted. src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java",
                "Use final\n\nRemove unused imports src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java",
                "Use try-with-resources src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper": {
            "message": [
                "CSV-290 - Fix the wrong assumptions in PostgreSQL formats\n\nCSVFormat.POSTGRESQL_CSV - special characters are not escaped.\nCSVFormat.POSTGRESQL_TEXT - values are not quoted. src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java",
                "Add test for tab characters (ASCII 9) in values src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java",
                "Use final\n\nRemove unused imports src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java",
                "Use final\n\nRemove unused imports src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java",
                "Simplify test src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java",
                "Camel-case parameter names src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java",
                "Camel-case parameter names src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java",
                "Use better JUnit API src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterEmptyStringThrowsException1": {
            "message": [
                "Check setDelimiter() for empty string\n\nSigned-off-by: Mykola Faryma <m.faryma@partner.samsung.com> src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterEmptyStringThrowsException1 CSVFormatTest.java",
                "Add missing code coverage src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterEmptyStringThrowsException1 CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterEmptyStringThrowsException1 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.print": {
            "message": [
                "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.print JiraCsv288Test.java",
                "Use final and lambda shorthand src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.print JiraCsv288Test.java",
                "Use final and lambda shorthand src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.print JiraCsv288Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar": {
            "message": [
                "Refactor duplicate code\n\nNormalize Javadoc first word src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java",
                "Refactor duplicate code\n\nNormalize Javadoc first word src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java",
                "Bump CSVFormat#serialVersionUID from 1 to 2\n\nJavadoc Serialization in CSVFormat is not supported from one version to\nthe next. src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java",
                "Bump CSVFormat#serialVersionUID from 1 to 2\n\nJavadoc Serialization in CSVFormat is not supported from one version to\nthe next. src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java",
                "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintRecordEmpty": {
            "message": [
                "Add missing code coverage src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintRecordEmpty CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintRecord": {
            "message": [
                "Add missing code coverage src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintRecord CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testGetAllowDuplicateHeaderNames": {
            "message": [
                "Fill in the test coverage for getAllowDuplicateHeaderNames() to reflect\nthe _current_ behavior, right or wrong. src.test.java.org.apache.commons.csv.CSVFormatTest.testGetAllowDuplicateHeaderNames CSVFormatTest.java",
                "Sort member src.test.java.org.apache.commons.csv.CSVFormatTest.testGetAllowDuplicateHeaderNames CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testGetAllowDuplicateHeaderNames CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testGetDuplicateHeaderMode": {
            "message": [
                "Add testGetDuplicateHeaderMode() src.test.java.org.apache.commons.csv.CSVFormatTest.testGetDuplicateHeaderMode CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testGetDuplicateHeaderMode CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.IOUtilsTest.testRethrow": {
            "message": [
                "Explicitly test a method JaCoCo says is not tested but should be src.test.java.org.apache.commons.csv.IOUtilsTest.testRethrow IOUtilsTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty2": {
            "message": [
                "Validates that a CSVFormat rejects empty header names src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty2 CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty2 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty1": {
            "message": [
                "Validates that a CSVFormat rejects empty header names src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty1 CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty1 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty3": {
            "message": [
                "Validates that a CSVFormat rejects empty header names src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty3 CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty3 CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser": {
            "message": [
                "Add test for duplicate header names\n\nTest the CSVFormat and CSVParser handle the headers consistently.\n\nCSVParser handles all 36 cases.\n\nCSFFormat fails 6 cases. These are currently disabled. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java",
                "Test javadoc updates and typos src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java",
                "Test javadoc updates and typos src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java",
                "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java",
                "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java",
                "CSVFormat: Sanitise empty headers to the empty string \"\"\n\nAdd more tests for duplicate headers including null header names. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java",
                "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java",
                "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData": {
            "message": [
                "Add test for duplicate header names\n\nTest the CSVFormat and CSVParser handle the headers consistently.\n\nCSVParser handles all 36 cases.\n\nCSFFormat fails 6 cases. These are currently disabled. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData CSVDuplicateHeaderTest.java",
                "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData CSVDuplicateHeaderTest.java",
                "Test for empty/blank headers the same way for input and output src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData CSVDuplicateHeaderTest.java",
                "CSVFormat: Sanitise empty headers to the empty string \"\"\n\nAdd more tests for duplicate headers including null header names. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData CSVDuplicateHeaderTest.java",
                "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData CSVDuplicateHeaderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat": {
            "message": [
                "Add test for duplicate header names\n\nTest the CSVFormat and CSVParser handle the headers consistently.\n\nCSVParser handles all 36 cases.\n\nCSFFormat fails 6 cases. These are currently disabled. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java",
                "Test javadoc updates and typos src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java",
                "Test javadoc updates and typos src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java",
                "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java",
                "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java",
                "CSVFormat: Sanitise empty headers to the empty string \"\"\n\nAdd more tests for duplicate headers including null header names. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java",
                "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderParseOnlyData": {
            "message": [
                "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderParseOnlyData CSVDuplicateHeaderTest.java",
                "Test for empty/blank headers the same way for input and output src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderParseOnlyData CSVDuplicateHeaderTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.isBlank": {
            "message": [
                "Test for empty/blank headers the same way for input and output src.main.java.org.apache.commons.csv.CSVFormat.isBlank CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isBlank CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderAllowsMissingColumnsNamesData": {
            "message": [
                "CSVFormat: Sanitise empty headers to the empty string \"\"\n\nAdd more tests for duplicate headers including null header names. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderAllowsMissingColumnsNamesData CSVDuplicateHeaderTest.java",
                "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderAllowsMissingColumnsNamesData CSVDuplicateHeaderTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderAllowsMissingColumnsNamesData CSVDuplicateHeaderTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getAllowTrailingText": {
            "message": [
                "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.getAllowTrailingText CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote": {
            "message": [
                "Add support for trailing text after the closing quote, for Excel compatibility. src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote LexerTest.java",
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote LexerTest.java",
                "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote LexerTest.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote LexerTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote LexerTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getAllowEofWithoutClosingQuote": {
            "message": [
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.getAllowEofWithoutClosingQuote CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.LexerTest.testEOFWithoutClosingQuote": {
            "message": [
                "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.test.java.org.apache.commons.csv.LexerTest.testEOFWithoutClosingQuote LexerTest.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.test.java.org.apache.commons.csv.LexerTest.testEOFWithoutClosingQuote LexerTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.LexerTest.testEOFWithoutClosingQuote LexerTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Ok": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Ok CSVParserTest.java",
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Ok CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141_CSVFormat_DEFAULT": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141_CSVFormat_DEFAULT CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.parse": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.parse CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_INFORMIX_UNLOAD_CSV": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_INFORMIX_UNLOAD_CSV CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_POSTGRESQL_CSV": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_POSTGRESQL_CSV CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141RFC4180": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141RFC4180 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_INFORMIX_UNLOAD": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_INFORMIX_UNLOAD CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Excel": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Excel CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_ORACLE": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_ORACLE CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Failure": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Failure CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_DEFAULT": {
            "message": [
                "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_DEFAULT CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.createTempPath": {
            "message": [
                "Port some code from IO to NIO APIs src.test.java.org.apache.commons.csv.CSVPrinterTest.createTempPath CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.createTempFile": {
            "message": [
                "Port some code from IO to NIO APIs src.test.java.org.apache.commons.csv.CSVPrinterTest.createTempFile CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderGet": {
            "message": [
                "feat: document duplicate header behavior src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderGet CSVRecordTest.java",
                "Sort test members src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderGet CSVRecordTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderGet CSVRecordTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderToMap": {
            "message": [
                "feat: document duplicate header behavior src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderToMap CSVRecordTest.java",
                "Sort test members src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderToMap CSVRecordTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderToMap CSVRecordTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.getLastParsedContent": {
            "message": [
                "adding more details into the error message during the CSV parser issues src.main.java.org.apache.commons.csv.CSVParser.getLastParsedContent CSVParser.java",
                "formatting changes src.main.java.org.apache.commons.csv.CSVParser.getLastParsedContent CSVParser.java",
                "removing last parsed content from exception message, instead making respective method public src.main.java.org.apache.commons.csv.CSVParser.getLastParsedContent CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorWithDetailedMessage": {
            "message": [
                "adding more details into the error message during the CSV parser issues src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorWithDetailedMessage CSVParserTest.java",
                "formatting changes src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorWithDetailedMessage CSVParserTest.java",
                "Aligning error messages to be align with master branch src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorWithDetailedMessage CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVTest.testFaultyCSVshouldThrowErrorWithDetailedMessage": {
            "message": [
                "removing duplicated exception class name from error message src.test.java.org.apache.commons.csv.CSVTest.testFaultyCSVshouldThrowErrorWithDetailedMessage CSVTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVTest.readCSVFileSimpleOne": {
            "message": [
                "removing duplicated exception class name from error message src.test.java.org.apache.commons.csv.CSVTest.readCSVFileSimpleOne CSVTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_2": {
            "message": [
                "removing last parsed content from exception message, instead making respective method public src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_2 CSVParserTest.java",
                "adding code review typo fixes src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_2 CSVParserTest.java",
                "fixing code review changes src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_2 CSVParserTest.java",
                "removing unwanted assert src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_2 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_1": {
            "message": [
                "removing last parsed content from exception message, instead making respective method public src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_1 CSVParserTest.java",
                "adding code review typo fixes src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_1 CSVParserTest.java",
                "fixing code review changes src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_1 CSVParserTest.java",
                "removing unwanted assert src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_1 CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowExceptionWithLineAndPosition": {
            "message": [
                "moving exception handling to the Lexer src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowExceptionWithLineAndPosition CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage": {
            "message": [
                "changing the exception message to be more meaningful src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage CSVFormatTest.java",
                "Sort test members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage CSVFormatTest.java",
                "Use final src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage CSVFormatTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage CSVFormatTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage CSVFormatTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testThrowExceptionWithLineAndPosition": {
            "message": [
                "[CSV-147] Better error message during faulty CSV record read #347\n\nClean up new test src.test.java.org.apache.commons.csv.CSVParserTest.testThrowExceptionWithLineAndPosition CSVParserTest.java",
                "Add CSVException that extends IOException thrown on invalid input\ninstead of IOException src.test.java.org.apache.commons.csv.CSVParserTest.testThrowExceptionWithLineAndPosition CSVParserTest.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVParserTest.testThrowExceptionWithLineAndPosition CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.format_": {
            "message": [
                "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVFormat.format_ CSVFormat.java",
                "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.format_ CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithReader": {
            "message": [
                "No _ in test method names needed src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithReader CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithReader CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithReader CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParseWithReader": {
            "message": [
                "No _ in test method names needed src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParseWithReader CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParseWithReader CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParseWithReader CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithInputStream": {
            "message": [
                "No _ in test method names needed src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithInputStream CSVParserTest.java",
                "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithInputStream CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithInputStream CSVParserTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.testParse": {
            "message": [
                "Normalize test method names src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.testParse JiraCsv167Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.testParse JiraCsv167Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstSpaceValue1": {
            "message": [
                "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstSpaceValue1 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstSpaceValue1 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithFirstEmptyValue2": {
            "message": [
                "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithFirstEmptyValue2 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstTabValue1": {
            "message": [
                "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstTabValue1 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstTabValue1 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstEmptyValue2": {
            "message": [
                "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstEmptyValue2 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstEmptyValue2 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfListsWithFirstEmptyValue2": {
            "message": [
                "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfListsWithFirstEmptyValue2 CSVPrinterTest.java",
                "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfListsWithFirstEmptyValue2 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfListsWithFirstEmptyValue2 CSVPrinterTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArraysWithFirstEmptyValue2": {
            "message": [
                "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArraysWithFirstEmptyValue2 CSVPrinterTest.java",
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArraysWithFirstEmptyValue2 CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterCharArray": {
            "message": [
                "Internal refactoring for delimiter src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterCharArray CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getEscapeChar": {
            "message": [
                "Internal refactoring for escape character src.main.java.org.apache.commons.csv.CSVFormat.getEscapeChar CSVFormat.java",
                "Don't allocate an extra String in CSVFormat.printWithEscapes(Reader,\nAppendable)\n\nInternal refactoring src.main.java.org.apache.commons.csv.CSVFormat.getEscapeChar CSVFormat.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.getEscapeChar CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.escape": {
            "message": [
                "Don't allocate an extra String in CSVFormat.printWithEscapes(Reader,\nAppendable)\n\nInternal refactoring src.main.java.org.apache.commons.csv.CSVFormat.escape CSVFormat.java",
                "Use final\n\nRemove whitespace src.main.java.org.apache.commons.csv.CSVFormat.escape CSVFormat.java",
                "Use final\n\nRemove whitespace src.main.java.org.apache.commons.csv.CSVFormat.escape CSVFormat.java",
                "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.escape CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getLenientEof": {
            "message": [
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.getLenientEof CSVFormat.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVFormat.getTrailingData": {
            "message": [
                "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.getTrailingData CSVFormat.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn": {
            "message": [
                "MongoDBCsv empty first column parsing fix src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java",
                "better test - comparing printer input and parser output src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java",
                "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java",
                "Always use blocks\n\nUse final src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java",
                "Convert new test into a proper JUnit test src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java",
                "Convert new test into a proper JUnit test src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java",
                "Better local name src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.appendNextEscapedCharacterToToken": {
            "message": [
                "Extract duplicated code into a method src.main.java.org.apache.commons.csv.Lexer.appendNextEscapedCharacterToToken Lexer.java",
                "[CSV-150] Escaping is not disableable src.main.java.org.apache.commons.csv.Lexer.appendNextEscapedCharacterToToken Lexer.java",
                "Sort members src.main.java.org.apache.commons.csv.Lexer.appendNextEscapedCharacterToToken Lexer.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.perf.PerformanceTest.readLines": {
            "message": [
                "Rename internal method src.test.java.org.apache.commons.csv.perf.PerformanceTest.readLines PerformanceTest.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testInternal": {
            "message": [
                "Add JiraCsv294Test src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testInternal JiraCsv294Test.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testInternal JiraCsv294Test.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testInternal JiraCsv294Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWorks": {
            "message": [
                "Add JiraCsv294Test src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWorks JiraCsv294Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWorks JiraCsv294Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithQuoteEscapeWorks": {
            "message": [
                "Add JiraCsv294Test src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithQuoteEscapeWorks JiraCsv294Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithQuoteEscapeWorks JiraCsv294Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithBackslashEscapeWorks": {
            "message": [
                "Add JiraCsv294Test src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithBackslashEscapeWorks JiraCsv294Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithBackslashEscapeWorks JiraCsv294Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithNullEscapeWorks": {
            "message": [
                "Add JiraCsv294Test src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithNullEscapeWorks JiraCsv294Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithNullEscapeWorks JiraCsv294Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVException.CSVException": {
            "message": [
                "Add CSVException that extends IOException thrown on invalid input\ninstead of IOException src.main.java.org.apache.commons.csv.CSVException.CSVException CSVException.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEncapsulation": {
            "message": [
                "[CSV-150] Add disabled test JiraCsv150Test\n\nSee also https://github.com/apache/commons-csv/pull/68 src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEncapsulation JiraCsv150Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEncapsulation JiraCsv150Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableComment": {
            "message": [
                "[CSV-150] Add disabled test JiraCsv150Test\n\nSee also https://github.com/apache/commons-csv/pull/68 src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableComment JiraCsv150Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableComment JiraCsv150Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisable": {
            "message": [
                "[CSV-150] Add disabled test JiraCsv150Test\n\nSee also https://github.com/apache/commons-csv/pull/68 src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisable JiraCsv150Test.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisable JiraCsv150Test.java",
                "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisable JiraCsv150Test.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEscaping": {
            "message": [
                "[CSV-150] Add disabled test JiraCsv150Test\n\nSee also https://github.com/apache/commons-csv/pull/68 src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEscaping JiraCsv150Test.java",
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEscaping JiraCsv150Test.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.Lexer.nullToDisabled": {
            "message": [
                "[CSV-150] Escaping is not disableable src.main.java.org.apache.commons.csv.Lexer.nullToDisabled Lexer.java",
                "Sort members src.main.java.org.apache.commons.csv.Lexer.nullToDisabled Lexer.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.peek": {
            "message": [
                "Rename internal methods src.main.java.org.apache.commons.csv.ExtendedBufferedReader.peek ExtendedBufferedReader.java",
                "Rename internal methods src.main.java.org.apache.commons.csv.ExtendedBufferedReader.peek ExtendedBufferedReader.java",
                "Better internal API src.main.java.org.apache.commons.csv.ExtendedBufferedReader.peek ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.mark": {
            "message": [
                "Improve parser performance by up to 20%, YMMV src.main.java.org.apache.commons.csv.ExtendedBufferedReader.mark ExtendedBufferedReader.java",
                "Remove trailing whitespace\n\nUse final src.main.java.org.apache.commons.csv.ExtendedBufferedReader.mark ExtendedBufferedReader.java",
                "Remove trailing whitespace\n\nUse final src.main.java.org.apache.commons.csv.ExtendedBufferedReader.mark ExtendedBufferedReader.java",
                "Sort members src.main.java.org.apache.commons.csv.ExtendedBufferedReader.mark ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.reset": {
            "message": [
                "Improve parser performance by up to 20%, YMMV src.main.java.org.apache.commons.csv.ExtendedBufferedReader.reset ExtendedBufferedReader.java",
                "Sort members src.main.java.org.apache.commons.csv.ExtendedBufferedReader.reset ExtendedBufferedReader.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.getRecordCount": {
            "message": [
                "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.getRecordCount CSVPrinter.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVPrinter.endOfRecord": {
            "message": [
                "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.endOfRecord CSVPrinter.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVPrinterTest.assertInitialState": {
            "message": [
                "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.assertInitialState CSVPrinterTest.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.Builder": {
            "message": [
                "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.Builder CSVParser.java",
                "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.Builder CSVParser.java",
                "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.Builder CSVParser.java",
                "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.Builder CSVParser.java",
                "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.Builder CSVParser.java"
            ]
        },
        "src.main.java.org.apache.commons.csv.CSVParser.builder": {
            "message": [
                "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.builder CSVParser.java"
            ]
        },
        "src.test.java.org.apache.commons.csv.CSVFormatTest.testBuildVsGet": {
            "message": [
                "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testBuildVsGet CSVFormatTest.java"
            ]
        }
    }
}