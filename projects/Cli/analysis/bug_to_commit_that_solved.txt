{
    "bugs to commit": [
        {
            "bug index": "4",
            "bug id": "CLI-33",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "591af95e0a51d067f69f0ddf1a0ac54ef5c04842",
            "description": "Submitted by Parag Thakur (parag at veritas.com):\n\nHere are the arguments i expect:\n\ncmd -exec -exec_opt1 -exec_opt2\ncmd -rep -rep_opt1 -rep_opt2\n\nThus, depending on the first argument (-exec or -rep), i would like to parse\nthe remaining arguments. So, here is the code snippet that i have:\n\n    // create the main options object which will handle the first parameter\n    Options mainOptions = new Options();\n    // There can be 2 main exclusive options:  -exec|-rep\n\n    // Therefore, place them in an option group\n\n    OptionGroup grp = new OptionGroup();\n\n    grp.addOption(new Option(\"exec\",false,\"description for this option\"));\n\n    grp.addOption(new Option(\"rep\",false,\"description for this option\"));\n\n    mainOptions.addOptionGroup(grp);\n\n    // for the exec option, there are 2 options...\n    execOptions = new Options();\n    execOptions.addOption(\"exec_opt1\",false,\" desc\");\n    execOptions.addOption(\"exec_opt2\",false,\" desc\");\n\n    // similarly, for rep there are 2 options...\n    repOptions = new Options();\n    repOptions.addOption(\"rep_opt1\",\"false\",\"desc\");\n    repOptions.addOption(\"rep_opt2\",\"false\",\"desc\");\n\n    // create the parser\n    CommandLineParser parser =\nCommandLineParserFactory.newParser(\"org.apache.commons.cli.GnuParser\");\n\n    // finally, parse the arguments:\n\n    // first parse the main options to see what the user has specified\n    // We set stopAtNonOption to true so it does not touch the remaining\n    // options\n    CommandLine cmd = parser.parse(mainOptions,argv,true);\n    // get the remaining options...\n    argv = cmd.getArgs();\n\n    if(cmd.hasOption(\"exec\")){\n        cmd = parser.parse(execOptions,argv,false);\n        // process the exec_op1 and exec_opt2...\n    }\n    else if(cmd.hasOption(\"rep\")){\n        cmd = parser.parse(repOptions,argv,false);\n        // process the rep_op1 and rep_opt2...\n    }\n    else {\n        printUsage();\n    }",
            "commit number version hash": 190,
            "commit number": 543,
            "function that changed": [
                {
                    "function name": "Builder",
                    "function params": [
                        "option"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "testBuilderMethods",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionTest.testBuilderMethods"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/Option.java",
                "src/test/java/org/apache/commons/cli/OptionTest.java"
            ]
        },
        {
            "bug index": "5",
            "bug id": "CLI-33",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "c886434a34107af01ae3cf70645e8e7d8aaa9ede",
            "description": "Submitted by Parag Thakur (parag at veritas.com):\n\nHere are the arguments i expect:\n\ncmd -exec -exec_opt1 -exec_opt2\ncmd -rep -rep_opt1 -rep_opt2\n\nThus, depending on the first argument (-exec or -rep), i would like to parse\nthe remaining arguments. So, here is the code snippet that i have:\n\n    // create the main options object which will handle the first parameter\n    Options mainOptions = new Options();\n    // There can be 2 main exclusive options:  -exec|-rep\n\n    // Therefore, place them in an option group\n\n    OptionGroup grp = new OptionGroup();\n\n    grp.addOption(new Option(\"exec\",false,\"description for this option\"));\n\n    grp.addOption(new Option(\"rep\",false,\"description for this option\"));\n\n    mainOptions.addOptionGroup(grp);\n\n    // for the exec option, there are 2 options...\n    execOptions = new Options();\n    execOptions.addOption(\"exec_opt1\",false,\" desc\");\n    execOptions.addOption(\"exec_opt2\",false,\" desc\");\n\n    // similarly, for rep there are 2 options...\n    repOptions = new Options();\n    repOptions.addOption(\"rep_opt1\",\"false\",\"desc\");\n    repOptions.addOption(\"rep_opt2\",\"false\",\"desc\");\n\n    // create the parser\n    CommandLineParser parser =\nCommandLineParserFactory.newParser(\"org.apache.commons.cli.GnuParser\");\n\n    // finally, parse the arguments:\n\n    // first parse the main options to see what the user has specified\n    // We set stopAtNonOption to true so it does not touch the remaining\n    // options\n    CommandLine cmd = parser.parse(mainOptions,argv,true);\n    // get the remaining options...\n    argv = cmd.getArgs();\n\n    if(cmd.hasOption(\"exec\")){\n        cmd = parser.parse(execOptions,argv,false);\n        // process the exec_op1 and exec_opt2...\n    }\n    else if(cmd.hasOption(\"rep\")){\n        cmd = parser.parse(repOptions,argv,false);\n        // process the rep_op1 and rep_opt2...\n    }\n    else {\n        printUsage();\n    }",
            "commit number version hash": 190,
            "commit number": 542,
            "function that changed": [
                {
                    "function name": "Builder",
                    "function params": [
                        "opt"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "testBuilderMethods",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionTest.testBuilderMethods"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/Option.java",
                "src/test/java/org/apache/commons/cli/OptionTest.java"
            ]
        },
        {
            "bug index": "6",
            "bug id": "CLI-254",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "44173949e8165537b201d4efd024e31e6e8b06eb",
            "description": "{code}\ndef cli = new CliBuilder()\ncli.with {\n  f longOpt:'json-filter','jq expression', args: 1\n}\ndef vals = ['test', 't\"es\"t',\n            \"'test\", \"test'\", \"'test'\",\n            '\"test', 'test\"', '\"test\"']\nvals.each {\n  def opt = cli.parse(['-f', it])\n  assert opt.f == it\n}\n{code}\nIt fails on last entry: \"test\".",
            "commit number version hash": 440,
            "commit number": 536,
            "function that changed": [
                {
                    "function name": "Builder",
                    "function params": [
                        "stripLeadingAndTrailingQuotes"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.Builder"
                },
                {
                    "function name": "handleConcatenatedOptions",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleConcatenatedOptions"
                },
                {
                    "function name": "handleProperties",
                    "function params": [
                        "properties"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleProperties"
                },
                {
                    "function name": "handleShortAndLongOption",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleShortAndLongOption"
                },
                {
                    "function name": "DefaultParser",
                    "function params": [
                        "allowPartialMatching"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.DefaultParser"
                },
                {
                    "function name": "builder",
                    "function params": [],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.builder"
                },
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.Builder"
                },
                {
                    "function name": "DefaultParser",
                    "function params": [
                        "allowPartialMatching",
                        "stripLeadingAndTrailingQuotes"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.DefaultParser"
                },
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.Builder"
                },
                {
                    "function name": "stripLeadingAndTrailingQuotesDefaultOff",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.stripLeadingAndTrailingQuotesDefaultOff"
                },
                {
                    "function name": "DefaultParser",
                    "function params": [],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.DefaultParser"
                },
                {
                    "function name": "stripLeadingAndTrailingQuotesDefaultOn",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.stripLeadingAndTrailingQuotesDefaultOn"
                },
                {
                    "function name": "handleToken",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleToken"
                },
                {
                    "function name": "handleLongOptionWithEqual",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleLongOptionWithEqual"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "allowPartialMatching"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.Builder"
                },
                {
                    "function name": "testLongOptionWithEqualsQuoteHandling",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testLongOptionWithEqualsQuoteHandling"
                },
                {
                    "function name": "testShortOptionConcatenatedQuoteHandling",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testShortOptionConcatenatedQuoteHandling"
                },
                {
                    "function name": "testLongOptionQuoteHandlingWithStrip",
                    "function params": [],
                    "file name": "DefaultParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.DefaultParserTest.testLongOptionQuoteHandlingWithStrip"
                },
                {
                    "function name": "testLongOptionQuoteHandlingWithoutStrip",
                    "function params": [],
                    "file name": "DefaultParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.DefaultParserTest.testLongOptionQuoteHandlingWithoutStrip"
                },
                {
                    "function name": "testShortOptionConcatenatedQuoteHandling",
                    "function params": [],
                    "file name": "DefaultParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.DefaultParserTest.testShortOptionConcatenatedQuoteHandling"
                },
                {
                    "function name": "testLongOptionWithEqualsQuoteHandlingWithoutStrip",
                    "function params": [],
                    "file name": "DefaultParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.DefaultParserTest.testLongOptionWithEqualsQuoteHandlingWithoutStrip"
                },
                {
                    "function name": "testShortOptionQuoteHandlingWithoutStrip",
                    "function params": [],
                    "file name": "DefaultParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.DefaultParserTest.testShortOptionQuoteHandlingWithoutStrip"
                },
                {
                    "function name": "testBuilder",
                    "function params": [],
                    "file name": "DefaultParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.DefaultParserTest.testBuilder"
                },
                {
                    "function name": "testLongOptionWithEqualsQuoteHandling",
                    "function params": [],
                    "file name": "DefaultParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.DefaultParserTest.testLongOptionWithEqualsQuoteHandling"
                },
                {
                    "function name": "testLongOptionWithEqualsQuoteHandlingWithStrip",
                    "function params": [],
                    "file name": "DefaultParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.DefaultParserTest.testLongOptionWithEqualsQuoteHandlingWithStrip"
                },
                {
                    "function name": "testShortOptionQuoteHandlingWithStrip",
                    "function params": [],
                    "file name": "DefaultParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.DefaultParserTest.testShortOptionQuoteHandlingWithStrip"
                },
                {
                    "function name": "testLongOptionWithEqualsQuoteHandling",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testLongOptionWithEqualsQuoteHandling"
                },
                {
                    "function name": "testShortOptionQuoteHandling",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testShortOptionQuoteHandling"
                },
                {
                    "function name": "testShortOptionConcatenatedQuoteHandling",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testShortOptionConcatenatedQuoteHandling"
                },
                {
                    "function name": "testLongOptionQuoteHandling",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testLongOptionQuoteHandling"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/DefaultParser.java",
                "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                "src/test/java/org/apache/commons/cli/DefaultParserTest.java",
                "src/test/java/org/apache/commons/cli/ParserTestCase.java"
            ]
        },
        {
            "bug index": "7",
            "bug id": "CLI-69",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "a1222147c2d3a99aa19776ee2dea30974d57571a",
            "description": "I hav a tool that takes the following options: -p -attr.\nBoth takes argument. If the user wants to specify p as the argument for attr,\n-attr p, cli throws a MissingArgumentException. This is because it sees p as an\noption rather than the argument of attr.",
            "commit number version hash": 190,
            "commit number": 535,
            "function that changed": [
                {
                    "function name": "testOption",
                    "function params": [],
                    "file name": "ArgumentIsOptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ArgumentIsOptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ArgumentIsOptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.ArgumentIsOptionTest.testOption"
                },
                {
                    "function name": "testOptionWithArgument",
                    "function params": [],
                    "file name": "ArgumentIsOptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ArgumentIsOptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ArgumentIsOptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.ArgumentIsOptionTest.testOptionWithArgument"
                },
                {
                    "function name": "testOptionAndOptionWithArgument",
                    "function params": [],
                    "file name": "ArgumentIsOptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ArgumentIsOptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ArgumentIsOptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.ArgumentIsOptionTest.testOptionAndOptionWithArgument"
                },
                {
                    "function name": "testRtrim",
                    "function params": [],
                    "file name": "HelpFormatterTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.HelpFormatterTest.testRtrim"
                },
                {
                    "function name": "testTwoCompleteOptions",
                    "function params": [],
                    "file name": "OptionBuilderTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionBuilderTest.testTwoCompleteOptions"
                },
                {
                    "function name": "testBaseOptionStringOpt",
                    "function params": [],
                    "file name": "OptionBuilderTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionBuilderTest.testBaseOptionStringOpt"
                },
                {
                    "function name": "testBaseOptionCharOpt",
                    "function params": [],
                    "file name": "OptionBuilderTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionBuilderTest.testBaseOptionCharOpt"
                },
                {
                    "function name": "testSingleOptionFromGroup",
                    "function params": [],
                    "file name": "OptionGroupTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionGroupTest.testSingleOptionFromGroup"
                },
                {
                    "function name": "testNoOptionsExtraArgs",
                    "function params": [],
                    "file name": "OptionGroupTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionGroupTest.testNoOptionsExtraArgs"
                },
                {
                    "function name": "testTwoOptionsFromDifferentGroup",
                    "function params": [],
                    "file name": "OptionGroupTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionGroupTest.testTwoOptionsFromDifferentGroup"
                },
                {
                    "function name": "testSingleLongOption",
                    "function params": [],
                    "file name": "OptionGroupTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionGroupTest.testSingleLongOption"
                },
                {
                    "function name": "testTwoOptionsFromGroupWithProperties",
                    "function params": [],
                    "file name": "OptionGroupTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionGroupTest.testTwoOptionsFromGroupWithProperties"
                },
                {
                    "function name": "testTwoValidLongOptions",
                    "function params": [],
                    "file name": "OptionGroupTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionGroupTest.testTwoValidLongOptions"
                },
                {
                    "function name": "testSingleOption",
                    "function params": [],
                    "file name": "OptionGroupTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionGroupTest.testSingleOption"
                },
                {
                    "function name": "testTwoValidOptions",
                    "function params": [],
                    "file name": "OptionGroupTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionGroupTest.testTwoValidOptions"
                },
                {
                    "function name": "testGetValue",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionTest.testGetValue"
                },
                {
                    "function name": "testMultiple",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testMultiple"
                },
                {
                    "function name": "testBursting",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testBursting"
                },
                {
                    "function name": "testMultipleWithLong",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testMultipleWithLong"
                },
                {
                    "function name": "testStopAtNonOptionShort",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testStopAtNonOptionShort"
                },
                {
                    "function name": "testStopBursting",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testStopBursting"
                },
                {
                    "function name": "testPropertyOptionSingularValue",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testPropertyOptionSingularValue"
                },
                {
                    "function name": "testPartialLongOptionSingleDash",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testPartialLongOptionSingleDash"
                },
                {
                    "function name": "testDoubleDash1",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testDoubleDash1"
                },
                {
                    "function name": "testStopAtNonOptionLong",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testStopAtNonOptionLong"
                },
                {
                    "function name": "testSingleDash",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testSingleDash"
                },
                {
                    "function name": "testStopBursting2",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testStopBursting2"
                },
                {
                    "function name": "testStopAtUnexpectedArg",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testStopAtUnexpectedArg"
                },
                {
                    "function name": "testPropertyOverrideValues",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testPropertyOverrideValues"
                },
                {
                    "function name": "testOptionAndRequiredOption",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testOptionAndRequiredOption"
                },
                {
                    "function name": "testPropertyOptionFlags",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testPropertyOptionFlags"
                },
                {
                    "function name": "testWithRequiredOption",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testWithRequiredOption"
                },
                {
                    "function name": "testSimpleLong",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testSimpleLong"
                },
                {
                    "function name": "testPropertyOptionMultipleValues",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testPropertyOptionMultipleValues"
                },
                {
                    "function name": "testSimpleShort",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testSimpleShort"
                },
                {
                    "function name": "testShortArgsWithValue",
                    "function params": [],
                    "file name": "ValuesTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ValuesTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ValuesTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.ValuesTest.testShortArgsWithValue"
                },
                {
                    "function name": "test15046",
                    "function params": [],
                    "file name": "BugsTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/bug/BugsTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugsTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugsTest.test15046"
                }
            ],
            "files that changed": [
                "src/test/java/org/apache/commons/cli/ArgumentIsOptionTest.java",
                "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                "src/test/java/org/apache/commons/cli/OptionTest.java",
                "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                "src/test/java/org/apache/commons/cli/ValuesTest.java",
                "src/test/java/org/apache/commons/cli/bug/BugsTest.java"
            ]
        },
        {
            "bug index": "12",
            "bug id": "CLI-274",
            "hexsha": "1af9b95aa30c8383588e169bf2fe749c3e9c7c64",
            "fix_hash": "a315e187908d184b1d40f9e7425bc65333a2d07a",
            "description": "When the user pass option type FileInputStream.class, I think the expected behavior for the return value is the same type, which the user passed.\n\nOptions options = new Options();\noptions.addOption(Option.builder(\"f\").hasArg().type(FileInputStream.class).build());\nCommandLine cline = new DefaultParser().parse(options, args);\nFileInputStream file = (FileInputStream) cline.getParsedOptionValue(\"f\"); // it returns \"File\" object, without check File exist.\n\n\nI attach a solution for it:\nhttps://github.com/schaumb/commons-cli/commit/abfcc8211f529ab75f3b3edd4a827e484109eb0b\n\n",
            "commit number version hash": 552,
            "commit number": 464,
            "function that changed": [],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/TypeHandler.java"
            ]
        },
        {
            "bug index": "13",
            "bug id": "CLI-8",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "0f56df924fabac851a111a04569f4a3d7331ef8e",
            "description": "This might apply for more than just the footer. I only tested footer so don't \nknow.\n\ncompile and run this example and you will get an exception\n\n{code:java}\npublic class CliError\n{\n  public static void main(String[] args)\n  {\n    Options options = new Options();\n    HelpFormatter formatter = new HelpFormatter();\n    String footer = System.getProperty(\"line.separator\")+\"Hello world.\";\n    formatter.printHelp(80, \"foobar\", \"\", options, footer, true);\n  }\n}\n{code}\n\nresult is:\n\n{code}\njava.lang.StringIndexOutOfBoundsException: String index out of range: -1\n\tat java.lang.String.charAt(String.java:582)\n\tat org.apache.commons.cli.HelpFormatter.rtrim(HelpFormatter.java:505)\n\tat org.apache.commons.cli.HelpFormatter.renderWrappedText(HelpFormatter.java:416)\n\tat org.apache.commons.cli.HelpFormatter.printWrapped(HelpFormatter.java:324)\n\tat org.apache.commons.cli.HelpFormatter.printWrapped(HelpFormatter.java:318)\n\tat org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:212)\n\tat org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:165)\n\tat com.nokia.em.bts.swupdateautomate.test.CliError.main(CliError.java:21)\n\nException in thread \"main\" Process terminated with exit code 1\n{code}",
            "commit number version hash": 190,
            "commit number": 457,
            "function that changed": [],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/DefaultParser.java",
                "src/main/java/org/apache/commons/cli/PosixParser.java"
            ]
        },
        {
            "bug index": "14",
            "bug id": "CLI-265",
            "hexsha": "73d649ba3fff756dda3f98a9a987725d0b9e3499",
            "fix_hash": "ac2a1c85616f0140418de9190389fe7b80296c39",
            "description": null,
            "commit number version hash": 460,
            "commit number": 456,
            "function that changed": [
                {
                    "function name": "isShortOption",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.isShortOption"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BugCLI265Test.java",
                    "file old path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI265Test.setUp"
                },
                {
                    "function name": "shouldParseConcatenatedShortOptions",
                    "function params": [],
                    "file name": "BugCLI265Test.java",
                    "file old path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI265Test.shouldParseConcatenatedShortOptions"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/DefaultParser.java",
                "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java"
            ]
        },
        {
            "bug index": "15",
            "bug id": "CLI-265",
            "hexsha": "73d649ba3fff756dda3f98a9a987725d0b9e3499",
            "fix_hash": "1bf9e6c551b6a2e7d37291673a1ff77c338ce131",
            "description": null,
            "commit number version hash": 460,
            "commit number": 454,
            "function that changed": [
                {
                    "function name": "isShortOption",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.isShortOption"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BugCLI265Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI265Test.setUp"
                },
                {
                    "function name": "shouldParseShortOptionWithoutValue",
                    "function params": [],
                    "file name": "BugCLI265Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI265Test.shouldParseShortOptionWithoutValue"
                },
                {
                    "function name": "shouldParseShortOptionWithValue",
                    "function params": [],
                    "file name": "BugCLI265Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI265Test.shouldParseShortOptionWithValue"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/DefaultParser.java"
            ]
        },
        {
            "bug index": "16",
            "bug id": "CLI-266",
            "hexsha": "73d649ba3fff756dda3f98a9a987725d0b9e3499",
            "fix_hash": "afc13c445a4c80432e52d735685b272fadfeeddf",
            "description": "{code:java}\nOptionGroup group = new OptionGroup();\nOption h = Option.builder(\"h\").build();\nOption s = Option.builder(\"s\").build();\nOption b = Option.builder(\"b\").build();\nOption t = Option.builder(\"t\").build();\ngroup.addOption(h)\n    .addOption(s)\n    .addOption(b)\n    .addOption(t);\nOptions options = new Options();\noptions.addOptionGroup(group);\noptions.addOption(Option.builder(\"o\").build());\nHelpFormatter formatter = new HelpFormatter();\nformatter.setOptionComparator(null);\nformatter.printHelp(\"cmd\", \"\", options, null);\n{code}\n\nThis code does print the options(1. Group, 2. Option \"o\") in the order of insertion but the groups order of display is messed up.\n\nThe OptionGroup internally uses a HashMap. If that could be replaced with a *LinkedHashMap* this issue can be solved.",
            "commit number version hash": 460,
            "commit number": 447,
            "function that changed": [
                {
                    "function name": "testOptionComparatorDefaultOrder",
                    "function params": [],
                    "file name": "BugCLI266Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI266Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI266Test.testOptionComparatorDefaultOrder"
                },
                {
                    "function name": "testOptionComparatorInsertedOrder",
                    "function params": [],
                    "file name": "BugCLI266Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI266Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI266Test.testOptionComparatorInsertedOrder"
                },
                {
                    "function name": "buildOptionsGroup",
                    "function params": [
                        "options"
                    ],
                    "file name": "BugCLI266Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI266Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI266Test.buildOptionsGroup"
                },
                {
                    "function name": "getOptions",
                    "function params": [],
                    "file name": "BugCLI266Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI266Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI266Test.getOptions"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/OptionGroup.java",
                "src/main/java/org/apache/commons/cli/Options.java"
            ]
        },
        {
            "bug index": "17",
            "bug id": "CLI-5",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "f6af62367494ff8d0d7844f7f435e5ee36c81dcf",
            "description": "compile:\n    [mkdir] Created dir: D:\\development\\apache\\cli\\trunk\\target\\classes\n    [javac] Compiling 71 source files to D:\\development\\apache\\cli\\trunk\\target\\\nclasses\n    [javac] D:\\development\\apache\\cli\\trunk\\src\\java\\org\\apache\\commons\\cli\\Type\nHandler.java:25: package org.apache.commons.lang.math does not exist\n    [javac] import org.apache.commons.lang.math.NumberUtils;\n    [javac]                                     ^\n    [javac] D:\\development\\apache\\cli\\trunk\\src\\java\\org\\apache\\commons\\cli\\Type\nHandler.java:164: cannot resolve symbol\n    [javac] symbol  : variable NumberUtils\n    [javac] location: class org.apache.commons.cli.TypeHandler\n    [javac]             return NumberUtils.createNumber(str);\n    [javac]                    ^\n    [javac] 2 errors\n\nUpdating build.xml to obtain version 2.0 of commons-lang (instead of 1.0) fixes \nthe problem.",
            "commit number version hash": 190,
            "commit number": 446,
            "function that changed": [
                {
                    "function name": "testStopBursting2",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testStopBursting2"
                },
                {
                    "function name": "testPropertiesOption2",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testPropertiesOption2"
                },
                {
                    "function name": "testUnambiguousPartialLongOption2",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testUnambiguousPartialLongOption2"
                },
                {
                    "function name": "testLongWithEqualSingleDash",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testLongWithEqualSingleDash"
                },
                {
                    "function name": "testUnambiguousPartialLongOption3",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testUnambiguousPartialLongOption3"
                },
                {
                    "function name": "testAmbiguousPartialLongOption2",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testAmbiguousPartialLongOption2"
                },
                {
                    "function name": "testUnambiguousPartialLongOption1",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testUnambiguousPartialLongOption1"
                },
                {
                    "function name": "testNegativeOption",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testNegativeOption"
                },
                {
                    "function name": "testShortWithoutEqual",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testShortWithoutEqual"
                },
                {
                    "function name": "testAmbiguousPartialLongOption4",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testAmbiguousPartialLongOption4"
                },
                {
                    "function name": "testBursting",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testBursting"
                },
                {
                    "function name": "testUnrecognizedOptionWithBursting",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testUnrecognizedOptionWithBursting"
                },
                {
                    "function name": "testLongWithoutEqualSingleDash",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testLongWithoutEqualSingleDash"
                },
                {
                    "function name": "testPropertiesOption1",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testPropertiesOption1"
                },
                {
                    "function name": "testAmbiguousLongWithoutEqualSingleDash",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testAmbiguousLongWithoutEqualSingleDash"
                },
                {
                    "function name": "testAmbiguousPartialLongOption3",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testAmbiguousPartialLongOption3"
                },
                {
                    "function name": "testShortWithEqual",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testShortWithEqual"
                },
                {
                    "function name": "testDoubleDash2",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testDoubleDash2"
                },
                {
                    "function name": "testMissingArgWithBursting",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testMissingArgWithBursting"
                },
                {
                    "function name": "testAmbiguousPartialLongOption1",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testAmbiguousPartialLongOption1"
                },
                {
                    "function name": "testStopBursting",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testStopBursting"
                },
                {
                    "function name": "testUnambiguousPartialLongOption4",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testUnambiguousPartialLongOption4"
                },
                {
                    "function name": "testLongWithEqualDoubleDash",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testLongWithEqualDoubleDash"
                },
                {
                    "function name": "testPartialLongOptionSingleDash",
                    "function params": [],
                    "file name": "BasicParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.BasicParserTest.testPartialLongOptionSingleDash"
                },
                {
                    "function name": "testAmbiguousLongWithoutEqualSingleDash",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testAmbiguousLongWithoutEqualSingleDash"
                },
                {
                    "function name": "testStopBursting2",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testStopBursting2"
                },
                {
                    "function name": "testUnrecognizedOptionWithBursting",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testUnrecognizedOptionWithBursting"
                },
                {
                    "function name": "testLongWithoutEqualSingleDash",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testLongWithoutEqualSingleDash"
                },
                {
                    "function name": "testAmbiguousPartialLongOption3",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testAmbiguousPartialLongOption3"
                },
                {
                    "function name": "testMissingArgWithBursting",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testMissingArgWithBursting"
                },
                {
                    "function name": "testLongWithUnexpectedArgument1",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testLongWithUnexpectedArgument1"
                },
                {
                    "function name": "testUnambiguousPartialLongOption1",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testUnambiguousPartialLongOption1"
                },
                {
                    "function name": "testDoubleDash2",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testDoubleDash2"
                },
                {
                    "function name": "testAmbiguousPartialLongOption2",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testAmbiguousPartialLongOption2"
                },
                {
                    "function name": "testNegativeOption",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testNegativeOption"
                },
                {
                    "function name": "testUnambiguousPartialLongOption4",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testUnambiguousPartialLongOption4"
                },
                {
                    "function name": "testBursting",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testBursting"
                },
                {
                    "function name": "testStopBursting",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testStopBursting"
                },
                {
                    "function name": "testPartialLongOptionSingleDash",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testPartialLongOptionSingleDash"
                },
                {
                    "function name": "testUnambiguousPartialLongOption3",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testUnambiguousPartialLongOption3"
                },
                {
                    "function name": "testLongWithUnexpectedArgument2",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testLongWithUnexpectedArgument2"
                },
                {
                    "function name": "testUnambiguousPartialLongOption2",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testUnambiguousPartialLongOption2"
                },
                {
                    "function name": "testAmbiguousPartialLongOption4",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testAmbiguousPartialLongOption4"
                },
                {
                    "function name": "testAmbiguousPartialLongOption1",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testAmbiguousPartialLongOption1"
                },
                {
                    "function name": "testShortWithUnexpectedArgument",
                    "function params": [],
                    "file name": "GnuParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.GnuParserTest.testShortWithUnexpectedArgument"
                },
                {
                    "function name": "testLongWithUnexpectedArgument1",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.PosixParserTest.testLongWithUnexpectedArgument1"
                },
                {
                    "function name": "testLongWithEqualSingleDash",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.PosixParserTest.testLongWithEqualSingleDash"
                },
                {
                    "function name": "testNegativeOption",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.PosixParserTest.testNegativeOption"
                },
                {
                    "function name": "testDoubleDash2",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.PosixParserTest.testDoubleDash2"
                },
                {
                    "function name": "testAmbiguousPartialLongOption4",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.PosixParserTest.testAmbiguousPartialLongOption4"
                },
                {
                    "function name": "testAmbiguousLongWithoutEqualSingleDash",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.PosixParserTest.testAmbiguousLongWithoutEqualSingleDash"
                },
                {
                    "function name": "testShortWithEqual",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.PosixParserTest.testShortWithEqual"
                },
                {
                    "function name": "testLongWithoutEqualSingleDash",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.PosixParserTest.testLongWithoutEqualSingleDash"
                },
                {
                    "function name": "testUnambiguousPartialLongOption4",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.PosixParserTest.testUnambiguousPartialLongOption4"
                }
            ],
            "files that changed": [
                "src/test/java/org/apache/commons/cli/BasicParserTest.java",
                "src/test/java/org/apache/commons/cli/GnuParserTest.java",
                "src/test/java/org/apache/commons/cli/PosixParserTest.java"
            ]
        },
        {
            "bug index": "19",
            "bug id": "CLI-252",
            "hexsha": "58139aefcacfa7954de1552c2ec5640ddbaf3713",
            "fix_hash": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "description": "Options options = new Options();\noptions.addOption(Option.builder().longOpt(\"importToOpen\").hasArg().argName(\"FILE\").build());\noptions.addOption(Option.builder(\"i\").longOpt(\"import\").hasArg().argName(\"FILE\").build());\n\nParsing \"--import=FILE\" is not possible since 1.3 as it throws a AmbiguousOptionException stating that it cannot decide whether import is import or importToOpen. In 1.2 this is not an issue. \n\nThe root lies in the new DefaultParser which does a startsWith check internally. \n",
            "commit number version hash": 443,
            "commit number": 440,
            "function that changed": [
                {
                    "function name": "getMatchingOptions",
                    "function params": [
                        "opt"
                    ],
                    "file name": "Options.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Options.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Options.java",
                    "full name": "src.main.java.org.apache.commons.cli.Options.getMatchingOptions"
                },
                {
                    "function name": "testExactOptionNameMatch",
                    "function params": [],
                    "file name": "BugCLI252Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI252Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI252Test.testExactOptionNameMatch"
                },
                {
                    "function name": "getOptions",
                    "function params": [],
                    "file name": "BugCLI252Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI252Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI252Test.getOptions"
                },
                {
                    "function name": "testAmbiquousOptionName",
                    "function params": [],
                    "file name": "BugCLI252Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/cli/bug/BugCLI252Test.java",
                    "full name": "src.test.java.org.apache.commons.cli.bug.BugCLI252Test.testAmbiquousOptionName"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/Options.java"
            ]
        },
        {
            "bug index": "20",
            "bug id": "CLI-241",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "b1ffe271a5f8a6ff7b6bf714a9b2631e7dc6bbb0",
            "description": "OptionValidator#validateOption\n\nIt states in its JavaDoc that:\n\nValidates whether opt is a permissible Option shortOpt.  The rules that specify if the opt is valid are:\n * it is not NULL\n * it is a single character that is either ' '(special case), '?', '@' or a letter\n * it is a multi characterthat only contains letters.\n\nThe first check in the code though is:\n\n        // check that opt is not NULL\n        if (opt == null)\n        {\n        \treturn;\n        }\n\n\nConsider changing to...\n\n        // check that opt is not NULL\n        if (opt == null)\n        {\n        \tthrow new IllegalArgumentException(\"The option cannot be NULL\");\n        }",
            "commit number version hash": 440,
            "commit number": 422,
            "function that changed": [
                {
                    "function name": "validateOption",
                    "function params": [
                        "opt"
                    ],
                    "file name": "OptionValidator.java",
                    "file old path": "src/main/java/org/apache/commons/cli/OptionValidator.java",
                    "file new path": "src/main/java/org/apache/commons/cli/OptionValidator.java",
                    "full name": "src.main.java.org.apache.commons.cli.OptionValidator.validateOption"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/OptionValidator.java"
            ]
        },
        {
            "bug index": "21",
            "bug id": "CLI-224",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "639e070cfe87ea05f3aa618553e7971ccfaec0b7",
            "description": "CLI-83 was closed as fixed in 2.0, but it seems that there is no current plan to release CLI 2.0.  Could this fix be rolled into the 1.x line?  I'm attaching a new version of option builder that addresses the issue (named DefaultOptionBuilder to maintain backwards compatability) and a unit test for it.",
            "commit number version hash": 440,
            "commit number": 419,
            "function that changed": [
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/Option.java"
            ]
        },
        {
            "bug index": "22",
            "bug id": "CLI-224",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3",
            "description": "CLI-83 was closed as fixed in 2.0, but it seems that there is no current plan to release CLI 2.0.  Could this fix be rolled into the 1.x line?  I'm attaching a new version of option builder that addresses the issue (named DefaultOptionBuilder to maintain backwards compatability) and a unit test for it.",
            "commit number version hash": 440,
            "commit number": 418,
            "function that changed": [
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "opt"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "opt",
                        "description"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "description"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "builder",
                    "function params": [
                        "opt"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.builder"
                },
                {
                    "function name": "builder",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.builder"
                },
                {
                    "function name": "parsePattern",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "PatternOptionBuilder.java",
                    "file old path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                    "file new path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                    "full name": "src.main.java.org.apache.commons.cli.PatternOptionBuilder.parsePattern"
                },
                {
                    "function name": "testBuilderInsufficientParams2",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionTest.testBuilderInsufficientParams2"
                },
                {
                    "function name": "testBuilderInsufficientParams1",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionTest.testBuilderInsufficientParams1"
                },
                {
                    "function name": "testBuilderMethods",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionTest.testBuilderMethods"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/Option.java",
                "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                "src/test/java/org/apache/commons/cli/OptionTest.java"
            ]
        },
        {
            "bug index": "23",
            "bug id": "CLI-230",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "9ed70efb45a95b0327232d1f9329f777bc428da7",
            "description": "Having some problems setting options as required. Have I misunderstood the documentation?\n\n * In test1() the option is required but also supplied, I expect to get no exceptions.\n * In test2() the option is required but *not* supplied, I expect to get an exception.\n\n{code:java}\npublic class Testing {\n\n    public static void main(String[] args) {\n        System.out.println(\"Begin test 1\");\n        test1();\n        System.out.println(\"End test 1\");\n        System.out.println(\"Begin test 2\");\n        test2();\n        System.out.println(\"End test 2\");\n    }\n\n    private static void test1() {\n\n        String[] args = new String[] { \"--foo\" };\n\n        Options options = new Options();\n        options.addOption(\"f\", \"foo\", false, \"\");\n        options.getRequiredOptions().add(options.getOption(\"foo\"));\n\n        GnuParser parser = new GnuParser();\n        try {\n            parser.parse(options, args);\n        } catch (ParseException e) {\n            // didn't expect to get MissingOptionException here\n            System.out.println(\"ERROR: \" + e.getMessage());\n        }\n    }\n\n    private static void test2() {\n\n        String[] args = new String[] { };\n\n        Options options = new Options();\n        options.addOption(\"f\", \"foo\", false, \"\");\n        options.getOption(\"f\").setRequired(true);\n\n        GnuParser parser = new GnuParser();\n        try {\n            parser.parse(options, args);\n        } catch (ParseException e) {\n            // expected to get MissingOptionException here\n            System.out.println(\"ERROR: \" + e.getMessage());\n        }\n    }\n}\n{code}",
            "commit number version hash": 440,
            "commit number": 414,
            "function that changed": [
                {
                    "function name": "getRequiredOptions",
                    "function params": [],
                    "file name": "Options.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Options.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Options.java",
                    "full name": "src.main.java.org.apache.commons.cli.Options.getRequiredOptions"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/Option.java",
                "src/main/java/org/apache/commons/cli/Options.java"
            ]
        },
        {
            "bug index": "24",
            "bug id": "CLI-224",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "46ad66ae8f1c805b40775e856d70277b669df6fb",
            "description": "CLI-83 was closed as fixed in 2.0, but it seems that there is no current plan to release CLI 2.0.  Could this fix be rolled into the 1.x line?  I'm attaching a new version of option builder that addresses the issue (named DefaultOptionBuilder to maintain backwards compatability) and a unit test for it.",
            "commit number version hash": 440,
            "commit number": 413,
            "function that changed": [
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/Option.java"
            ]
        },
        {
            "bug index": "25",
            "bug id": "CLI-224",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "df52eee396b1e8ce24fd1ec34752e1049618255a",
            "description": "CLI-83 was closed as fixed in 2.0, but it seems that there is no current plan to release CLI 2.0.  Could this fix be rolled into the 1.x line?  I'm attaching a new version of option builder that addresses the issue (named DefaultOptionBuilder to maintain backwards compatability) and a unit test for it.",
            "commit number version hash": 440,
            "commit number": 412,
            "function that changed": [
                {
                    "function name": "Builder",
                    "function params": [
                        "isOptional"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "type"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "longOpt"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "numberOfArgs"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "sep"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "opt",
                        "description"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "argName"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "hasArg"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Builder",
                    "function params": [
                        "required"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Builder"
                },
                {
                    "function name": "Option",
                    "function params": [
                        "builder"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.Option"
                },
                {
                    "function name": "parsePattern",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "PatternOptionBuilder.java",
                    "file old path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                    "file new path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                    "full name": "src.main.java.org.apache.commons.cli.PatternOptionBuilder.parsePattern"
                },
                {
                    "function name": "testBuilderMethods",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionTest.testBuilderMethods"
                },
                {
                    "function name": "checkOption",
                    "function params": [
                        "option",
                        "opt",
                        "description",
                        "longOpt",
                        "numArgs",
                        "argName",
                        "required",
                        "optionalArg",
                        "valueSeparator",
                        "cls"
                    ],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionTest.checkOption"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/Option.java",
                "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                "src/test/java/org/apache/commons/cli/OptionTest.java"
            ]
        },
        {
            "bug index": "26",
            "bug id": "CLI-220",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "87c9813a79cde41b2f954688f15bd86588092c7f",
            "description": "The following code:\n\n{code:title=Test.java|borderStyle=solid}\nimport java.util.List;\n\nimport org.apache.commons.cli.CommandLine;\nimport org.apache.commons.cli.CommandLineParser;\nimport org.apache.commons.cli.GnuParser;\nimport org.apache.commons.cli.MissingOptionException;\nimport org.apache.commons.cli.Option;\nimport org.apache.commons.cli.OptionBuilder;\nimport org.apache.commons.cli.OptionGroup;\nimport org.apache.commons.cli.Options;\n\npublic class Test {\n\tpublic static void main(String[] argv)\n\t{\n\t\tOption opt_foo =\n\t\t\tOptionBuilder.hasArg(false)\n\t\t\t\t.isRequired(true)\n\t\t\t\t.withDescription(\"option foo\")\n\t\t        .create(\"foo\");\n\n\t\tOption opt_bar =\n\t\t\tOptionBuilder.hasArg(false)\n\t\t\t\t.isRequired(false)\n\t\t\t\t.withDescription(\"option bar\")\n\t\t        .create(\"bar\");\n\n\t\tOption opt_baz =\n\t\t\tOptionBuilder.hasArg(false)\n\t\t\t\t.isRequired(false)\n\t\t\t\t.withDescription(\"option baz\")\n\t\t        .create(\"baz\");\n\n\t\tOptionGroup optgrp = new OptionGroup();\n\t\toptgrp.setRequired(true);\n\t\toptgrp.addOption(opt_bar)\n\t\t\t.addOption(opt_baz);\n\n\t\tOptions optsdef = new Options();\n\t\toptsdef.addOption(opt_foo)\n\t\t\t.addOptionGroup(optgrp);\n\n\t\ttry {\n\t\t\tCommandLineParser parser = new GnuParser();\n\t\t\tCommandLine cmdline = parser.parse(optsdef, argv);\n\t\t}\n\t\tcatch (MissingOptionException ex) {\n\t\t\tList opts = ex.getMissingOptions();\n\n\t\t\tfor (Object option : opts) {\n\t\t\t\tSystem.out.println(\"OPT: \" + option.getClass().getName());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tex.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\n}\n{code}\n\nproduces the following output:\n\n{code}\n</tmp/MissingOptionException> $ javac -cp commons-cli-1.2.jar Test.java\n\n</tmp/MissingOptionException> $ java -cp commons-cli-1.2.jar:. Test\nOPT: java.lang.String\nOPT: org.apache.commons.cli.OptionGroup\n{code}\n\nThe JavaDoc for MissingOptionException.getMissingOptions() says:\n\n{quote}\nReturn the list of options (as strings) missing in the command line parsed.\n{quote}",
            "commit number version hash": 440,
            "commit number": 369,
            "function that changed": [],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/MissingOptionException.java"
            ]
        },
        {
            "bug index": "27",
            "bug id": "CLI-5",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "a1b5d44432c057cf675f051bb20379937565f4ef",
            "description": "compile:\n    [mkdir] Created dir: D:\\development\\apache\\cli\\trunk\\target\\classes\n    [javac] Compiling 71 source files to D:\\development\\apache\\cli\\trunk\\target\\\nclasses\n    [javac] D:\\development\\apache\\cli\\trunk\\src\\java\\org\\apache\\commons\\cli\\Type\nHandler.java:25: package org.apache.commons.lang.math does not exist\n    [javac] import org.apache.commons.lang.math.NumberUtils;\n    [javac]                                     ^\n    [javac] D:\\development\\apache\\cli\\trunk\\src\\java\\org\\apache\\commons\\cli\\Type\nHandler.java:164: cannot resolve symbol\n    [javac] symbol  : variable NumberUtils\n    [javac] location: class org.apache.commons.cli.TypeHandler\n    [javac]             return NumberUtils.createNumber(str);\n    [javac]                    ^\n    [javac] 2 errors\n\nUpdating build.xml to obtain version 2.0 of commons-lang (instead of 1.0) fixes \nthe problem.",
            "commit number version hash": 190,
            "commit number": 356,
            "function that changed": [
                {
                    "function name": "AmbiguousOptionException",
                    "function params": [
                        "option",
                        "matchingOptions"
                    ],
                    "file name": "AmbiguousOptionException.java",
                    "file old path": "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                    "file new path": "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                    "full name": "src.main.java.org.apache.commons.cli.AmbiguousOptionException.AmbiguousOptionException"
                },
                {
                    "function name": "createMessage",
                    "function params": [
                        "option",
                        "matchingOptions"
                    ],
                    "file name": "AmbiguousOptionException.java",
                    "file old path": "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                    "file new path": "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                    "full name": "src.main.java.org.apache.commons.cli.AmbiguousOptionException.createMessage"
                },
                {
                    "function name": "createMessage",
                    "function params": [
                        "option",
                        "matchingOptions"
                    ],
                    "file name": "AmbiguousOptionException.java",
                    "file old path": "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                    "file new path": "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                    "full name": "src.main.java.org.apache.commons.cli.AmbiguousOptionException.createMessage"
                },
                {
                    "function name": "getMatchingOptions",
                    "function params": [],
                    "file name": "AmbiguousOptionException.java",
                    "file old path": "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                    "file new path": "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                    "full name": "src.main.java.org.apache.commons.cli.AmbiguousOptionException.getMatchingOptions"
                },
                {
                    "function name": "AmbiguousOptionException",
                    "function params": [
                        "option",
                        "matchingOptions"
                    ],
                    "file name": "AmbiguousOptionException.java",
                    "file old path": "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                    "file new path": "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                    "full name": "src.main.java.org.apache.commons.cli.AmbiguousOptionException.AmbiguousOptionException"
                },
                {
                    "function name": "getOptionValues",
                    "function params": [
                        "opt"
                    ],
                    "file name": "CommandLine.java",
                    "file old path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.main.java.org.apache.commons.cli.CommandLine.getOptionValues"
                },
                {
                    "function name": "getOptions",
                    "function params": [],
                    "file name": "CommandLine.java",
                    "file old path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.main.java.org.apache.commons.cli.CommandLine.getOptions"
                },
                {
                    "function name": "getArgList",
                    "function params": [],
                    "file name": "CommandLine.java",
                    "file old path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.main.java.org.apache.commons.cli.CommandLine.getArgList"
                },
                {
                    "function name": "resolveOption",
                    "function params": [
                        "opt"
                    ],
                    "file name": "CommandLine.java",
                    "file old path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.main.java.org.apache.commons.cli.CommandLine.resolveOption"
                },
                {
                    "function name": "getOptionProperties",
                    "function params": [
                        "opt"
                    ],
                    "file name": "CommandLine.java",
                    "file old path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.main.java.org.apache.commons.cli.CommandLine.getOptionProperties"
                },
                {
                    "function name": "handleOption",
                    "function params": [
                        "option"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleOption"
                },
                {
                    "function name": "parse",
                    "function params": [
                        "options",
                        "arguments",
                        "properties",
                        "stopAtNonOption"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.parse"
                },
                {
                    "function name": "handleShortAndLongOption",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleShortAndLongOption"
                },
                {
                    "function name": "handleLongOptionWithoutEqual",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleLongOptionWithoutEqual"
                },
                {
                    "function name": "handleLongOptionWithEqual",
                    "function params": [
                        "token"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleLongOptionWithEqual"
                },
                {
                    "function name": "setOptionComparator",
                    "function params": [
                        "comparator"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.setOptionComparator"
                },
                {
                    "function name": "appendOptionGroup",
                    "function params": [
                        "buff",
                        "group"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.appendOptionGroup"
                },
                {
                    "function name": "printUsage",
                    "function params": [
                        "pw",
                        "width",
                        "app",
                        "options"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.printUsage"
                },
                {
                    "function name": "OptionComparator",
                    "function params": [
                        "opt1",
                        "opt2"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.OptionComparator"
                },
                {
                    "function name": "OptionComparator",
                    "function params": [
                        "o1",
                        "o2"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.OptionComparator"
                },
                {
                    "function name": "setOptionComparator",
                    "function params": [
                        "comparator"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.setOptionComparator"
                },
                {
                    "function name": "renderOptions",
                    "function params": [
                        "sb",
                        "width",
                        "options",
                        "leftPad",
                        "descPad"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.renderOptions"
                },
                {
                    "function name": "getOptionComparator",
                    "function params": [],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.getOptionComparator"
                },
                {
                    "function name": "clone",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.clone"
                },
                {
                    "function name": "getValues",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.getValues"
                },
                {
                    "function name": "getValue",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.getValue"
                },
                {
                    "function name": "getValue",
                    "function params": [
                        "index"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.getValue"
                },
                {
                    "function name": "getValuesList",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.getValuesList"
                },
                {
                    "function name": "getOptions",
                    "function params": [],
                    "file name": "OptionGroup.java",
                    "file old path": "src/main/java/org/apache/commons/cli/OptionGroup.java",
                    "file new path": "src/main/java/org/apache/commons/cli/OptionGroup.java",
                    "full name": "src.main.java.org.apache.commons.cli.OptionGroup.getOptions"
                },
                {
                    "function name": "getNames",
                    "function params": [],
                    "file name": "OptionGroup.java",
                    "file old path": "src/main/java/org/apache/commons/cli/OptionGroup.java",
                    "file new path": "src/main/java/org/apache/commons/cli/OptionGroup.java",
                    "full name": "src.main.java.org.apache.commons.cli.OptionGroup.getNames"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "OptionGroup.java",
                    "file old path": "src/main/java/org/apache/commons/cli/OptionGroup.java",
                    "file new path": "src/main/java/org/apache/commons/cli/OptionGroup.java",
                    "full name": "src.main.java.org.apache.commons.cli.OptionGroup.toString"
                },
                {
                    "function name": "validateOption",
                    "function params": [
                        "opt"
                    ],
                    "file name": "OptionValidator.java",
                    "file old path": "src/main/java/org/apache/commons/cli/OptionValidator.java",
                    "file new path": "src/main/java/org/apache/commons/cli/OptionValidator.java",
                    "full name": "src.main.java.org.apache.commons.cli.OptionValidator.validateOption"
                },
                {
                    "function name": "helpOptions",
                    "function params": [],
                    "file name": "Options.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Options.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Options.java",
                    "full name": "src.main.java.org.apache.commons.cli.Options.helpOptions"
                },
                {
                    "function name": "getMatchingOptions",
                    "function params": [
                        "opt"
                    ],
                    "file name": "Options.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Options.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Options.java",
                    "full name": "src.main.java.org.apache.commons.cli.Options.getMatchingOptions"
                },
                {
                    "function name": "getOptionGroup",
                    "function params": [
                        "opt"
                    ],
                    "file name": "Options.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Options.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Options.java",
                    "full name": "src.main.java.org.apache.commons.cli.Options.getOptionGroup"
                },
                {
                    "function name": "getOption",
                    "function params": [
                        "opt"
                    ],
                    "file name": "Options.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Options.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Options.java",
                    "full name": "src.main.java.org.apache.commons.cli.Options.getOption"
                },
                {
                    "function name": "getOptionGroups",
                    "function params": [],
                    "file name": "Options.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Options.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Options.java",
                    "full name": "src.main.java.org.apache.commons.cli.Options.getOptionGroups"
                },
                {
                    "function name": "getOptions",
                    "function params": [],
                    "file name": "Options.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Options.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Options.java",
                    "full name": "src.main.java.org.apache.commons.cli.Options.getOptions"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/AmbiguousOptionException.java",
                "src/main/java/org/apache/commons/cli/CommandLine.java",
                "src/main/java/org/apache/commons/cli/DefaultParser.java",
                "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                "src/main/java/org/apache/commons/cli/MissingOptionException.java",
                "src/main/java/org/apache/commons/cli/Option.java",
                "src/main/java/org/apache/commons/cli/OptionGroup.java",
                "src/main/java/org/apache/commons/cli/OptionValidator.java",
                "src/main/java/org/apache/commons/cli/Options.java"
            ]
        },
        {
            "bug index": "28",
            "bug id": "CLI-215",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "62a3b36efc78e53c233c2fb49cc8199c5eabec1d",
            "description": "getParsedOptionValue returns null unless Option.type gets explicitly set. The user expects it to be String unless set to any other type.\nThis coult be either fixed in the Option constructor or in CommandLine.getParsedOptionValue. Mentioning this behaviour in Javadoc would be advisable.\n\n",
            "commit number version hash": 440,
            "commit number": 355,
            "function that changed": [
                {
                    "function name": "getParsedOptionValue",
                    "function params": [
                        "opt"
                    ],
                    "file name": "CommandLine.java",
                    "file old path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/main/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.main.java.org.apache.commons.cli.CommandLine.getParsedOptionValue"
                },
                {
                    "function name": "setType",
                    "function params": [
                        "type"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.setType"
                },
                {
                    "function name": "setType",
                    "function params": [
                        "type"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Option.java",
                    "full name": "src.main.java.org.apache.commons.cli.Option.setType"
                },
                {
                    "function name": "withType",
                    "function params": [
                        "newType"
                    ],
                    "file name": "OptionBuilder.java",
                    "file old path": "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                    "file new path": "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                    "full name": "src.main.java.org.apache.commons.cli.OptionBuilder.withType"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "OptionBuilder.java",
                    "file old path": "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                    "file new path": "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                    "full name": "src.main.java.org.apache.commons.cli.OptionBuilder.reset"
                },
                {
                    "function name": "withType",
                    "function params": [
                        "newType"
                    ],
                    "file name": "OptionBuilder.java",
                    "file old path": "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                    "file new path": "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                    "full name": "src.main.java.org.apache.commons.cli.OptionBuilder.withType"
                },
                {
                    "function name": "getValueClass",
                    "function params": [
                        "ch"
                    ],
                    "file name": "PatternOptionBuilder.java",
                    "file old path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                    "file new path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                    "full name": "src.main.java.org.apache.commons.cli.PatternOptionBuilder.getValueClass"
                },
                {
                    "function name": "parsePattern",
                    "function params": [
                        "pattern"
                    ],
                    "file name": "PatternOptionBuilder.java",
                    "file old path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                    "file new path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                    "full name": "src.main.java.org.apache.commons.cli.PatternOptionBuilder.parsePattern"
                },
                {
                    "function name": "testGetParsedOptionValue",
                    "function params": [],
                    "file name": "CommandLineTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/CommandLineTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/CommandLineTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.CommandLineTest.testGetParsedOptionValue"
                },
                {
                    "function name": "testTwoCompleteOptions",
                    "function params": [],
                    "file name": "OptionBuilderTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionBuilderTest.testTwoCompleteOptions"
                },
                {
                    "function name": "testCompleteOption",
                    "function params": [],
                    "file name": "OptionBuilderTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionBuilderTest.testCompleteOption"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/CommandLine.java",
                "src/main/java/org/apache/commons/cli/Option.java",
                "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
                "src/test/java/org/apache/commons/cli/CommandLineTest.java",
                "src/test/java/org/apache/commons/cli/OptionBuilderTest.java"
            ]
        },
        {
            "bug index": "29",
            "bug id": "CLI-209",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "4eb17f5ab2ee09cc00f4ce4d2e26cc7ddffa8cc9",
            "description": "Class OptionBuilder is not thread-safe.\nIt uses one OptionBuilder instance without synchronizing access to it.\nIf more than one thread uses OptionBuilder, that can result in invalid Options (suppose a scheduler component).\n\nDon't know if this should be fixed. At least the Javadoc should mention the fact that the class is not thread-safe.\nAs a workaround, use constructor of class Option.\n",
            "commit number version hash": 440,
            "commit number": 351,
            "function that changed": [],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/OptionBuilder.java"
            ]
        },
        {
            "bug index": "30",
            "bug id": "CLI-208",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "b88c9ba0b2c8a8a21862d405bf24098f7037dbed",
            "description": "javadoc for method isRequired() is wrong (probably copy/paste error) :\n\n    Query to see if this Option requires an argument\n        boolean flag indicating if an argument is required\n\n-> should be \"Query to see if this Option is mandatory, boolean flag indicating if this Option is mandatory\"\n",
            "commit number version hash": 440,
            "commit number": 350,
            "function that changed": [],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/Option.java"
            ]
        },
        {
            "bug index": "31",
            "bug id": "CLI-207",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "483f811dfefdc6bee162481425f261d983f15e4a",
            "description": "I discovered a bug in Commons CLI while using it through Groovy's CliBuilder. See the following issue:\n\nhttp://jira.codehaus.org/browse/GROOVY-4313?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\n\nCopied:\nThe following code:\n\ndef cli = new CliBuilder(footer: \"line1:\\n line2:\\n\")\ncli.usage()\n\nProduces the following output:\n\nline1\nline2\n\nNote that there are no whitespaces before \"line2\". Replacing them with \"\\t\" doesn't solve the problem either.",
            "commit number version hash": 440,
            "commit number": 348,
            "function that changed": [
                {
                    "function name": "renderWrappedTextBlock",
                    "function params": [
                        "sb",
                        "width",
                        "nextLineTabStop",
                        "text"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.renderWrappedTextBlock"
                },
                {
                    "function name": "printWrapped",
                    "function params": [
                        "pw",
                        "width",
                        "nextLineTabStop",
                        "text"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.printWrapped"
                },
                {
                    "function name": "testIndentedHeaderAndFooter",
                    "function params": [],
                    "file name": "HelpFormatterTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.HelpFormatterTest.testIndentedHeaderAndFooter"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                "src/test/java/org/apache/commons/cli/HelpFormatterTest.java"
            ]
        },
        {
            "bug index": "32",
            "bug id": "CLI-193",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "777cb81088d47472df21a452edd5ba568d4b3fdf",
            "description": "In the last while loop in HelpFormatter.findWrapPos, it can pass text.length() to text.charAt(int), which throws a StringIndexOutOfBoundsException. The first expression in that while loop condition should use a <, not a <=.\n\nThis is on line 908 in r779646:\n  http://svn.apache.org/viewvc/commons/proper/cli/trunk/src/java/org/apache/commons/cli/HelpFormatter.java?revision=779646&view=markup",
            "commit number version hash": 440,
            "commit number": 347,
            "function that changed": [
                {
                    "function name": "findWrapPos",
                    "function params": [
                        "text",
                        "width",
                        "startPos"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.findWrapPos"
                },
                {
                    "function name": "testRenderWrappedTextWordCut",
                    "function params": [],
                    "file name": "HelpFormatterTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.HelpFormatterTest.testRenderWrappedTextWordCut"
                },
                {
                    "function name": "testFindWrapPos",
                    "function params": [],
                    "file name": "HelpFormatterTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.HelpFormatterTest.testFindWrapPos"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                "src/test/java/org/apache/commons/cli/HelpFormatterTest.java"
            ]
        },
        {
            "bug index": "33",
            "bug id": "CLI-205",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "4d2c8a22d1e1831858029b8ef225a07f4445a221",
            "description": "The default argument name set on the HelpFormatter has no effect because the Option and the OptionBuilder bring automatically a default value 'arg'.",
            "commit number version hash": 440,
            "commit number": 343,
            "function that changed": [
                {
                    "function name": "appendOption",
                    "function params": [
                        "buff",
                        "option",
                        "required"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.appendOption"
                },
                {
                    "function name": "renderOptions",
                    "function params": [
                        "sb",
                        "width",
                        "options",
                        "leftPad",
                        "descPad"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.main.java.org.apache.commons.cli.HelpFormatter.renderOptions"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "OptionBuilder.java",
                    "file old path": "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                    "file new path": "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                    "full name": "src.main.java.org.apache.commons.cli.OptionBuilder.reset"
                },
                {
                    "function name": "testDefaultArgName",
                    "function params": [],
                    "file name": "HelpFormatterTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.HelpFormatterTest.testDefaultArgName"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/HelpFormatter.java",
                "src/main/java/org/apache/commons/cli/Option.java",
                "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                "src/test/java/org/apache/commons/cli/HelpFormatterTest.java"
            ]
        },
        {
            "bug index": "34",
            "bug id": "CLI-186",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "description": "The generated help text will not show \"<arg>\" for the first argument added.\n\n\nSee attached test case:\n\n\nPlease confirm",
            "commit number version hash": 440,
            "commit number": 342,
            "function that changed": [
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "OptionBuilder.java",
                    "file old path": "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                    "file new path": "src/main/java/org/apache/commons/cli/OptionBuilder.java",
                    "full name": "src.main.java.org.apache.commons.cli.OptionBuilder.reset"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/OptionBuilder.java"
            ]
        },
        {
            "bug index": "35",
            "bug id": "CLI-203",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "324b7f901b91614927926a5bab1d9e0e2325f018",
            "description": "The state of the option groups is neither checked nor updated when the default options passed as a Properties instance to the parse method are processed. For example if 'a' and 'b' are two mutually exclusive options, the command line argument could specify 'a' and the default options could contain 'b', the parser will not complain and the resulting CommandLine will contain 'a' and 'b'.\n",
            "commit number version hash": 440,
            "commit number": 341,
            "function that changed": [
                {
                    "function name": "handleProperties",
                    "function params": [
                        "properties"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleProperties"
                },
                {
                    "function name": "processProperties",
                    "function params": [
                        "properties"
                    ],
                    "file name": "Parser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.main.java.org.apache.commons.cli.Parser.processProperties"
                },
                {
                    "function name": "testTwoOptionsFromGroupWithProperties",
                    "function params": [],
                    "file name": "OptionGroupTest.java",
                    "file old path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "file new path": "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                    "full name": "src.test.java.org.apache.commons.cli.OptionGroupTest.testTwoOptionsFromGroupWithProperties"
                },
                {
                    "function name": "testPropertyOptionGroup",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testPropertyOptionGroup"
                },
                {
                    "function name": "testPropertyOptionUnexpected",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testPropertyOptionUnexpected"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/DefaultParser.java",
                "src/main/java/org/apache/commons/cli/Parser.java",
                "src/test/java/org/apache/commons/cli/OptionGroupTest.java",
                "src/test/java/org/apache/commons/cli/ParserTestCase.java"
            ]
        },
        {
            "bug index": "36",
            "bug id": "CLI-202",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "5560a086886c4d6dba2c30eb75e57e3167765c6e",
            "description": "The default options passed as a Properties instance to the parse method are not taken into account when the required options are checked at the end of the parsing. If a required option wasn't present among the arguments of the command line and is picked from the default options, a ParseException is thrown.",
            "commit number version hash": 440,
            "commit number": 340,
            "function that changed": [
                {
                    "function name": "handleProperties",
                    "function params": [
                        "properties"
                    ],
                    "file name": "DefaultParser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
                    "full name": "src.main.java.org.apache.commons.cli.DefaultParser.handleProperties"
                },
                {
                    "function name": "updateRequiredOptions",
                    "function params": [
                        "opt"
                    ],
                    "file name": "Parser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.main.java.org.apache.commons.cli.Parser.updateRequiredOptions"
                },
                {
                    "function name": "processOption",
                    "function params": [
                        "arg",
                        "iter"
                    ],
                    "file name": "Parser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.main.java.org.apache.commons.cli.Parser.processOption"
                },
                {
                    "function name": "processProperties",
                    "function params": [
                        "properties"
                    ],
                    "file name": "Parser.java",
                    "file old path": "src/main/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/main/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.main.java.org.apache.commons.cli.Parser.processProperties"
                },
                {
                    "function name": "testPropertyOptionRequired",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.java.org.apache.commons.cli.ParserTestCase.testPropertyOptionRequired"
                }
            ],
            "files that changed": [
                "src/main/java/org/apache/commons/cli/DefaultParser.java",
                "src/main/java/org/apache/commons/cli/Parser.java",
                "src/test/java/org/apache/commons/cli/ParserTestCase.java"
            ]
        },
        {
            "bug index": "37",
            "bug id": "CLI-2",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
            "description": "The options of a OptionGroup appears twice in the usage summary as shown by the \nfollowing example([-c]):\n\nusage:   [-quiet] [-debug] [-ax | -c][-c] -version [-verbose]\n       [-projecthelp] [-help]\n -ax            ax or c\n -c             ax or c\n\nAlso a space is missing after the OptionGroup.\n\nI have corrected this error by modifying the file HelpFormatter.java, line up \n247. I include the modified codes for reference:\n\n           if( group != null /*&& !list.contains(group)*/ ) {\n                             =============> changed\n               if (!list.contains(group)) {\n               =============> added\n                   // add the group to the processed list\n                   list.add( group );\n\n                   // get the names of the options from the OptionGroup\n                   Collection names = group.getNames();\n\n                   buff.append( \"[\" );\n\n                   // for each option in the OptionGroup\n                   for( Iterator iter = names.iterator(); iter.hasNext(); ) {\n                       buff.append( iter.next() );\n                       if( iter.hasNext() ) {\n                           buff.append( \" | \" );\n                       }\n                   }\n                   buff.append( \"] \" );\n                   =============> changed\n               }\n               // else ignore\n           }",
            "commit number version hash": 190,
            "commit number": 336,
            "function that changed": [],
            "files that changed": []
        },
        {
            "bug index": "38",
            "bug id": "CLI-2",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
            "description": "The options of a OptionGroup appears twice in the usage summary as shown by the \nfollowing example([-c]):\n\nusage:   [-quiet] [-debug] [-ax | -c][-c] -version [-verbose]\n       [-projecthelp] [-help]\n -ax            ax or c\n -c             ax or c\n\nAlso a space is missing after the OptionGroup.\n\nI have corrected this error by modifying the file HelpFormatter.java, line up \n247. I include the modified codes for reference:\n\n           if( group != null /*&& !list.contains(group)*/ ) {\n                             =============> changed\n               if (!list.contains(group)) {\n               =============> added\n                   // add the group to the processed list\n                   list.add( group );\n\n                   // get the names of the options from the OptionGroup\n                   Collection names = group.getNames();\n\n                   buff.append( \"[\" );\n\n                   // for each option in the OptionGroup\n                   for( Iterator iter = names.iterator(); iter.hasNext(); ) {\n                       buff.append( iter.next() );\n                       if( iter.hasNext() ) {\n                           buff.append( \" | \" );\n                       }\n                   }\n                   buff.append( \"] \" );\n                   =============> changed\n               }\n               // else ignore\n           }",
            "commit number version hash": 190,
            "commit number": 335,
            "function that changed": [],
            "files that changed": []
        },
        {
            "bug index": "39",
            "bug id": "CLI-2",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "20002f7f4e971349a1c95dd3b05846c5b824b65c",
            "description": "The options of a OptionGroup appears twice in the usage summary as shown by the \nfollowing example([-c]):\n\nusage:   [-quiet] [-debug] [-ax | -c][-c] -version [-verbose]\n       [-projecthelp] [-help]\n -ax            ax or c\n -c             ax or c\n\nAlso a space is missing after the OptionGroup.\n\nI have corrected this error by modifying the file HelpFormatter.java, line up \n247. I include the modified codes for reference:\n\n           if( group != null /*&& !list.contains(group)*/ ) {\n                             =============> changed\n               if (!list.contains(group)) {\n               =============> added\n                   // add the group to the processed list\n                   list.add( group );\n\n                   // get the names of the options from the OptionGroup\n                   Collection names = group.getNames();\n\n                   buff.append( \"[\" );\n\n                   // for each option in the OptionGroup\n                   for( Iterator iter = names.iterator(); iter.hasNext(); ) {\n                       buff.append( iter.next() );\n                       if( iter.hasNext() ) {\n                           buff.append( \" | \" );\n                       }\n                   }\n                   buff.append( \"] \" );\n                   =============> changed\n               }\n               // else ignore\n           }",
            "commit number version hash": 190,
            "commit number": 334,
            "function that changed": [
                {
                    "function name": "stripLeadingAndTrailingQuotes",
                    "function params": [
                        "str"
                    ],
                    "file name": "Util.java",
                    "file old path": "src/java/org/apache/commons/cli/Util.java",
                    "file new path": "src/java/org/apache/commons/cli/Util.java",
                    "full name": "src.java.org.apache.commons.cli.Util.stripLeadingAndTrailingQuotes"
                },
                {
                    "function name": "testStripLeadingAndTrailingQuotes",
                    "function params": [],
                    "file name": "UtilTest.java",
                    "file old path": "src/test/org/apache/commons/cli/UtilTest.java",
                    "file new path": "src/test/org/apache/commons/cli/UtilTest.java",
                    "full name": "src.test.org.apache.commons.cli.UtilTest.testStripLeadingAndTrailingQuotes"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Util.java",
                "src/test/org/apache/commons/cli/UtilTest.java"
            ]
        },
        {
            "bug index": "40",
            "bug id": "CLI-201",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "3433f467554985a6bd9bf530a4810376be6fe250",
            "description": "The Properties instance passed to the Parser.parse() method to initialize the default options may be partially processed. This happens when the properties contains an option that doesn't accept arguments and has a default value that isn't evaluated to \"true\". When this case occurs the processing of the properties is stopped and the remaining options are never handled.\n\nThis is caused by the break statement in Parser.processProperties(Properties), a continue statement should have been used instead.\n\nThe related test in ValueTest is also wrong, there are two assertions that need to be changed:\n\n{code}\nOptions opts = new Options();\nopts.addOption(\"a\", false, \"toggle -a\");\nopts.addOption(\"c\", \"c\", false, \"toggle -c\");\nopts.addOption(OptionBuilder.hasOptionalArg().create('e'));\n\nproperties = new Properties();\nproperties.setProperty( \"a\", \"false\" );\nproperties.setProperty( \"c\", \"no\" );\nproperties.setProperty( \"e\", \"0\" );\n\ncmd = parser.parse(opts, null, properties);\nassertTrue( !cmd.hasOption(\"a\") );\nassertTrue( !cmd.hasOption(\"c\") );\nassertTrue( !cmd.hasOption(\"e\") ); // Wrong, this option accepts an argument and should receive the value \"0\"\n{code}\n\n and the second one:\n\n{code}\nproperties = new Properties();\nproperties.setProperty( \"a\", \"just a string\" );\nproperties.setProperty( \"e\", \"\" );\n\ncmd = parser.parse(opts, null, properties);\nassertTrue( !cmd.hasOption(\"a\") );\nassertTrue( !cmd.hasOption(\"c\") );\nassertTrue( !cmd.hasOption(\"e\") ); // Wrong, this option accepts an argument and should receive an empty string as value\n{code}\n",
            "commit number version hash": 440,
            "commit number": 332,
            "function that changed": [
                {
                    "function name": "processProperties",
                    "function params": [
                        "properties"
                    ],
                    "file name": "Parser.java",
                    "file old path": "src/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.java.org.apache.commons.cli.Parser.processProperties"
                },
                {
                    "function name": "testPropertyOptionFlags",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testPropertyOptionFlags"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Parser.java",
                "src/test/org/apache/commons/cli/ValueTest.java"
            ]
        },
        {
            "bug index": "41",
            "bug id": "CLI-200",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "e7c2198454153e0d74535e21cafbf1583a92de55",
            "description": "{code}\nIndex: CommandLine.java\n===================================================================\n--- CommandLine.java\t(revision 950536)\n+++ CommandLine.java\t(working copy)\n@@ -%ld,%ld +%ld,%ld @@\n      * Return a version of this <code>Option</code> converted to a particular type. \n      *\n      * @param opt the name of the option\n-     * @return the value parsed into a particluar object\n+     * @return the value parsed into a particular object\n      * @throws ParseException if there are problems turning the option value into the desired type\n      * @see PatternOptionBuilder\n      * @since 1.2\n{code}",
            "commit number version hash": 440,
            "commit number": 328,
            "function that changed": [],
            "files that changed": [
                "src/java/org/apache/commons/cli/CommandLine.java"
            ]
        },
        {
            "bug index": "43",
            "bug id": "CLI-182",
            "hexsha": "085a1538fa20d8e48faad49eaffd697f024bf1af",
            "fix_hash": "4c971f08861e8cefb8ca9ac20799bfdad4e973a4",
            "description": "OptionGroup doesn't play nice with options with a long name and no short name. If the selected option hasn't a short name, group.setSelected(option) has no effect.\n",
            "commit number version hash": 440,
            "commit number": 324,
            "function that changed": [
                {
                    "function name": "setSelected",
                    "function params": [
                        "option"
                    ],
                    "file name": "OptionGroup.java",
                    "file old path": "src/java/org/apache/commons/cli/OptionGroup.java",
                    "file new path": "src/java/org/apache/commons/cli/OptionGroup.java",
                    "full name": "src.java.org.apache.commons.cli.OptionGroup.setSelected"
                },
                {
                    "function name": "parse",
                    "function params": [
                        "options",
                        "arguments",
                        "properties",
                        "stopAtNonOption"
                    ],
                    "file name": "Parser.java",
                    "file old path": "src/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.java.org.apache.commons.cli.Parser.parse"
                },
                {
                    "function name": "testMissingRequiredGroup",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.org.apache.commons.cli.ParserTestCase.testMissingRequiredGroup"
                },
                {
                    "function name": "testOptionGroupLong",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.org.apache.commons.cli.ParserTestCase.testOptionGroupLong"
                },
                {
                    "function name": "testDoubleDash1",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.org.apache.commons.cli.ParserTestCase.testDoubleDash1"
                },
                {
                    "function name": "testOptionGroup",
                    "function params": [],
                    "file name": "ParserTestCase.java",
                    "file old path": "src/test/org/apache/commons/cli/ParserTestCase.java",
                    "file new path": "src/test/org/apache/commons/cli/ParserTestCase.java",
                    "full name": "src.test.org.apache.commons.cli.ParserTestCase.testOptionGroup"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/OptionGroup.java",
                "src/java/org/apache/commons/cli/Parser.java",
                "src/test/org/apache/commons/cli/ParserTestCase.java"
            ]
        },
        {
            "bug index": "44",
            "bug id": "CLI-177",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "aa2434d301c49d100f50af544333886a6767ce9d",
            "description": "If the call to OptionBuilder.create() fails with an IllegalArgumentException, the OptionBuilder is not resetted and its next usage may contain unwanted settings. Actually this let the CLI-1.2 RCs fail on IBM JDK 6 running on Maven 2.0.10.",
            "commit number version hash": 342,
            "commit number": 311,
            "function that changed": [
                {
                    "function name": "create",
                    "function params": [],
                    "file name": "OptionBuilder.java",
                    "file old path": "src/java/org/apache/commons/cli/OptionBuilder.java",
                    "file new path": "src/java/org/apache/commons/cli/OptionBuilder.java",
                    "full name": "src.java.org.apache.commons.cli.OptionBuilder.create"
                },
                {
                    "function name": "create",
                    "function params": [
                        "opt"
                    ],
                    "file name": "OptionBuilder.java",
                    "file old path": "src/java/org/apache/commons/cli/OptionBuilder.java",
                    "file new path": "src/java/org/apache/commons/cli/OptionBuilder.java",
                    "full name": "src.java.org.apache.commons.cli.OptionBuilder.create"
                },
                {
                    "function name": "testCreateIncompleteOption",
                    "function params": [],
                    "file name": "OptionBuilderTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionBuilderTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionBuilderTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionBuilderTest.testCreateIncompleteOption"
                },
                {
                    "function name": "testBuilderIsResettedAlways",
                    "function params": [],
                    "file name": "OptionBuilderTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionBuilderTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionBuilderTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionBuilderTest.testBuilderIsResettedAlways"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/OptionBuilder.java",
                "src/test/org/apache/commons/cli/OptionBuilderTest.java"
            ]
        },
        {
            "bug index": "46",
            "bug id": "CLI-175",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "27cf61e22583db8e796e7c14f1f20fbc9538b1ef",
            "description": "Two test methods are failing due to system depending line endings:\n\nFailed tests:\n  testLongLineChunking(org.apache.commons.cli.bug.BugCLI162Test)\n  testLongLineChunkingIndentIgnored(org.apache.commons.cli.bug.BugCLI162Test",
            "commit number version hash": 342,
            "commit number": 309,
            "function that changed": [
                {
                    "function name": "testLongLineChunking",
                    "function params": [],
                    "file name": "BugCLI162Test.java",
                    "file old path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI162Test.testLongLineChunking"
                },
                {
                    "function name": "testPrintHelpLongLines",
                    "function params": [],
                    "file name": "BugCLI162Test.java",
                    "file old path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI162Test.testPrintHelpLongLines"
                },
                {
                    "function name": "testLongLineChunkingIndentIgnored",
                    "function params": [],
                    "file name": "BugCLI162Test.java",
                    "file old path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI162Test.testLongLineChunkingIndentIgnored"
                }
            ],
            "files that changed": [
                "src/test/org/apache/commons/cli/bug/BugCLI162Test.java"
            ]
        },
        {
            "bug index": "48",
            "bug id": "CLI-162",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "02dd7c20646bf67dcfb6f7da6beeb7cdffc6ac22",
            "description": "If there is not enough space to display a word on a single line, HelpFormatter goes into a infinite loops until the JVM crashes with an OutOfMemoryError.\n\nTest case:\n\n{code}\nOptions options = new Options();\noptions.addOption(\"h\", \"help\", false, \"This is a looooong description\");\n\nHelpFormatter formatter = new HelpFormatter();\nformatter.setWidth(20);\nformatter.printHelp(\"app\", options); // hang & crash\n{code}\n\nAn helpful exception indicating the insufficient width would be more appropriate than an OutOfMemoryError.",
            "commit number version hash": 342,
            "commit number": 306,
            "function that changed": [
                {
                    "function name": "renderWrappedText",
                    "function params": [
                        "sb",
                        "width",
                        "nextLineTabStop",
                        "text"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.java.org.apache.commons.cli.HelpFormatter.renderWrappedText"
                },
                {
                    "function name": "testLongLineChunkingIndentIgnored",
                    "function params": [],
                    "file name": "BugCLI162Test.java",
                    "file old path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI162Test.testLongLineChunkingIndentIgnored"
                },
                {
                    "function name": "testLongLineChunking",
                    "function params": [],
                    "file name": "BugCLI162Test.java",
                    "file old path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI162Test.testLongLineChunking"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/HelpFormatter.java",
                "src/test/org/apache/commons/cli/bug/BugCLI162Test.java"
            ]
        },
        {
            "bug index": "50",
            "bug id": "CLI-162",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "2ddaae14dd23643a4b5f71f8274534b0b34556a4",
            "description": "If there is not enough space to display a word on a single line, HelpFormatter goes into a infinite loops until the JVM crashes with an OutOfMemoryError.\n\nTest case:\n\n{code}\nOptions options = new Options();\noptions.addOption(\"h\", \"help\", false, \"This is a looooong description\");\n\nHelpFormatter formatter = new HelpFormatter();\nformatter.setWidth(20);\nformatter.printHelp(\"app\", options); // hang & crash\n{code}\n\nAn helpful exception indicating the insufficient width would be more appropriate than an OutOfMemoryError.",
            "commit number version hash": 342,
            "commit number": 297,
            "function that changed": [
                {
                    "function name": "renderWrappedText",
                    "function params": [
                        "sb",
                        "width",
                        "nextLineTabStop",
                        "text"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.java.org.apache.commons.cli.HelpFormatter.renderWrappedText"
                },
                {
                    "function name": "testInfiniteLoop",
                    "function params": [],
                    "file name": "BugCLI162Test.java",
                    "file old path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI162Test.testInfiniteLoop"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/HelpFormatter.java",
                "src/test/org/apache/commons/cli/bug/BugCLI162Test.java"
            ]
        },
        {
            "bug index": "51",
            "bug id": "CLI-162",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "6c740e79cb07ec9074b2c77822732c0678690ae9",
            "description": "If there is not enough space to display a word on a single line, HelpFormatter goes into a infinite loops until the JVM crashes with an OutOfMemoryError.\n\nTest case:\n\n{code}\nOptions options = new Options();\noptions.addOption(\"h\", \"help\", false, \"This is a looooong description\");\n\nHelpFormatter formatter = new HelpFormatter();\nformatter.setWidth(20);\nformatter.printHelp(\"app\", options); // hang & crash\n{code}\n\nAn helpful exception indicating the insufficient width would be more appropriate than an OutOfMemoryError.",
            "commit number version hash": 342,
            "commit number": 295,
            "function that changed": [
                {
                    "function name": "testPrintHelp",
                    "function params": [
                        "options"
                    ],
                    "file name": "BugCLI162Test.java",
                    "file old path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI162Test.testPrintHelp"
                },
                {
                    "function name": "testPrintHelpLongLines",
                    "function params": [],
                    "file name": "BugCLI162Test.java",
                    "file old path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI162Test.testPrintHelpLongLines"
                }
            ],
            "files that changed": [
                "src/test/org/apache/commons/cli/bug/BugCLI162Test.java"
            ]
        },
        {
            "bug index": "54",
            "bug id": "CLI-162",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "880a9f6c45dbcb14215bb35de21fdbbfaeb89c2e",
            "description": "If there is not enough space to display a word on a single line, HelpFormatter goes into a infinite loops until the JVM crashes with an OutOfMemoryError.\n\nTest case:\n\n{code}\nOptions options = new Options();\noptions.addOption(\"h\", \"help\", false, \"This is a looooong description\");\n\nHelpFormatter formatter = new HelpFormatter();\nformatter.setWidth(20);\nformatter.printHelp(\"app\", options); // hang & crash\n{code}\n\nAn helpful exception indicating the insufficient width would be more appropriate than an OutOfMemoryError.",
            "commit number version hash": 342,
            "commit number": 288,
            "function that changed": [
                {
                    "function name": "renderWrappedText",
                    "function params": [
                        "sb",
                        "width",
                        "nextLineTabStop",
                        "text"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.java.org.apache.commons.cli.HelpFormatter.renderWrappedText"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BugCLI162Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI162Test.setUp"
                },
                {
                    "function name": "testInfiniteLoop",
                    "function params": [],
                    "file name": "BugCLI162Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI162Test.testInfiniteLoop"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/HelpFormatter.java"
            ]
        },
        {
            "bug index": "58",
            "bug id": "CLI-165",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "99aa05af2bfef3980ad8f94230cd077e8d30c5ea",
            "description": "PosixParser keeps processing tokens after a non unrecognized long option when stopAtNonOption is enabled. The tokens after the unrecognized long option are burst, split around '=', etc.. instead of being kept as is.\n\nFor example, with the options 'a' and 'b' defined, 'b' having an argument, the following command line:\n\n{code}--zop -abfoo{code}\n\nis interpreted as:\n\n{code}--zop -a -b foo{code}\n\nbut the last token should remain unchanged.",
            "commit number version hash": 342,
            "commit number": 268,
            "function that changed": [
                {
                    "function name": "flatten",
                    "function params": [
                        "options",
                        "arguments",
                        "stopAtNonOption"
                    ],
                    "file name": "PosixParser.java",
                    "file old path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "file new path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "full name": "src.java.org.apache.commons.cli.PosixParser.flatten"
                },
                {
                    "function name": "testStop3",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.org.apache.commons.cli.PosixParserTest.testStop3"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/PosixParser.java",
                "src/test/org/apache/commons/cli/PosixParserTest.java"
            ]
        },
        {
            "bug index": "59",
            "bug id": "CLI-164",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "b1331806960001da95424315b6103d755107b519",
            "description": "PosixParser doesn't handle properly unrecognized tokens starting with '-' when stopAtNonOption is enabled, the token is simply ignored.\n\nFor example, if the option 'a' is defined, the following command line:\n\n{code}-z -a foo{code}\n\nis interpreted as:\n\n{code}-a foo{code}",
            "commit number version hash": 342,
            "commit number": 267,
            "function that changed": [
                {
                    "function name": "processOptionToken",
                    "function params": [
                        "token",
                        "stopAtNonOption"
                    ],
                    "file name": "PosixParser.java",
                    "file old path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "file new path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "full name": "src.java.org.apache.commons.cli.PosixParser.processOptionToken"
                },
                {
                    "function name": "testUnrecognizedOption2",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.org.apache.commons.cli.PosixParserTest.testUnrecognizedOption2"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/PosixParser.java",
                "src/test/org/apache/commons/cli/PosixParserTest.java"
            ]
        },
        {
            "bug index": "60",
            "bug id": "CLI-164",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "c8606251c904dfaf5303f71b788e12f7fff15fab",
            "description": "PosixParser doesn't handle properly unrecognized tokens starting with '-' when stopAtNonOption is enabled, the token is simply ignored.\n\nFor example, if the option 'a' is defined, the following command line:\n\n{code}-z -a foo{code}\n\nis interpreted as:\n\n{code}-a foo{code}",
            "commit number version hash": 342,
            "commit number": 266,
            "function that changed": [
                {
                    "function name": "flatten",
                    "function params": [
                        "options",
                        "arguments",
                        "stopAtNonOption"
                    ],
                    "file name": "PosixParser.java",
                    "file old path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "file new path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "full name": "src.java.org.apache.commons.cli.PosixParser.flatten"
                },
                {
                    "function name": "processOptionToken",
                    "function params": [
                        "token",
                        "stopAtNonOption"
                    ],
                    "file name": "PosixParser.java",
                    "file old path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "file new path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "full name": "src.java.org.apache.commons.cli.PosixParser.processOptionToken"
                },
                {
                    "function name": "testStop2",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.org.apache.commons.cli.PosixParserTest.testStop2"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/PosixParser.java",
                "src/test/org/apache/commons/cli/PosixParserTest.java"
            ]
        },
        {
            "bug index": "61",
            "bug id": "CLI-163",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "9c5ce3501938cff01d78b7a1fff10a60abe9e0cf",
            "description": "PosixParser doesn't stop the bursting process of a token if stopAtNonOption is enabled and a non option character is encountered.\n\nFor example if the options a and b are defined, with stopAtNonOption=true the following command line:\n\n{code}-azb{code}\n\nis turned into:\n\n{code}-a zb -b{code}\n\nthe right output should be:\n\n{code}-a zb{code}\n",
            "commit number version hash": 342,
            "commit number": 265,
            "function that changed": [
                {
                    "function name": "flatten",
                    "function params": [
                        "options",
                        "arguments",
                        "stopAtNonOption"
                    ],
                    "file name": "PosixParser.java",
                    "file old path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "file new path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "full name": "src.java.org.apache.commons.cli.PosixParser.flatten"
                },
                {
                    "function name": "burstToken",
                    "function params": [
                        "token",
                        "stopAtNonOption"
                    ],
                    "file name": "PosixParser.java",
                    "file old path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "file new path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "full name": "src.java.org.apache.commons.cli.PosixParser.burstToken"
                },
                {
                    "function name": "process",
                    "function params": [
                        "value"
                    ],
                    "file name": "PosixParser.java",
                    "file old path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "file new path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "full name": "src.java.org.apache.commons.cli.PosixParser.process"
                },
                {
                    "function name": "testStopBursting",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.org.apache.commons.cli.PosixParserTest.testStopBursting"
                },
                {
                    "function name": "testMultipleWithLong",
                    "function params": [],
                    "file name": "PosixParserTest.java",
                    "file old path": "src/test/org/apache/commons/cli/PosixParserTest.java",
                    "file new path": "src/test/org/apache/commons/cli/PosixParserTest.java",
                    "full name": "src.test.org.apache.commons.cli.PosixParserTest.testMultipleWithLong"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/PosixParser.java",
                "src/test/org/apache/commons/cli/PosixParserTest.java"
            ]
        },
        {
            "bug index": "64",
            "bug id": "CLI-6",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "eed25612b11caf1f4e6e572e58db4306f31803c9",
            "description": "CLI does not handle unknown options, i.e. throw an 'UnrecognizedOptionException'.\nThe reason is that the logic of PosixParser.processOptionToken() is incomplete:\n\n        if (this.options.hasOption(token))\n        {\n            currentOption = this.options.getOption(token);\n            tokens.add(token);\n        }\n        else if (stopAtNonOption)\n        {\n            eatTheRest = true;\n        }\n\n\nie. if the stopAtNonOption is not set and the token is unknown, it\nwill be ignored. there has to be a default case added:\n\n\n          else {\n            tokens.add(token);\n        }\n\nin which case the caller will throw the proper exception, because\nin Parse there is another check whether the option exists.\n\ni would've submitted a patch but did not find where to, sorry.\npeter",
            "commit number version hash": 190,
            "commit number": 259,
            "function that changed": [
                {
                    "function name": "testParse_WithUnexpectedShortOption",
                    "function params": [],
                    "file name": "ParserTest.java",
                    "file old path": "src/test/org/apache/commons/cli2/commandline/ParserTest.java",
                    "file new path": "src/test/org/apache/commons/cli2/commandline/ParserTest.java",
                    "full name": "src.test.org.apache.commons.cli2.commandline.ParserTest.testParse_WithUnexpectedShortOption"
                }
            ],
            "files that changed": [
                "src/test/org/apache/commons/cli2/commandline/ParserTest.java"
            ]
        },
        {
            "bug index": "71",
            "bug id": "CLI-156",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "d72a578a8949e4b1c437ec55997d8786836f139c",
            "description": "When an Options object is used to parse a second set of command arguments it won't throw a MissingOptionException.\n\n{code:java}\nimport org.apache.commons.cli.CommandLine;\nimport org.apache.commons.cli.GnuParser;\nimport org.apache.commons.cli.OptionBuilder;\nimport org.apache.commons.cli.Options;\nimport org.apache.commons.cli.ParseException;\n\npublic class Example\n{\n\tpublic static void main(String[] args) throws ParseException\n\t{\n\t\tbrokenExample();\n\t\tworkingExample();\n\t}\n\n\t// throws exception as expected\n\tprivate static void workingExample() throws ParseException\n\t{\n\t\tString[] args = {};\n\n\t\tOptions opts = new Options();\n\t\topts.addOption(OptionBuilder.isRequired().create('v'));\n\n\t\tGnuParser parser = new GnuParser();\n\t\tCommandLine secondCL = parser.parse(opts, args);\n\n\t\tSystem.out.println(\"Done workingExample\");\n\t}\n\n\t// fails to throw exception on second invocation of parse\n\tprivate static void brokenExample() throws ParseException\n\t{\n\t\tString[] firstArgs = { \"-v\" };\n\t\tString[] secondArgs = {};\n\n\t\tOptions opts = new Options();\n\t\topts.addOption(OptionBuilder.isRequired().create('v'));\n\n\t\tGnuParser parser = new GnuParser();\n\t\tCommandLine firstCL = parser.parse(opts, firstArgs);\n\t\tCommandLine secondCL = parser.parse(opts, secondArgs);\n\n\t\tSystem.out.println(\"Done brokenExample\");\n\t}\n}\n{code}\n\nThis is a result of the Options object returning the reference to its own list and the parsers modifying that list. The first call is removing the required options as they are found and subsequent calls get back an empty list.",
            "commit number version hash": 342,
            "commit number": 214,
            "function that changed": [
                {
                    "function name": "setOptions",
                    "function params": [
                        "options"
                    ],
                    "file name": "Parser.java",
                    "file old path": "src/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.java.org.apache.commons.cli.Parser.setOptions"
                },
                {
                    "function name": "testReuseOptionsTwice",
                    "function params": [],
                    "file name": "ParseRequiredTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
                    "full name": "src.test.org.apache.commons.cli.ParseRequiredTest.testReuseOptionsTwice"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Parser.java",
                "src/test/org/apache/commons/cli/ParseRequiredTest.java"
            ]
        },
        {
            "bug index": "72",
            "bug id": "CLI-149",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "fea35870b69c0d37ab36ab6783edbc7aacc0842c",
            "description": "The MissingOptionException.getMessage() string changed from CLI 1.0 > 1.1. \n\nCLI 1.0 was poorly formatted but readable:\nMissing required options: -format-source-properties\n\nCLI 1.1 is almost unreadable:\nMissing required options: formatsourceproperties\n\nIn CLI 1.0 Options.addOption(Option) prefixed the stored options with a \"-\" and in CLI 1.1 it doesn't.\n\nI would suggest changing Parser.checkRequiredOptions() to add the options to the error message with a prefix of \" -\":\n\nOLD: \n            // loop through the required options\n            while (iter.hasNext())\n            {\n                buff.append(iter.next());\n            }\n\nNEW: \n            // loop through the required options\n            while (iter.hasNext())\n            {\n                buff.append(\" -\" + iter.next());\n            }\n\nResulting in:\nMissing required options: -format -source -properties\n",
            "commit number version hash": 342,
            "commit number": 212,
            "function that changed": [
                {
                    "function name": "checkRequiredOptions",
                    "function params": [],
                    "file name": "Parser.java",
                    "file old path": "src/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.java.org.apache.commons.cli.Parser.checkRequiredOptions"
                },
                {
                    "function name": "testMissingOptionsException",
                    "function params": [],
                    "file name": "OptionsTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionsTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionsTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionsTest.testMissingOptionsException"
                },
                {
                    "function name": "testMissingRequiredOptions",
                    "function params": [],
                    "file name": "ParseRequiredTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
                    "full name": "src.test.org.apache.commons.cli.ParseRequiredTest.testMissingRequiredOptions"
                },
                {
                    "function name": "testMissingRequiredOption",
                    "function params": [],
                    "file name": "ParseRequiredTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
                    "full name": "src.test.org.apache.commons.cli.ParseRequiredTest.testMissingRequiredOption"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Parser.java",
                "src/test/org/apache/commons/cli/OptionsTest.java",
                "src/test/org/apache/commons/cli/ParseRequiredTest.java"
            ]
        },
        {
            "bug index": "73",
            "bug id": "CLI-151",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "4f407378c93b9e2a8e24c855e8bed5eb12bf7a06",
            "description": "The method findWrapPos(...) in the HelpFormatter is a couple of bugs in the way that it deals with the \"startPos\" variable.  This causes it to format every line beyond the first line by \"startPos\" to many characters, beyond the specified width.  \n\nTo see this, create an option with a long description, and then use the help formatter to print it.  The first line will be the correct length.  The 2nd, 3rd, etc lines will all be too long.\n\nI don't have a patch (sorry) - but here is a corrected version of the method.\n\nI fixed it in two places - both were using \"width + startPos\" when they should have been using width.\n\n{code}\n protected int findWrapPos(String text, int width, int startPos)\n    {\n        int pos = -1;\n\n        // the line ends before the max wrap pos or a new line char found\n        if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n            || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))\n        {\n            return pos+1;\n        }\n        else if ((width) >= text.length())\n        {\n            return -1;\n        }\n\n\n        // look for the last whitespace character before startPos+width\n        pos = width;\n\n        char c;\n\n        while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))\n        {\n            --pos;\n        }\n\n        // if we found it - just return\n        if (pos > startPos)\n        {\n            return pos;\n        }\n        \n        // must look for the first whitespace chearacter after startPos \n        // + width\n        pos = startPos + width;\n\n        while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))\n        {\n            ++pos;\n        }\n\n        return (pos == text.length())        ? (-1) : pos;\n    }\n{code}",
            "commit number version hash": 342,
            "commit number": 210,
            "function that changed": [
                {
                    "function name": "renderWrappedText",
                    "function params": [
                        "sb",
                        "width",
                        "nextLineTabStop",
                        "text"
                    ],
                    "file name": "HelpFormatter.java",
                    "file old path": "src/java/org/apache/commons/cli/HelpFormatter.java",
                    "file new path": "src/java/org/apache/commons/cli/HelpFormatter.java",
                    "full name": "src.java.org.apache.commons.cli.HelpFormatter.renderWrappedText"
                },
                {
                    "function name": "testPrintWrapped",
                    "function params": [],
                    "file name": "HelpFormatterTest.java",
                    "file old path": "src/test/org/apache/commons/cli/HelpFormatterTest.java",
                    "file new path": "src/test/org/apache/commons/cli/HelpFormatterTest.java",
                    "full name": "src.test.org.apache.commons.cli.HelpFormatterTest.testPrintWrapped"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/HelpFormatter.java",
                "src/test/org/apache/commons/cli/HelpFormatterTest.java"
            ]
        },
        {
            "bug index": "75",
            "bug id": "CLI-141",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "1b0a32df8c9d7011d01a27b5fc682f48714b0d9b",
            "description": "The Option class contains some logic around the \"hasArg\" boolean that seems to be cruft and no longer works correctly. There is no need for this boolean anymore and its only usage could be replaced with hasArg() / hasArgs() calls.",
            "commit number version hash": 342,
            "commit number": 198,
            "function that changed": [
                {
                    "function name": "Option",
                    "function params": [
                        "opt",
                        "longOpt",
                        "hasArg",
                        "description"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.Option"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.toString"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Option.java"
            ]
        },
        {
            "bug index": "76",
            "bug id": "CLI-138",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "4e5351db96d4640e93bd52b95e03e951ab601871",
            "description": "It appears that neither 1.0 not 1.1 have a '--' option as the 'end processing options' option.  This is immensely useful to allow parameter that are not options that start with a hyphen.  grep for example does this.  I think it is a bug rather than an enhancement request, I think Commons CLI should support '--' option.",
            "commit number version hash": 190,
            "commit number": 196,
            "function that changed": [],
            "files that changed": [
                "src/test/org/apache/commons/cli/bug/BugCLI148Test.java"
            ]
        },
        {
            "bug index": "77",
            "bug id": "CLI-148",
            "hexsha": "4381ba54c845402f18760fb04ff1f6db1922f6b2",
            "fix_hash": "f3f97332ec76c66891c516cbaf3b53cedfdfcdfc",
            "description": "The command-line parser interprets arguments to options as options if they match existing options.  Example:\n\nAssume\n-a arg\n-b arg\n\n-a b -b a was fixed in CLI-71, but\n\n-a \"-b\" returns \nUnable to parse command line: no argument for:a\n\n-a \"-c\" is OK if \"-c\" is not defined as an option.\n\nThe option in my case was \"-password\" and their password happened to match one of the options.",
            "commit number version hash": 342,
            "commit number": 194,
            "function that changed": [
                {
                    "function name": "testWorkaround2",
                    "function params": [],
                    "file name": "BugCLI138Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI138Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI138Test.testWorkaround2"
                },
                {
                    "function name": "testWorkaround1",
                    "function params": [],
                    "file name": "BugCLI138Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI138Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI138Test.testWorkaround1"
                },
                {
                    "function name": "buildCommandLineOptions",
                    "function params": [],
                    "file name": "BugCLI138Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI138Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI138Test.buildCommandLineOptions"
                }
            ],
            "files that changed": []
        },
        {
            "bug index": "78",
            "bug id": "CLI-21",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
            "description": "In\norg.apache.commons.cli.Option\npublic method clone is implemented by creating a new instance through one of \nthe class Constructors, and then assigning values as required through the \nsetter methods.\n\nThis means that any subclasses of the Option class will not return a true \nclone, but a new Option instance instead.\n\nA proper implementation of clone should use super.clone() to create a new \ninstance, rather than calling the class constructor.  This allows shallows \nclones to propogate correctly down to subclasses.",
            "commit number version hash": 190,
            "commit number": 188,
            "function that changed": [
                {
                    "function name": "clone",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.clone"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Option.java"
            ]
        },
        {
            "bug index": "79",
            "bug id": "CLI-135",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "bfe6bd8634895645aa71d6a6dc668545297d7413",
            "description": "ERROR: 7006: org.apache.commons.cli.Option: Return type of method 'public boolean addValue(java.lang.String)' has been changed to void\nERROR: 7009: org.apache.commons.cli.Option: Accessibility of method 'public boolean addValue(java.lang.String)' has been decreased from public to\npackage",
            "commit number version hash": 190,
            "commit number": 187,
            "function that changed": [
                {
                    "function name": "addValue",
                    "function params": [
                        "object"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.addValue"
                },
                {
                    "function name": "addValue",
                    "function params": [
                        "value"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.addValue"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Option.java"
            ]
        },
        {
            "bug index": "80",
            "bug id": "CLI-135",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "97744806d59820b096fb502b1d51ca54b5d0921d",
            "description": "ERROR: 7006: org.apache.commons.cli.Option: Return type of method 'public boolean addValue(java.lang.String)' has been changed to void\nERROR: 7009: org.apache.commons.cli.Option: Accessibility of method 'public boolean addValue(java.lang.String)' has been decreased from public to\npackage",
            "commit number version hash": 190,
            "commit number": 186,
            "function that changed": [
                {
                    "function name": "addValueForProcessing",
                    "function params": [
                        "value"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.addValueForProcessing"
                },
                {
                    "function name": "addValue",
                    "function params": [
                        "object"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.addValue"
                },
                {
                    "function name": "addValue",
                    "function params": [
                        "value"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.addValue"
                },
                {
                    "function name": "processArgs",
                    "function params": [
                        "opt",
                        "iter"
                    ],
                    "file name": "Parser.java",
                    "file old path": "src/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.java.org.apache.commons.cli.Parser.processArgs"
                },
                {
                    "function name": "processProperties",
                    "function params": [
                        "properties"
                    ],
                    "file name": "Parser.java",
                    "file old path": "src/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.java.org.apache.commons.cli.Parser.processProperties"
                },
                {
                    "function name": "TestOption",
                    "function params": [
                        "value"
                    ],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionTest.TestOption"
                },
                {
                    "function name": "testClear",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionTest.testClear"
                },
                {
                    "function name": "testClone",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionTest.testClone"
                },
                {
                    "function name": "TestOption",
                    "function params": [
                        "opt",
                        "hasArg",
                        "description"
                    ],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionTest.TestOption"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Option.java",
                "src/java/org/apache/commons/cli/Parser.java",
                "src/test/org/apache/commons/cli/OptionTest.java"
            ]
        },
        {
            "bug index": "81",
            "bug id": "CLI-134",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "08cf0f5d990cdc0daa251fd1a84d011e8cbecc9a",
            "description": "General problem - the interface adds methods.\n\nSolution - remove the interfaces from the methods and people who want to use them will have to use the Parser abstract class instead of the CommandLineParser interface. ",
            "commit number version hash": 190,
            "commit number": 185,
            "function that changed": [
                {
                    "function name": "testShortOptionalArgValue",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testShortOptionalArgValue"
                },
                {
                    "function name": "testPropertyOverrideValues",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testPropertyOverrideValues"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.setUp"
                },
                {
                    "function name": "testLongOptionalNArgValues",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testLongOptionalNArgValues"
                },
                {
                    "function name": "testPropertyOptionSingularValue",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testPropertyOptionSingularValue"
                },
                {
                    "function name": "testShortOptionalArgNoValue",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testShortOptionalArgNoValue"
                },
                {
                    "function name": "testLongOptionalNoValue",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testLongOptionalNoValue"
                },
                {
                    "function name": "testPropertyOptionFlags",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testPropertyOptionFlags"
                },
                {
                    "function name": "testLongOptionalArgValues",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testLongOptionalArgValues"
                },
                {
                    "function name": "testLongOptionalArgValue",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testLongOptionalArgValue"
                },
                {
                    "function name": "testShortOptionalNArgValues",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testShortOptionalNArgValues"
                },
                {
                    "function name": "testShortOptionalArgValues",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testShortOptionalArgValues"
                },
                {
                    "function name": "testPropertyOptionMultipleValues",
                    "function params": [],
                    "file name": "ValueTest.java",
                    "file old path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "file new path": "src/test/org/apache/commons/cli/ValueTest.java",
                    "full name": "src.test.org.apache.commons.cli.ValueTest.testPropertyOptionMultipleValues"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/CommandLineParser.java",
                "src/test/org/apache/commons/cli/ValueTest.java"
            ]
        },
        {
            "bug index": "82",
            "bug id": "CLI-134",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "7220ac2f6b0dd525e5384e2d5708fb63475f836c",
            "description": "General problem - the interface adds methods.\n\nSolution - remove the interfaces from the methods and people who want to use them will have to use the Parser abstract class instead of the CommandLineParser interface. ",
            "commit number version hash": 190,
            "commit number": 184,
            "function that changed": [],
            "files that changed": [
                "src/java/org/apache/commons/cli/CommandLineParser.java",
                "src/test/org/apache/commons/cli/GnuParseTest.java",
                "src/test/org/apache/commons/cli/ParseTest.java"
            ]
        },
        {
            "bug index": "83",
            "bug id": "CLI-21",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "1545ae48a67ad7f2c18942f4c2dfaf9ab8f7eccd",
            "description": "In\norg.apache.commons.cli.Option\npublic method clone is implemented by creating a new instance through one of \nthe class Constructors, and then assigning values as required through the \nsetter methods.\n\nThis means that any subclasses of the Option class will not return a true \nclone, but a new Option instance instead.\n\nA proper implementation of clone should use super.clone() to create a new \ninstance, rather than calling the class constructor.  This allows shallows \nclones to propogate correctly down to subclasses.",
            "commit number version hash": 190,
            "commit number": 183,
            "function that changed": [
                {
                    "function name": "clone",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.clone"
                },
                {
                    "function name": "testSubclass",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionTest.testSubclass"
                },
                {
                    "function name": "DefaultOption",
                    "function params": [
                        "opt",
                        "description",
                        "defaultValue"
                    ],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionTest.DefaultOption"
                },
                {
                    "function name": "DefaultOption",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionTest.DefaultOption"
                },
                {
                    "function name": "testClone",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "file new path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionTest.testClone"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Option.java",
                "src/test/org/apache/commons/cli/OptionTest.java"
            ]
        },
        {
            "bug index": "84",
            "bug id": "CLI-133",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "3880640ee6268a2ecb2912e1ae896153dc2229e5",
            "description": "If you try to do a hasOption(null), you get a NPE:\n\njava.lang.NullPointerException\n\tat org.apache.commons.cli.Util.stripLeadingHyphens(Util.java:39)\n\tat org.apache.commons.cli.CommandLine.resolveOption(CommandLine.java:166)\n\tat org.apache.commons.cli.CommandLine.hasOption(CommandLine.java:68)\n\nEither hasOption should reject the null argument, or the function should simply return false.  I think the latter makes more since, as this is how Java collections generally work.",
            "commit number version hash": 190,
            "commit number": 175,
            "function that changed": [
                {
                    "function name": "stripLeadingHyphens",
                    "function params": [
                        "str"
                    ],
                    "file name": "Util.java",
                    "file old path": "src/java/org/apache/commons/cli/Util.java",
                    "file new path": "src/java/org/apache/commons/cli/Util.java",
                    "full name": "src.java.org.apache.commons.cli.Util.stripLeadingHyphens"
                },
                {
                    "function name": "testStripLeadingHyphens",
                    "function params": [],
                    "file name": "UtilTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/UtilTest.java",
                    "full name": "src.test.org.apache.commons.cli.UtilTest.testStripLeadingHyphens"
                },
                {
                    "function name": "testOrder",
                    "function params": [],
                    "file name": "BugCLI133Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI133Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI133Test.testOrder"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Util.java"
            ]
        },
        {
            "bug index": "85",
            "bug id": "CLI-71",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "c155cebd4127367a7b649ca167c0c69284cc066b",
            "description": "I found a weakness of Jakarta Commons CLI and want to explain it with a simple\nexample: \n\nOur program provides 2 options: \n\n1.\t-a or --algo <name>: The -a option requires an argument.\n2.\t-k or --key <value>: The -k option requires an argument too.\n\na)\n\nIf you pass the following command line arguments everything will be ok:\n-a Caesar -k A\n\nAfter evaluation:\n\n\u2022\t\"Caesar\" is the parameter of the -a option and\n\u2022\t\"A\" is the parameter of the -k option.\n\nb)\n\nHowever an org.apache.commons.cli.MissingArgumentException: no argument for:k is\nthrown if you pass the following input:\n\n-a Caesar -k a\n\nThe Parser assumes that the argument \"a\" after the -k option, is the -a option\nmissing the hyphen. At the end of this description there is Java code for\nexecuting this problem.\n\nInformation:\n\nThe handling of this command line \n\n-a Caesar -k a \n\nworks in Getopt without any problem:\n\n\u2022\t\"Caesar\" is the parameter of the -a option and\n\u2022\t\"a\" of the -k option.\n\nAfter parsing a valid option Getopt always takes the next (available) command\nline argument as the option's parameter if the option requires an argument -\nmeans if you pass to the command line \n\n-k -a Caesar\n\nAfter evaluation:\n\n\u2022\t\"a\" is the parameter of the -k option\n\u2022\tthe \"Caesar\" argument is just ignored\n\nIf the option's parameter (<value>) represents an optional argument the next\nargument is not required, if it represents a valid option - means if you pass to\nthe command line \n\n-k -a Caesar\n\nAfter evaluation:\n\n\u2022\t\"Caesar\" is the parameter of the -a option\n\u2022\tk option is set without a parameter - in this case a default value makes sense.\n\nLast but not least here is the code snippet for the CLI Test:\n\nimport org.apache.commons.cli.CommandLine;\nimport org.apache.commons.cli.CommandLineParser;\nimport org.apache.commons.cli.Option;\nimport org.apache.commons.cli.Options;\nimport org.apache.commons.cli.ParseException;\nimport org.apache.commons.cli.PosixParser;\n\npublic class TestCommonsCLI {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t\n\t\tOptions options = new Options();\n\t\t\n\t\tOption algorithm = new Option(\"a\" , \"algo\", true, \"the algorithm which it to\nperform executing\");\n\t\talgorithm.setArgName(\"algorithm name\");\n\t\toptions.addOption(algorithm);\n\t\t\n\t\tOption key = new Option(\"k\" , \"key\", true, \"the key the setted algorithm uses\nto process\");\n\t\talgorithm.setArgName(\"value\");\n\t\toptions.addOption(key);\n\t\t\n\t\tCommandLineParser parser = new PosixParser();\n\t\t\n\t\t try {\n\t\t\tCommandLine line = parser.parse( options, args);\n\t\t\t\n\t\t\tif(line.hasOption('a')){\n\t\t    \tSystem.out.println(\"algo: \"+ line.getOptionValue( \"a\" ));\n\t\t    }\n\t\t\t\n\t\t\tif(line.hasOption('k')){\n\t\t    \tSystem.out.println(\"key: \" + line.getOptionValue('k'));\n\t\t    }\n\t\t\t\n\t\t\t\n\t\t} catch (ParseException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\n}",
            "commit number version hash": 190,
            "commit number": 168,
            "function that changed": [
                {
                    "function name": "clearValues",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.clearValues"
                },
                {
                    "function name": "parse",
                    "function params": [
                        "options",
                        "arguments",
                        "properties",
                        "stopAtNonOption"
                    ],
                    "file name": "Parser.java",
                    "file old path": "src/java/org/apache/commons/cli/Parser.java",
                    "file new path": "src/java/org/apache/commons/cli/Parser.java",
                    "full name": "src.java.org.apache.commons.cli.Parser.parse"
                },
                {
                    "function name": "testClear",
                    "function params": [],
                    "file name": "OptionTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/OptionTest.java",
                    "full name": "src.test.org.apache.commons.cli.OptionTest.testClear"
                },
                {
                    "function name": "testBasic",
                    "function params": [],
                    "file name": "BugCLI71Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI71Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI71Test.testBasic"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BugCLI71Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI71Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI71Test.setUp"
                },
                {
                    "function name": "testGetsDefaultIfOptional",
                    "function params": [],
                    "file name": "BugCLI71Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI71Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI71Test.testGetsDefaultIfOptional"
                },
                {
                    "function name": "testMistakenArgument",
                    "function params": [],
                    "file name": "BugCLI71Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI71Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI71Test.testMistakenArgument"
                },
                {
                    "function name": "testLackOfError",
                    "function params": [],
                    "file name": "BugCLI71Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI71Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI71Test.testLackOfError"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/Option.java",
                "src/java/org/apache/commons/cli/Parser.java"
            ]
        },
        {
            "bug index": "86",
            "bug id": "CLI-51",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "2ff9573ffb08dd52ec3a55a49f2d77a1e94efbdf",
            "description": "If a parameter value is passed that contains a hyphen as the (delimited) first \ncharacter, CLI parses this a parameter. For example using the call\njava myclass -t \"-something\"\nResults in the parser creating the invalid parameter -o (noting that it is \nskipping the 's')\n\nMy code is using the Posix parser as follows\nOptions options = buildCommandLineOptions();\nCommandLineParser parser = new PosixParser();\nCommandLine commandLine = null;\ntry {\n\t\t\t\n\tcommandLine = parser.parse(options, args);\n}\ncatch (ParseException e) {\n\t\t\t\n\tSystem.out.println(\"Invalid parameters. \" + e.getMessage() + NEW_LINE);\n\tSystem.exit(EXIT_CODE_ERROR);\n}\n\nThis has been tested against the nightly build dated 20050503.",
            "commit number version hash": 190,
            "commit number": 167,
            "function that changed": [
                {
                    "function name": "flatten",
                    "function params": [
                        "options",
                        "arguments",
                        "stopAtNonOption"
                    ],
                    "file name": "PosixParser.java",
                    "file old path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "file new path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "full name": "src.java.org.apache.commons.cli.PosixParser.flatten"
                },
                {
                    "function name": "burstToken",
                    "function params": [
                        "token",
                        "stopAtNonOption"
                    ],
                    "file name": "PosixParser.java",
                    "file old path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "file new path": "src/java/org/apache/commons/cli/PosixParser.java",
                    "full name": "src.java.org.apache.commons.cli.PosixParser.burstToken"
                },
                {
                    "function name": "test",
                    "function params": [],
                    "file name": "BugCLI51Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI51Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI51Test.test"
                },
                {
                    "function name": "buildCommandLineOptions",
                    "function params": [],
                    "file name": "BugCLI51Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI51Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI51Test.buildCommandLineOptions"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/PosixParser.java"
            ]
        },
        {
            "bug index": "87",
            "bug id": "CLI-13",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "b0e1b80b6d4a10a9c9f46539bc4c7a3cce55886e",
            "description": "Hi\n\nIf I have:\n\nfinal String debugOpt = \"debug\";\n\tOption debug = OptionBuilder\n\t    .withArgName(debugOpt)\n\t    .withDescription(\"turn on debugging\")\n\t    .withLongOpt(debugOpt)\n\t    .create('d');\n\nand then later I do:\n\nString dbg = commandLine.getOptionValue(debugOpt);\n\nthen dbg will be null. Instead, I have to use getOptionValue('d'). This seems\ncontrary to the docs (see bottom of\nhttp://jakarta.apache.org/commons/cli/usage.html), which implies that I should\nbe able to query the commandLine object using a full string, rather than just\nthe string's first character.\n\nCan I suggest that the API of OptionBuilder be made clearer so that it is\nobvious that you can have long and short option names---perhaps make the\ncreate() method take no arguments (thus forcing long and short arg names to be\nset explicitly). (Also, there seems to be some confusion between the terms\n'argument' and 'option' in the API, but perhaps that is just me).\n\nAlso, I would hop to be able to query commandLine by either a single char or an\nentire string, as suggested by the docs.\n\nThanks,\n\nChris",
            "commit number version hash": 190,
            "commit number": 166,
            "function that changed": [
                {
                    "function name": "getOptionValues",
                    "function params": [
                        "opt"
                    ],
                    "file name": "CommandLine.java",
                    "file old path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.java.org.apache.commons.cli.CommandLine.getOptionValues"
                },
                {
                    "function name": "addOption",
                    "function params": [
                        "opt"
                    ],
                    "file name": "CommandLine.java",
                    "file old path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.java.org.apache.commons.cli.CommandLine.addOption"
                },
                {
                    "function name": "iterator",
                    "function params": [],
                    "file name": "CommandLine.java",
                    "file old path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.java.org.apache.commons.cli.CommandLine.iterator"
                },
                {
                    "function name": "getOptions",
                    "function params": [],
                    "file name": "CommandLine.java",
                    "file old path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.java.org.apache.commons.cli.CommandLine.getOptions"
                },
                {
                    "function name": "getOptionObject",
                    "function params": [
                        "opt"
                    ],
                    "file name": "CommandLine.java",
                    "file old path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.java.org.apache.commons.cli.CommandLine.getOptionObject"
                },
                {
                    "function name": "resolveOption",
                    "function params": [
                        "opt"
                    ],
                    "file name": "CommandLine.java",
                    "file old path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.java.org.apache.commons.cli.CommandLine.resolveOption"
                },
                {
                    "function name": "hasOption",
                    "function params": [
                        "opt"
                    ],
                    "file name": "CommandLine.java",
                    "file old path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "file new path": "src/java/org/apache/commons/cli/CommandLine.java",
                    "full name": "src.java.org.apache.commons.cli.CommandLine.hasOption"
                },
                {
                    "function name": "equals",
                    "function params": [
                        "o"
                    ],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.equals"
                },
                {
                    "function name": "hashCode",
                    "function params": [],
                    "file name": "Option.java",
                    "file old path": "src/java/org/apache/commons/cli/Option.java",
                    "file new path": "src/java/org/apache/commons/cli/Option.java",
                    "full name": "src.java.org.apache.commons.cli.Option.hashCode"
                },
                {
                    "function name": "testCLI13",
                    "function params": [],
                    "file name": "BugCLI13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI13Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI13Test.testCLI13"
                }
            ],
            "files that changed": [
                "src/java/org/apache/commons/cli/CommandLine.java",
                "src/java/org/apache/commons/cli/Option.java"
            ]
        },
        {
            "bug index": "92",
            "bug id": "CLI-18",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "7054900f3187c70c60e9e86f1c2bcd4c13d7878f",
            "description": "If String footer contains windows new line, printHelp throws exception.\nIf it contains only LF line endings, it works fine on Linux and Windows platforms.",
            "commit number version hash": 190,
            "commit number": 156,
            "function that changed": [
                {
                    "function name": "testCLI18",
                    "function params": [],
                    "file name": "BugCLI18Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli/bug/BugCLI18Test.java",
                    "full name": "src.test.org.apache.commons.cli.bug.BugCLI18Test.testCLI18"
                },
                {
                    "function name": "BugCLI18Test",
                    "function params": [],
                    "file name": "BugCLI18Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli2/bug/BugCLI18Test.java",
                    "full name": "src.test.org.apache.commons.cli2.bug.BugCLI18Test.BugCLI18Test"
                },
                {
                    "function name": "testBug",
                    "function params": [],
                    "file name": "BugCLI18Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/cli2/bug/BugCLI18Test.java",
                    "full name": "src.test.org.apache.commons.cli2.bug.BugCLI18Test.testBug"
                }
            ],
            "files that changed": []
        },
        {
            "bug index": "95",
            "bug id": "CLI-23",
            "hexsha": "062ee682595d9cd42a93a7476956a119d4f2ab2e",
            "fix_hash": "e2e9472412b3a88f698c80127c4883d9fe78c5f5",
            "description": "processProperties(Properties properties) in Parser.java calls opt.hasArgs().  \nThe hasArgs() function in Option.java returns true if the option has multiple \nvalues (this.numberOfArgs > 1). So for options with a single argument this \nreturns false. \nA simple fix is to change the opt.hasArgs() call to opt.hasArg() in Parser.java.",
            "commit number version hash": 190,
            "commit number": 149,
            "function that changed": [
                {
                    "function name": "testDefaultDateFormatValidate",
                    "function params": [],
                    "file name": "DateValidatorTest.java",
                    "file old path": "src/test/org/apache/commons/cli2/validation/DateValidatorTest.java",
                    "file new path": "src/test/org/apache/commons/cli2/validation/DateValidatorTest.java",
                    "full name": "src.test.org.apache.commons.cli2.validation.DateValidatorTest.testDefaultDateFormatValidate"
                },
                {
                    "function name": "testDefaultTimeFormatValidate",
                    "function params": [],
                    "file name": "DateValidatorTest.java",
                    "file old path": "src/test/org/apache/commons/cli2/validation/DateValidatorTest.java",
                    "file new path": "src/test/org/apache/commons/cli2/validation/DateValidatorTest.java",
                    "full name": "src.test.org.apache.commons.cli2.validation.DateValidatorTest.testDefaultTimeFormatValidate"
                },
                {
                    "function name": "testDefaultDateTimeFormatValidate",
                    "function params": [],
                    "file name": "DateValidatorTest.java",
                    "file old path": "src/test/org/apache/commons/cli2/validation/DateValidatorTest.java",
                    "file new path": "src/test/org/apache/commons/cli2/validation/DateValidatorTest.java",
                    "full name": "src.test.org.apache.commons.cli2.validation.DateValidatorTest.testDefaultDateTimeFormatValidate"
                }
            ],
            "files that changed": [
                "src/test/org/apache/commons/cli2/validation/DateValidatorTest.java"
            ]
        }
    ]
}